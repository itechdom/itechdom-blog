[{"title":"gulp","indent":0},{"indent":0,"title":"gulp"},{"indent":1,"title":"Concepts"},{"indent":2,"title":"Event streams"},{"indent":2,"title":"Vinyl files"},{"indent":2,"title":"Globs"},{"indent":2,"title":"Node Streams"},{"indent":2,"title":"Regex"},{"indent":2,"title":"Plugins"},{"indent":3,"title":"What does a good plugin look like?"},{"indent":3,"content":"<h3>What does a good plugin look like?</h3><div class=\"highlight highlight-js\"><pre><span class=\"pl-c\">// through2 is a thin wrapper around node transform streams</span>\n<span class=\"pl-k\">var</span> through <span class=\"pl-k\">=</span> <span class=\"pl-c1\">require</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&apos;</span>through2<span class=\"pl-pds\">&apos;</span></span>);\n<span class=\"pl-k\">var</span> gutil <span class=\"pl-k\">=</span> <span class=\"pl-c1\">require</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&apos;</span>gulp-util<span class=\"pl-pds\">&apos;</span></span>);\n<span class=\"pl-k\">var</span> PluginError <span class=\"pl-k\">=</span> gutil.<span class=\"pl-c1\">PluginError</span>;\n\n<span class=\"pl-c\">// Consts</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">PLUGIN_NAME</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">&apos;</span>gulp-prefixer<span class=\"pl-pds\">&apos;</span></span>;\n\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">prefixStream</span>(<span class=\"pl-smi\">prefixText</span>) {\n  <span class=\"pl-k\">var</span> stream <span class=\"pl-k\">=</span> <span class=\"pl-c1\">through</span>();\n  stream.<span class=\"pl-c1\">write</span>(prefixText);\n  <span class=\"pl-k\">return</span> stream;\n}\n\n<span class=\"pl-c\">// Plugin level function(dealing with files)</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">gulpPrefixer</span>(<span class=\"pl-smi\">prefixText</span>) {\n\n  <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>prefixText) {\n    <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">PluginError</span>(<span class=\"pl-c1\">PLUGIN_NAME</span>, <span class=\"pl-s\"><span class=\"pl-pds\">&apos;</span>Missing prefix text!<span class=\"pl-pds\">&apos;</span></span>);\n  }\n  prefixText <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">Buffer</span>(prefixText); <span class=\"pl-c\">// allocate ahead of time</span>\n\n  <span class=\"pl-c\">// Creating a stream through which each file will pass</span>\n  <span class=\"pl-k\">return</span> through.<span class=\"pl-c1\">obj</span>(<span class=\"pl-k\">function</span>(<span class=\"pl-smi\">file</span>, <span class=\"pl-smi\">enc</span>, <span class=\"pl-smi\">cb</span>) {\n    <span class=\"pl-k\">if</span> (file.<span class=\"pl-c1\">isNull</span>()) {\n      <span class=\"pl-c\">// return empty file</span>\n      <span class=\"pl-k\">return</span> <span class=\"pl-c1\">cb</span>(<span class=\"pl-c1\">null</span>, file);\n    }\n    <span class=\"pl-k\">if</span> (file.<span class=\"pl-c1\">isBuffer</span>()) {\n      file.<span class=\"pl-c1\">contents</span> <span class=\"pl-k\">=</span> Buffer.<span class=\"pl-c1\">concat</span>([prefixText, file.<span class=\"pl-c1\">contents</span>]);\n    }\n    <span class=\"pl-k\">if</span> (file.<span class=\"pl-c1\">isStream</span>()) {\n      file.<span class=\"pl-c1\">contents</span> <span class=\"pl-k\">=</span> file.<span class=\"pl-c1\">contents</span>.<span class=\"pl-c1\">pipe</span>(<span class=\"pl-c1\">prefixStream</span>(prefixText));\n    }\n\n    <span class=\"pl-c1\">cb</span>(<span class=\"pl-c1\">null</span>, file);\n\n  });\n\n}\n\n<span class=\"pl-c\">// Exporting the plugin main function</span>\n<span class=\"pl-c1\">module</span>.<span class=\"pl-c1\">exports</span> <span class=\"pl-k\">=</span> gulpPrefixer;</pre></div>"},{"indent":1,"title":"Third party"},{"indent":2,"title":"Through"},{"indent":3,"title":"https://www.npmjs.com/package/through2"},{"indent":3,"title":"Creates streams that are both readable and writeable"},{"indent":4,"title":"through suggests that files go through two functions"},{"indent":5,"title":"Read"},{"indent":5,"title":"Write"},{"indent":1,"title":"Resources"},{"indent":2,"title":"https://github.com/substack/stream-handbook"},{"indent":3,"title":"node stream handbook"},{"indent":2,"title":"https://github.com/wearefractal/vinyl-fs"},{"indent":3,"title":"vinyl-fs"},{"indent":4,"title":"metadata with a file?"},{"indent":2,"title":"https://github.com/gulpjs/gulp/blob/master/docs/API.md"},{"indent":3,"title":"gulp docs"},{"indent":3,"title":"https://github.com/isaacs/node-glob"},{"indent":4,"title":"glob options"},{"indent":3,"title":"https://github.com/gulpjs/gulp/blob/master/docs/API.md"},{"indent":4,"title":"Gulp Api"},{"indent":5,"title":"gulp.dest"},{"indent":5,"title":"gulp.src "},{"indent":5,"title":"..."},{"indent":3,"title":"https://github.com/gulpjs/gulp/blob/master/docs/writing-a-plugin/README.md"},{"indent":4,"title":"Writing a plugin"}]