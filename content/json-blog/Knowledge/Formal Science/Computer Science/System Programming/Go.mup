[{"title":"Concepts","key":0,"id":176,"level":0,"ideas":{"13":{"title":"defer","content":"<h2 style=\"outline: none; color: rgb(51, 51, 51); line-height: 32px; margin-top: 0px; margin-bottom: 0px; font-family: sans-serif;\">Defer</h2><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">A defer statement defers the execution of a function until the surrounding function returns.</p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">The deferred call's arguments are evaluated immediately, but the function call is not executed until the surrounding function returns.</p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\"><br></p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\"><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px;\">package main</span></font></p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\"><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px;\"><br></span></font></p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\"><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px;\">import \"fmt\"</span></font></p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\"><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px;\"><br></span></font></p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\"><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px;\">func main() {</span></font></p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\"><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px; white-space: normal;\">\t</span></font></span><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px;\">defer fmt.Println(\"world\")</span></font></p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\"><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px;\"><br></span></font></p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\"><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px; white-space: normal;\">\t</span></font></span><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px;\">fmt.Println(\"hello\")</span></font></p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\"><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px;\">}</span></font></p>","key":13,"id":214,"level":0,"ideas":{"1":{"title":"stacking defers","content":"<h2 style=\"outline: none; color: rgb(51, 51, 51); line-height: 32px; margin-top: 0px; margin-bottom: 0px; font-family: sans-serif;\">Stacking defers</h2><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">Deferred function calls are pushed onto a stack. When a function returns, its deferred calls are executed in last-in-first-out order.</p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">To learn more about defer statements read this&nbsp;<a href=\"https://blog.golang.org/defer-panic-and-recover\" target=\"_blank\" style=\"outline: none; color: rgb(55, 94, 171);\">blog post</a>.</p>","key":1,"id":215,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"stacking defers","id":215,"attr":{"attachment":{"contentType":"text/html","content":"<h2 style=\"outline: none; color: rgb(51, 51, 51); line-height: 32px; margin-top: 0px; margin-bottom: 0px; font-family: sans-serif;\">Stacking defers</h2><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">Deferred function calls are pushed onto a stack. When a function returns, its deferred calls are executed in last-in-first-out order.</p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">To learn more about defer statements read this&nbsp;<a href=\"https://blog.golang.org/defer-panic-and-recover\" target=\"_blank\" style=\"outline: none; color: rgb(55, 94, 171);\">blog post</a>.</p>"},"style":{}}}]},"14":{"title":"Pointers","content":"<h2 style=\"outline: none; color: rgb(51, 51, 51); line-height: 32px; margin-top: 0px; margin-bottom: 0px; font-family: sans-serif;\">Pointers</h2><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">Go has pointers. A pointer holds the memory address of a variable.</p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">The type&nbsp;<code style=\"outline: none; font-family: Inconsolata, monospace; border-radius: 4px; color: rgb(51, 51, 51); padding-right: 2px; padding-left: 2px; background-color: rgb(250, 250, 250);\">*T</code>&nbsp;is a pointer to a&nbsp;<code style=\"outline: none; font-family: Inconsolata, monospace; border-radius: 4px; color: rgb(51, 51, 51); padding-right: 2px; padding-left: 2px; background-color: rgb(250, 250, 250);\">T</code>&nbsp;value. Its zero value is&nbsp;<code style=\"outline: none; font-family: Inconsolata, monospace; border-radius: 4px; color: rgb(51, 51, 51); padding-right: 2px; padding-left: 2px; background-color: rgb(250, 250, 250);\">nil</code>.</p><pre style=\"outline: none; font-family: Inconsolata, monospace; padding: 10px; font-size: 16px; line-height: 24px; background-color: rgb(250, 250, 250);\">var p *int</pre><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">The&nbsp;<code style=\"outline: none; font-family: Inconsolata, monospace; border-radius: 4px; color: rgb(51, 51, 51); padding-right: 2px; padding-left: 2px; background-color: rgb(250, 250, 250);\">&amp;</code>&nbsp;operator generates a pointer to its operand.</p><pre style=\"outline: none; font-family: Inconsolata, monospace; padding: 10px; font-size: 16px; line-height: 24px; background-color: rgb(250, 250, 250);\">i := 42\np = &amp;i</pre><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">The&nbsp;<code style=\"outline: none; font-family: Inconsolata, monospace; border-radius: 4px; color: rgb(51, 51, 51); padding-right: 2px; padding-left: 2px; background-color: rgb(250, 250, 250);\">*</code>&nbsp;operator denotes the pointer's underlying value.</p><pre style=\"outline: none; font-family: Inconsolata, monospace; padding: 10px; font-size: 16px; line-height: 24px; background-color: rgb(250, 250, 250);\">fmt.Println(*p) // read i through the pointer p\n*p = 21         // set i through the pointer p</pre><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">This is known as \"dereferencing\" or \"indirecting\".</p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">Unlike C, Go has no pointer arithmetic.</p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\"><br></p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\"><br></p>","key":14,"id":216,"level":1,"ideas":{"1":{"title":"example","content":"<div>package main</div><div><br></div><div>import \"fmt\"</div><div><br></div><div>func main() {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>i, j := 42, 2701</div><div><br></div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>p := &amp;i &nbsp; &nbsp; &nbsp; &nbsp; // point to i</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>fmt.Println(*p) // read i through the pointer</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>*p = 21 &nbsp; &nbsp; &nbsp; &nbsp; // set i through the pointer</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>fmt.Println(i) &nbsp;// see the new value of i</div><div><br></div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>p = &amp;j &nbsp; &nbsp; &nbsp; &nbsp; // point to j</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>*p = *p / 37 &nbsp; // divide j through the pointer</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>fmt.Println(j) // see the new value of j</div><div>}</div>","key":1,"id":217,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"example","id":217,"attr":{"attachment":{"contentType":"text/html","content":"<div>package main</div><div><br></div><div>import \"fmt\"</div><div><br></div><div>func main() {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>i, j := 42, 2701</div><div><br></div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>p := &amp;i &nbsp; &nbsp; &nbsp; &nbsp; // point to i</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>fmt.Println(*p) // read i through the pointer</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>*p = 21 &nbsp; &nbsp; &nbsp; &nbsp; // set i through the pointer</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>fmt.Println(i) &nbsp;// see the new value of i</div><div><br></div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>p = &amp;j &nbsp; &nbsp; &nbsp; &nbsp; // point to j</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>*p = *p / 37 &nbsp; // divide j through the pointer</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>fmt.Println(j) // see the new value of j</div><div>}</div>"},"style":{}}}]},"15":{"title":"types","key":15,"id":218,"level":2,"ideas":{"1":{"title":"Zero values","key":1,"id":203,"level":0,"ideas":{"1":{"title":"if variables aren't given an implicit type","key":1,"id":204,"level":0,"ideasArr":[]},"2":{"title":"for a pointer it's a nil","key":2,"id":234,"level":1,"ideasArr":[]}},"ideasArr":[{"title":"if variables aren't given an implicit type","id":204},{"title":"for a pointer it's a nil","id":234}]},"2":{"title":"type conversion","key":2,"id":205,"level":1,"ideas":{"1":{"title":"https://tour.golang.org/basics/13","key":1,"id":206,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/basics/13","id":206}]},"3":{"title":"Basic types","key":3,"id":201,"level":2,"ideas":{"1":{"title":"https://tour.golang.org/basics/11","key":1,"id":202,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/basics/11","id":202}]},"4":{"title":"implicit types","key":4,"id":198,"level":3,"ideas":{"1":{"title":"k:=\"hello\"","key":1,"id":199,"level":0,"ideas":{"1":{"title":"k is a string","key":1,"id":200,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"k is a string","id":200}]}},"ideasArr":[{"title":"k:=\"hello\"","id":199,"ideas":{"1":{"title":"k is a string","key":1,"id":200,"level":0,"ideasArr":[]}}}]},"5":{"title":"omitting types on variable declarations","content":"<div>package main</div><div><br></div><div>import \"fmt\"</div><div><br></div><div>var i, j int = 1, 2</div><div><br></div><div>func main() {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>var c, python, java = true, false, \"no!\"</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>fmt.Println(i, j, c, python, java)</div><div>}</div>","key":5,"id":197,"level":4,"ideasArr":[]},"6":{"title":"declaration syntax","key":6,"id":194,"level":5,"ideas":{"1":{"title":"https://blog.golang.org/gos-declaration-syntax","key":1,"id":195,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://blog.golang.org/gos-declaration-syntax","id":195}]},"7":{"title":"Shifting bits","key":7,"id":207,"level":6,"ideas":{"1":{"title":"https://tour.golang.org/basics/16","key":1,"id":208,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/basics/16","id":208}]},"8":{"title":"Structs","key":8,"id":222,"level":7,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/2","key":1,"id":223,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/2","id":223}]},"9":{"title":"Arrays","key":9,"id":224,"level":8,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/6","key":1,"id":225,"level":0,"ideasArr":[]},"2":{"title":"slices","key":2,"id":226,"level":1,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/7","key":1,"id":227,"level":0,"ideasArr":[]},"2":{"title":"they are just references to a section of the array","key":2,"id":228,"level":1,"ideasArr":[]},"3":{"title":"more common than arrays","key":3,"id":229,"level":2,"ideas":{"2":{"title":"slice literal","key":2,"id":231,"level":0,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/9","key":1,"id":230,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/9","id":230,"attr":{"style":{}}}]}},"ideasArr":[{"title":"slice literal","id":231,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/9","key":1,"id":230,"level":0,"ideasArr":[]}}}]},"4":{"title":"length and capacity","key":4,"id":232,"level":3,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/11","key":1,"id":233,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/11","id":233}]},"5":{"title":"Operations","key":5,"id":238,"level":4,"ideas":{"1":{"title":"make","key":1,"id":239,"level":0,"ideas":{"1":{"title":"create dynamically sized arrays","key":1,"id":235,"level":0,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/13","key":1,"id":236,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/13","id":236}]}},"ideasArr":[{"title":"create dynamically sized arrays","id":235,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/13","key":1,"id":236,"level":0,"ideasArr":[]}},"attr":{"style":{}}}]},"2":{"title":"append","key":2,"id":240,"level":1,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/15","key":1,"id":241,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/15","id":241}]}},"ideasArr":[{"title":"make","id":239,"ideas":{"1":{"title":"create dynamically sized arrays","key":1,"id":235,"level":0,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/13","key":1,"id":236,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/13","id":236}]}}},{"title":"append","id":240,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/15","key":1,"id":241,"level":0,"ideasArr":[]}}}]},"6":{"title":"Range","key":6,"id":242,"level":5,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/16","key":1,"id":243,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/16","id":243}]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/7","id":227},{"title":"they are just references to a section of the array","id":228},{"title":"more common than arrays","id":229,"ideas":{"2":{"title":"slice literal","key":2,"id":231,"level":0,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/9","key":1,"id":230,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/9","id":230,"attr":{"style":{}}}]}},"attr":{"collapsed":true,"style":{}}},{"title":"length and capacity","id":232,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/11","key":1,"id":233,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Operations","id":238,"ideas":{"1":{"title":"make","key":1,"id":239,"level":0,"ideas":{"1":{"title":"create dynamically sized arrays","key":1,"id":235,"level":0,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/13","key":1,"id":236,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/13","id":236}]}},"ideasArr":[{"title":"create dynamically sized arrays","id":235,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/13","key":1,"id":236,"level":0,"ideasArr":[]}},"attr":{"style":{}}}]},"2":{"title":"append","key":2,"id":240,"level":1,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/15","key":1,"id":241,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/15","id":241}]}},"attr":{"collapsed":true,"style":{}}},{"title":"Range","id":242,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/16","key":1,"id":243,"level":0,"ideasArr":[]}}}]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/6","id":225},{"title":"slices","id":226,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/7","key":1,"id":227,"level":0,"ideasArr":[]},"2":{"title":"they are just references to a section of the array","key":2,"id":228,"level":1,"ideasArr":[]},"3":{"title":"more common than arrays","key":3,"id":229,"level":2,"ideas":{"2":{"title":"slice literal","key":2,"id":231,"level":0,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/9","key":1,"id":230,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/9","id":230,"attr":{"style":{}}}]}},"ideasArr":[{"title":"slice literal","id":231,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/9","key":1,"id":230,"level":0,"ideasArr":[]}}}]},"4":{"title":"length and capacity","key":4,"id":232,"level":3,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/11","key":1,"id":233,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/11","id":233}]},"5":{"title":"Operations","key":5,"id":238,"level":4,"ideas":{"1":{"title":"make","key":1,"id":239,"level":0,"ideas":{"1":{"title":"create dynamically sized arrays","key":1,"id":235,"level":0,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/13","key":1,"id":236,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/13","id":236}]}},"ideasArr":[{"title":"create dynamically sized arrays","id":235,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/13","key":1,"id":236,"level":0,"ideasArr":[]}},"attr":{"style":{}}}]},"2":{"title":"append","key":2,"id":240,"level":1,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/15","key":1,"id":241,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/15","id":241}]}},"ideasArr":[{"title":"make","id":239,"ideas":{"1":{"title":"create dynamically sized arrays","key":1,"id":235,"level":0,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/13","key":1,"id":236,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/13","id":236}]}}},{"title":"append","id":240,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/15","key":1,"id":241,"level":0,"ideasArr":[]}}}]},"6":{"title":"Range","key":6,"id":242,"level":5,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/16","key":1,"id":243,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/16","id":243}]}},"attr":{"style":{},"collapsed":true}}]},"10":{"title":"Maps","key":10,"id":244,"level":9,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/19","key":1,"id":245,"level":0,"ideasArr":[]},"2":{"title":"Map literal","key":2,"id":246,"level":1,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/20","key":1,"id":247,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/20","id":247}]},"3":{"title":"Operations","key":3,"id":248,"level":2,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/22","key":1,"id":249,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/22","id":249}]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/19","id":245},{"title":"Map literal","id":246,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/20","key":1,"id":247,"level":0,"ideasArr":[]}}},{"title":"Operations","id":248,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/22","key":1,"id":249,"level":0,"ideasArr":[]}}}]}},"ideasArr":[{"title":"Zero values","id":203,"ideas":{"1":{"title":"if variables aren't given an implicit type","key":1,"id":204,"level":0,"ideasArr":[]},"2":{"title":"for a pointer it's a nil","key":2,"id":234,"level":1,"ideasArr":[]}},"attr":{"style":{}}},{"title":"type conversion","id":205,"ideas":{"1":{"title":"https://tour.golang.org/basics/13","key":1,"id":206,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Basic types","id":201,"ideas":{"1":{"title":"https://tour.golang.org/basics/11","key":1,"id":202,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"implicit types","id":198,"ideas":{"1":{"title":"k:=\"hello\"","key":1,"id":199,"level":0,"ideas":{"1":{"title":"k is a string","key":1,"id":200,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"k is a string","id":200}]}},"attr":{"collapsed":true,"style":{}}},{"title":"omitting types on variable declarations","id":197,"attr":{"attachment":{"contentType":"text/html","content":"<div>package main</div><div><br></div><div>import \"fmt\"</div><div><br></div><div>var i, j int = 1, 2</div><div><br></div><div>func main() {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>var c, python, java = true, false, \"no!\"</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>fmt.Println(i, j, c, python, java)</div><div>}</div>"},"style":{}}},{"title":"declaration syntax","id":194,"ideas":{"1":{"title":"https://blog.golang.org/gos-declaration-syntax","key":1,"id":195,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Shifting bits","id":207,"ideas":{"1":{"title":"https://tour.golang.org/basics/16","key":1,"id":208,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Structs","id":222,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/2","key":1,"id":223,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Arrays","id":224,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/6","key":1,"id":225,"level":0,"ideasArr":[]},"2":{"title":"slices","key":2,"id":226,"level":1,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/7","key":1,"id":227,"level":0,"ideasArr":[]},"2":{"title":"they are just references to a section of the array","key":2,"id":228,"level":1,"ideasArr":[]},"3":{"title":"more common than arrays","key":3,"id":229,"level":2,"ideas":{"2":{"title":"slice literal","key":2,"id":231,"level":0,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/9","key":1,"id":230,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/9","id":230,"attr":{"style":{}}}]}},"ideasArr":[{"title":"slice literal","id":231,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/9","key":1,"id":230,"level":0,"ideasArr":[]}}}]},"4":{"title":"length and capacity","key":4,"id":232,"level":3,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/11","key":1,"id":233,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/11","id":233}]},"5":{"title":"Operations","key":5,"id":238,"level":4,"ideas":{"1":{"title":"make","key":1,"id":239,"level":0,"ideas":{"1":{"title":"create dynamically sized arrays","key":1,"id":235,"level":0,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/13","key":1,"id":236,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/13","id":236}]}},"ideasArr":[{"title":"create dynamically sized arrays","id":235,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/13","key":1,"id":236,"level":0,"ideasArr":[]}},"attr":{"style":{}}}]},"2":{"title":"append","key":2,"id":240,"level":1,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/15","key":1,"id":241,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/15","id":241}]}},"ideasArr":[{"title":"make","id":239,"ideas":{"1":{"title":"create dynamically sized arrays","key":1,"id":235,"level":0,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/13","key":1,"id":236,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/13","id":236}]}}},{"title":"append","id":240,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/15","key":1,"id":241,"level":0,"ideasArr":[]}}}]},"6":{"title":"Range","key":6,"id":242,"level":5,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/16","key":1,"id":243,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/16","id":243}]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/7","id":227},{"title":"they are just references to a section of the array","id":228},{"title":"more common than arrays","id":229,"ideas":{"2":{"title":"slice literal","key":2,"id":231,"level":0,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/9","key":1,"id":230,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/9","id":230,"attr":{"style":{}}}]}},"attr":{"collapsed":true,"style":{}}},{"title":"length and capacity","id":232,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/11","key":1,"id":233,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Operations","id":238,"ideas":{"1":{"title":"make","key":1,"id":239,"level":0,"ideas":{"1":{"title":"create dynamically sized arrays","key":1,"id":235,"level":0,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/13","key":1,"id":236,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/13","id":236}]}},"ideasArr":[{"title":"create dynamically sized arrays","id":235,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/13","key":1,"id":236,"level":0,"ideasArr":[]}},"attr":{"style":{}}}]},"2":{"title":"append","key":2,"id":240,"level":1,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/15","key":1,"id":241,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/15","id":241}]}},"attr":{"collapsed":true,"style":{}}},{"title":"Range","id":242,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/16","key":1,"id":243,"level":0,"ideasArr":[]}}}]}},"attr":{"style":{},"collapsed":true}},{"title":"Maps","id":244,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/19","key":1,"id":245,"level":0,"ideasArr":[]},"2":{"title":"Map literal","key":2,"id":246,"level":1,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/20","key":1,"id":247,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/20","id":247}]},"3":{"title":"Operations","key":3,"id":248,"level":2,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/22","key":1,"id":249,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/22","id":249}]}},"attr":{"collapsed":true,"style":{}}}]},"16":{"title":"functions","key":16,"id":219,"level":3,"ideas":{"1":{"title":"functions can return any number of results","content":"<div>package main</div><div><br></div><div>import \"fmt\"</div><div><br></div><div>func swap(x, y string) (string, string) {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>return y, x</div><div>}</div><div><br></div><div>func main() {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>a, b := swap(\"hello\", \"world\")</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>fmt.Println(a, b)</div><div>}</div>","key":1,"id":196,"level":0,"ideasArr":[]},"2":{"title":"They can be passed around","key":2,"id":250,"level":1,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/24","key":1,"id":251,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/24","id":251}]},"3":{"title":"closures","content":"<div>package main</div><div><br></div><div>import \"fmt\"</div><div><br></div><div>func adder() func(int) int {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>sum := 0</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>return func(x int) int {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t\t</span></span>sum += x</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t\t</span></span>return sum</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>}</div><div>}</div><div><br></div><div>func main() {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>pos, neg := adder(), adder()</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>for i := 0; i &lt; 10; i++ {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t\t</span></span>fmt.Println(</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t\t\t</span></span>pos(i),</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t\t\t</span></span>neg(-2*i),</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t\t</span></span>)</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>}</div><div>}</div>","key":3,"id":252,"level":2,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/25","key":1,"id":253,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/25","id":253}]},"4":{"title":"Methods","key":4,"id":254,"level":3,"ideas":{"1":{"title":"https://tour.golang.org/methods/1","key":1,"id":255,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/methods/1","id":255}]}},"ideasArr":[{"title":"functions can return any number of results","id":196,"attr":{"attachment":{"contentType":"text/html","content":"<div>package main</div><div><br></div><div>import \"fmt\"</div><div><br></div><div>func swap(x, y string) (string, string) {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>return y, x</div><div>}</div><div><br></div><div>func main() {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>a, b := swap(\"hello\", \"world\")</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>fmt.Println(a, b)</div><div>}</div>"},"style":{}}},{"title":"They can be passed around","id":250,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/24","key":1,"id":251,"level":0,"ideasArr":[]}}},{"title":"closures","id":252,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/25","key":1,"id":253,"level":0,"ideasArr":[]}},"attr":{"attachment":{"contentType":"text/html","content":"<div>package main</div><div><br></div><div>import \"fmt\"</div><div><br></div><div>func adder() func(int) int {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>sum := 0</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>return func(x int) int {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t\t</span></span>sum += x</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t\t</span></span>return sum</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>}</div><div>}</div><div><br></div><div>func main() {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>pos, neg := adder(), adder()</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>for i := 0; i &lt; 10; i++ {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t\t</span></span>fmt.Println(</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t\t\t</span></span>pos(i),</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t\t\t</span></span>neg(-2*i),</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t\t</span></span>)</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>}</div><div>}</div>"},"style":{}}},{"title":"Methods","id":254,"ideas":{"1":{"title":"https://tour.golang.org/methods/1","key":1,"id":255,"level":0,"ideasArr":[]}}}]},"18":{"title":"Control structures","key":18,"id":221,"level":4,"ideas":{"1":{"title":"for loop","content":"https://tour.golang.org/flowcontrol/1","key":1,"id":209,"level":0,"ideas":{"1":{"title":"for replaces while","key":1,"id":210,"level":0,"ideasArr":[]},"2":{"title":"infinite loops","content":"<div>package main</div><div><br></div><div>func main() {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>for {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>}</div><div>}</div>","key":2,"id":211,"level":1,"ideasArr":[]},"3":{"title":"Short if statement","content":"https://tour.golang.org/flowcontrol/6","key":3,"id":212,"level":2,"ideasArr":[]}},"ideasArr":[{"title":"for replaces while","id":210},{"title":"infinite loops","id":211,"attr":{"attachment":{"contentType":"text/html","content":"<div>package main</div><div><br></div><div>func main() {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>for {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>}</div><div>}</div>"},"style":{}}},{"title":"Short if statement","id":212,"attr":{"attachment":{"contentType":"text/html","content":"https://tour.golang.org/flowcontrol/6"},"style":{}}}]},"2":{"title":"switch statement","content":"https://tour.golang.org/flowcontrol/10","key":2,"id":213,"level":1,"ideasArr":[]}},"ideasArr":[{"title":"for loop","id":209,"attr":{"attachment":{"contentType":"text/html","content":"https://tour.golang.org/flowcontrol/1"},"style":{},"collapsed":true},"ideas":{"1":{"title":"for replaces while","key":1,"id":210,"level":0,"ideasArr":[]},"2":{"title":"infinite loops","content":"<div>package main</div><div><br></div><div>func main() {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>for {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>}</div><div>}</div>","key":2,"id":211,"level":1,"ideasArr":[]},"3":{"title":"Short if statement","content":"https://tour.golang.org/flowcontrol/6","key":3,"id":212,"level":2,"ideasArr":[]}}},{"title":"switch statement","id":213,"attr":{"attachment":{"contentType":"text/html","content":"https://tour.golang.org/flowcontrol/10"},"style":{}}}]},"19":{"title":"LRU cache","key":19,"id":259,"level":5,"ideas":{"1":{"title":"http://mcicpc.cs.atu.edu/archives/2012/mcpc2012/lru/lru.html","key":1,"id":260,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"http://mcicpc.cs.atu.edu/archives/2012/mcpc2012/lru/lru.html","id":260}]},"20":{"title":"Thread safe","content":"<b style=\"color: rgb(37, 37, 37); font-family: sans-serif; line-height: 22.4px;\">Thread safety</b><span style=\"color: rgb(37, 37, 37); font-family: sans-serif; line-height: 22.4px;\">&nbsp;is a&nbsp;</span><a href=\"https://en.wikipedia.org/wiki/Computer_programming\" title=\"Computer programming\" style=\"color: rgb(11, 0, 128); font-family: sans-serif; line-height: 22.4px; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;\">computer programming</a><span style=\"color: rgb(37, 37, 37); font-family: sans-serif; line-height: 22.4px;\">&nbsp;concept applicable in the context of&nbsp;</span><a href=\"https://en.wikipedia.org/wiki/Multi-threaded\" title=\"Multi-threaded\" class=\"mw-redirect\" style=\"color: rgb(11, 0, 128); font-family: sans-serif; line-height: 22.4px; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;\">multi-threaded</a><span style=\"color: rgb(37, 37, 37); font-family: sans-serif; line-height: 22.4px;\">&nbsp;programs. A piece of code is&nbsp;</span><b style=\"color: rgb(37, 37, 37); font-family: sans-serif; line-height: 22.4px;\">thread-safe</b><span style=\"color: rgb(37, 37, 37); font-family: sans-serif; line-height: 22.4px;\">&nbsp;if it only manipulates shared data structures in a manner that guarantees safe execution by multiple threads at the same time. There are various strategies for making thread-safe data structures.</span><sup id=\"cite_ref-1\" class=\"reference\" style=\"line-height: 1; unicode-bidi: isolate; white-space: nowrap; font-size: 11.2px; color: rgb(37, 37, 37); font-family: sans-serif;\"><a href=\"https://en.wikipedia.org/wiki/Thread_safety#cite_note-1\" style=\"color: rgb(11, 0, 128); background: none;\">[1]</a></sup><sup id=\"cite_ref-2\" class=\"reference\" style=\"line-height: 1; unicode-bidi: isolate; white-space: nowrap; font-size: 11.2px; color: rgb(37, 37, 37); font-family: sans-serif;\"><a href=\"https://en.wikipedia.org/wiki/Thread_safety#cite_note-2\" style=\"color: rgb(11, 0, 128); background: none;\">[2]</a></sup>","key":20,"id":261,"level":6,"ideas":{"1":{"title":"https://en.wikipedia.org/wiki/Thread_safety","key":1,"id":263,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://en.wikipedia.org/wiki/Thread_safety","id":263}]},"6.5":{"title":"Archeticture","key":6.5,"id":220,"level":7,"ideas":{"1":{"title":"Go run in packages","key":1,"id":191,"level":0,"ideas":{"1":{"title":"math/rand","key":1,"id":192,"level":0,"ideas":{"1":{"title":"any package that starts with \"package rand\"","key":1,"id":193,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"any package that starts with \"package rand\"","id":193}]}},"ideasArr":[{"title":"math/rand","id":192,"ideas":{"1":{"title":"any package that starts with \"package rand\"","key":1,"id":193,"level":0,"ideasArr":[]}}}]}},"ideasArr":[{"title":"Go run in packages","id":191,"ideas":{"1":{"title":"math/rand","key":1,"id":192,"level":0,"ideas":{"1":{"title":"any package that starts with \"package rand\"","key":1,"id":193,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"any package that starts with \"package rand\"","id":193}]}},"attr":{"style":{},"collapsed":true}}]}},"ideasArr":[{"title":"defer","id":214,"attr":{"attachment":{"contentType":"text/html","content":"<h2 style=\"outline: none; color: rgb(51, 51, 51); line-height: 32px; margin-top: 0px; margin-bottom: 0px; font-family: sans-serif;\">Defer</h2><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">A defer statement defers the execution of a function until the surrounding function returns.</p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">The deferred call's arguments are evaluated immediately, but the function call is not executed until the surrounding function returns.</p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\"><br></p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\"><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px;\">package main</span></font></p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\"><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px;\"><br></span></font></p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\"><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px;\">import \"fmt\"</span></font></p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\"><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px;\"><br></span></font></p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\"><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px;\">func main() {</span></font></p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\"><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px; white-space: normal;\">\t</span></font></span><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px;\">defer fmt.Println(\"world\")</span></font></p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\"><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px;\"><br></span></font></p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\"><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px; white-space: normal;\">\t</span></font></span><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px;\">fmt.Println(\"hello\")</span></font></p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\"><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 16px; line-height: 24px;\">}</span></font></p>"},"style":{},"collapsed":true},"ideas":{"1":{"title":"stacking defers","content":"<h2 style=\"outline: none; color: rgb(51, 51, 51); line-height: 32px; margin-top: 0px; margin-bottom: 0px; font-family: sans-serif;\">Stacking defers</h2><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">Deferred function calls are pushed onto a stack. When a function returns, its deferred calls are executed in last-in-first-out order.</p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">To learn more about defer statements read this&nbsp;<a href=\"https://blog.golang.org/defer-panic-and-recover\" target=\"_blank\" style=\"outline: none; color: rgb(55, 94, 171);\">blog post</a>.</p>","key":1,"id":215,"level":0,"ideasArr":[]}}},{"title":"Pointers","id":216,"attr":{"attachment":{"contentType":"text/html","content":"<h2 style=\"outline: none; color: rgb(51, 51, 51); line-height: 32px; margin-top: 0px; margin-bottom: 0px; font-family: sans-serif;\">Pointers</h2><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">Go has pointers. A pointer holds the memory address of a variable.</p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">The type&nbsp;<code style=\"outline: none; font-family: Inconsolata, monospace; border-radius: 4px; color: rgb(51, 51, 51); padding-right: 2px; padding-left: 2px; background-color: rgb(250, 250, 250);\">*T</code>&nbsp;is a pointer to a&nbsp;<code style=\"outline: none; font-family: Inconsolata, monospace; border-radius: 4px; color: rgb(51, 51, 51); padding-right: 2px; padding-left: 2px; background-color: rgb(250, 250, 250);\">T</code>&nbsp;value. Its zero value is&nbsp;<code style=\"outline: none; font-family: Inconsolata, monospace; border-radius: 4px; color: rgb(51, 51, 51); padding-right: 2px; padding-left: 2px; background-color: rgb(250, 250, 250);\">nil</code>.</p><pre style=\"outline: none; font-family: Inconsolata, monospace; padding: 10px; font-size: 16px; line-height: 24px; background-color: rgb(250, 250, 250);\">var p *int</pre><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">The&nbsp;<code style=\"outline: none; font-family: Inconsolata, monospace; border-radius: 4px; color: rgb(51, 51, 51); padding-right: 2px; padding-left: 2px; background-color: rgb(250, 250, 250);\">&amp;</code>&nbsp;operator generates a pointer to its operand.</p><pre style=\"outline: none; font-family: Inconsolata, monospace; padding: 10px; font-size: 16px; line-height: 24px; background-color: rgb(250, 250, 250);\">i := 42\np = &amp;i</pre><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">The&nbsp;<code style=\"outline: none; font-family: Inconsolata, monospace; border-radius: 4px; color: rgb(51, 51, 51); padding-right: 2px; padding-left: 2px; background-color: rgb(250, 250, 250);\">*</code>&nbsp;operator denotes the pointer's underlying value.</p><pre style=\"outline: none; font-family: Inconsolata, monospace; padding: 10px; font-size: 16px; line-height: 24px; background-color: rgb(250, 250, 250);\">fmt.Println(*p) // read i through the pointer p\n*p = 21         // set i through the pointer p</pre><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">This is known as \"dereferencing\" or \"indirecting\".</p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\">Unlike C, Go has no pointer arithmetic.</p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\"><br></p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\"><br></p>"},"style":{},"collapsed":true},"ideas":{"1":{"title":"example","content":"<div>package main</div><div><br></div><div>import \"fmt\"</div><div><br></div><div>func main() {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>i, j := 42, 2701</div><div><br></div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>p := &amp;i &nbsp; &nbsp; &nbsp; &nbsp; // point to i</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>fmt.Println(*p) // read i through the pointer</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>*p = 21 &nbsp; &nbsp; &nbsp; &nbsp; // set i through the pointer</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>fmt.Println(i) &nbsp;// see the new value of i</div><div><br></div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>p = &amp;j &nbsp; &nbsp; &nbsp; &nbsp; // point to j</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>*p = *p / 37 &nbsp; // divide j through the pointer</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>fmt.Println(j) // see the new value of j</div><div>}</div>","key":1,"id":217,"level":0,"ideasArr":[]}}},{"title":"types","id":218,"ideas":{"1":{"title":"Zero values","key":1,"id":203,"level":0,"ideas":{"1":{"title":"if variables aren't given an implicit type","key":1,"id":204,"level":0,"ideasArr":[]},"2":{"title":"for a pointer it's a nil","key":2,"id":234,"level":1,"ideasArr":[]}},"ideasArr":[{"title":"if variables aren't given an implicit type","id":204},{"title":"for a pointer it's a nil","id":234}]},"2":{"title":"type conversion","key":2,"id":205,"level":1,"ideas":{"1":{"title":"https://tour.golang.org/basics/13","key":1,"id":206,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/basics/13","id":206}]},"3":{"title":"Basic types","key":3,"id":201,"level":2,"ideas":{"1":{"title":"https://tour.golang.org/basics/11","key":1,"id":202,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/basics/11","id":202}]},"4":{"title":"implicit types","key":4,"id":198,"level":3,"ideas":{"1":{"title":"k:=\"hello\"","key":1,"id":199,"level":0,"ideas":{"1":{"title":"k is a string","key":1,"id":200,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"k is a string","id":200}]}},"ideasArr":[{"title":"k:=\"hello\"","id":199,"ideas":{"1":{"title":"k is a string","key":1,"id":200,"level":0,"ideasArr":[]}}}]},"5":{"title":"omitting types on variable declarations","content":"<div>package main</div><div><br></div><div>import \"fmt\"</div><div><br></div><div>var i, j int = 1, 2</div><div><br></div><div>func main() {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>var c, python, java = true, false, \"no!\"</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>fmt.Println(i, j, c, python, java)</div><div>}</div>","key":5,"id":197,"level":4,"ideasArr":[]},"6":{"title":"declaration syntax","key":6,"id":194,"level":5,"ideas":{"1":{"title":"https://blog.golang.org/gos-declaration-syntax","key":1,"id":195,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://blog.golang.org/gos-declaration-syntax","id":195}]},"7":{"title":"Shifting bits","key":7,"id":207,"level":6,"ideas":{"1":{"title":"https://tour.golang.org/basics/16","key":1,"id":208,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/basics/16","id":208}]},"8":{"title":"Structs","key":8,"id":222,"level":7,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/2","key":1,"id":223,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/2","id":223}]},"9":{"title":"Arrays","key":9,"id":224,"level":8,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/6","key":1,"id":225,"level":0,"ideasArr":[]},"2":{"title":"slices","key":2,"id":226,"level":1,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/7","key":1,"id":227,"level":0,"ideasArr":[]},"2":{"title":"they are just references to a section of the array","key":2,"id":228,"level":1,"ideasArr":[]},"3":{"title":"more common than arrays","key":3,"id":229,"level":2,"ideas":{"2":{"title":"slice literal","key":2,"id":231,"level":0,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/9","key":1,"id":230,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/9","id":230,"attr":{"style":{}}}]}},"ideasArr":[{"title":"slice literal","id":231,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/9","key":1,"id":230,"level":0,"ideasArr":[]}}}]},"4":{"title":"length and capacity","key":4,"id":232,"level":3,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/11","key":1,"id":233,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/11","id":233}]},"5":{"title":"Operations","key":5,"id":238,"level":4,"ideas":{"1":{"title":"make","key":1,"id":239,"level":0,"ideas":{"1":{"title":"create dynamically sized arrays","key":1,"id":235,"level":0,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/13","key":1,"id":236,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/13","id":236}]}},"ideasArr":[{"title":"create dynamically sized arrays","id":235,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/13","key":1,"id":236,"level":0,"ideasArr":[]}},"attr":{"style":{}}}]},"2":{"title":"append","key":2,"id":240,"level":1,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/15","key":1,"id":241,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/15","id":241}]}},"ideasArr":[{"title":"make","id":239,"ideas":{"1":{"title":"create dynamically sized arrays","key":1,"id":235,"level":0,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/13","key":1,"id":236,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/13","id":236}]}}},{"title":"append","id":240,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/15","key":1,"id":241,"level":0,"ideasArr":[]}}}]},"6":{"title":"Range","key":6,"id":242,"level":5,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/16","key":1,"id":243,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/16","id":243}]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/7","id":227},{"title":"they are just references to a section of the array","id":228},{"title":"more common than arrays","id":229,"ideas":{"2":{"title":"slice literal","key":2,"id":231,"level":0,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/9","key":1,"id":230,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/9","id":230,"attr":{"style":{}}}]}},"attr":{"collapsed":true,"style":{}}},{"title":"length and capacity","id":232,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/11","key":1,"id":233,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Operations","id":238,"ideas":{"1":{"title":"make","key":1,"id":239,"level":0,"ideas":{"1":{"title":"create dynamically sized arrays","key":1,"id":235,"level":0,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/13","key":1,"id":236,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/13","id":236}]}},"ideasArr":[{"title":"create dynamically sized arrays","id":235,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/13","key":1,"id":236,"level":0,"ideasArr":[]}},"attr":{"style":{}}}]},"2":{"title":"append","key":2,"id":240,"level":1,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/15","key":1,"id":241,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/15","id":241}]}},"attr":{"collapsed":true,"style":{}}},{"title":"Range","id":242,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/16","key":1,"id":243,"level":0,"ideasArr":[]}}}]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/6","id":225},{"title":"slices","id":226,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/7","key":1,"id":227,"level":0,"ideasArr":[]},"2":{"title":"they are just references to a section of the array","key":2,"id":228,"level":1,"ideasArr":[]},"3":{"title":"more common than arrays","key":3,"id":229,"level":2,"ideas":{"2":{"title":"slice literal","key":2,"id":231,"level":0,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/9","key":1,"id":230,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/9","id":230,"attr":{"style":{}}}]}},"ideasArr":[{"title":"slice literal","id":231,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/9","key":1,"id":230,"level":0,"ideasArr":[]}}}]},"4":{"title":"length and capacity","key":4,"id":232,"level":3,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/11","key":1,"id":233,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/11","id":233}]},"5":{"title":"Operations","key":5,"id":238,"level":4,"ideas":{"1":{"title":"make","key":1,"id":239,"level":0,"ideas":{"1":{"title":"create dynamically sized arrays","key":1,"id":235,"level":0,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/13","key":1,"id":236,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/13","id":236}]}},"ideasArr":[{"title":"create dynamically sized arrays","id":235,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/13","key":1,"id":236,"level":0,"ideasArr":[]}},"attr":{"style":{}}}]},"2":{"title":"append","key":2,"id":240,"level":1,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/15","key":1,"id":241,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/15","id":241}]}},"ideasArr":[{"title":"make","id":239,"ideas":{"1":{"title":"create dynamically sized arrays","key":1,"id":235,"level":0,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/13","key":1,"id":236,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/13","id":236}]}}},{"title":"append","id":240,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/15","key":1,"id":241,"level":0,"ideasArr":[]}}}]},"6":{"title":"Range","key":6,"id":242,"level":5,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/16","key":1,"id":243,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/16","id":243}]}},"attr":{"style":{},"collapsed":true}}]},"10":{"title":"Maps","key":10,"id":244,"level":9,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/19","key":1,"id":245,"level":0,"ideasArr":[]},"2":{"title":"Map literal","key":2,"id":246,"level":1,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/20","key":1,"id":247,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/20","id":247}]},"3":{"title":"Operations","key":3,"id":248,"level":2,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/22","key":1,"id":249,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/22","id":249}]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/19","id":245},{"title":"Map literal","id":246,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/20","key":1,"id":247,"level":0,"ideasArr":[]}}},{"title":"Operations","id":248,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/22","key":1,"id":249,"level":0,"ideasArr":[]}}}]}},"attr":{"style":{},"collapsed":true}},{"title":"functions","id":219,"ideas":{"1":{"title":"functions can return any number of results","content":"<div>package main</div><div><br></div><div>import \"fmt\"</div><div><br></div><div>func swap(x, y string) (string, string) {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>return y, x</div><div>}</div><div><br></div><div>func main() {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>a, b := swap(\"hello\", \"world\")</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>fmt.Println(a, b)</div><div>}</div>","key":1,"id":196,"level":0,"ideasArr":[]},"2":{"title":"They can be passed around","key":2,"id":250,"level":1,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/24","key":1,"id":251,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/24","id":251}]},"3":{"title":"closures","content":"<div>package main</div><div><br></div><div>import \"fmt\"</div><div><br></div><div>func adder() func(int) int {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>sum := 0</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>return func(x int) int {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t\t</span></span>sum += x</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t\t</span></span>return sum</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>}</div><div>}</div><div><br></div><div>func main() {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>pos, neg := adder(), adder()</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>for i := 0; i &lt; 10; i++ {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t\t</span></span>fmt.Println(</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t\t\t</span></span>pos(i),</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t\t\t</span></span>neg(-2*i),</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t\t</span></span>)</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>}</div><div>}</div>","key":3,"id":252,"level":2,"ideas":{"1":{"title":"https://tour.golang.org/moretypes/25","key":1,"id":253,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/moretypes/25","id":253}]},"4":{"title":"Methods","key":4,"id":254,"level":3,"ideas":{"1":{"title":"https://tour.golang.org/methods/1","key":1,"id":255,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/methods/1","id":255}]}},"attr":{"collapsed":true,"style":{}}},{"title":"Control structures","id":221,"ideas":{"1":{"title":"for loop","content":"https://tour.golang.org/flowcontrol/1","key":1,"id":209,"level":0,"ideas":{"1":{"title":"for replaces while","key":1,"id":210,"level":0,"ideasArr":[]},"2":{"title":"infinite loops","content":"<div>package main</div><div><br></div><div>func main() {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>for {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>}</div><div>}</div>","key":2,"id":211,"level":1,"ideasArr":[]},"3":{"title":"Short if statement","content":"https://tour.golang.org/flowcontrol/6","key":3,"id":212,"level":2,"ideasArr":[]}},"ideasArr":[{"title":"for replaces while","id":210},{"title":"infinite loops","id":211,"attr":{"attachment":{"contentType":"text/html","content":"<div>package main</div><div><br></div><div>func main() {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>for {</div><div><span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>}</div><div>}</div>"},"style":{}}},{"title":"Short if statement","id":212,"attr":{"attachment":{"contentType":"text/html","content":"https://tour.golang.org/flowcontrol/6"},"style":{}}}]},"2":{"title":"switch statement","content":"https://tour.golang.org/flowcontrol/10","key":2,"id":213,"level":1,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"LRU cache","id":259,"ideas":{"1":{"title":"http://mcicpc.cs.atu.edu/archives/2012/mcpc2012/lru/lru.html","key":1,"id":260,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Thread safe","id":261,"ideas":{"1":{"title":"https://en.wikipedia.org/wiki/Thread_safety","key":1,"id":263,"level":0,"ideasArr":[]}},"attr":{"attachment":{"contentType":"text/html","content":"<b style=\"color: rgb(37, 37, 37); font-family: sans-serif; line-height: 22.4px;\">Thread safety</b><span style=\"color: rgb(37, 37, 37); font-family: sans-serif; line-height: 22.4px;\">&nbsp;is a&nbsp;</span><a href=\"https://en.wikipedia.org/wiki/Computer_programming\" title=\"Computer programming\" style=\"color: rgb(11, 0, 128); font-family: sans-serif; line-height: 22.4px; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;\">computer programming</a><span style=\"color: rgb(37, 37, 37); font-family: sans-serif; line-height: 22.4px;\">&nbsp;concept applicable in the context of&nbsp;</span><a href=\"https://en.wikipedia.org/wiki/Multi-threaded\" title=\"Multi-threaded\" class=\"mw-redirect\" style=\"color: rgb(11, 0, 128); font-family: sans-serif; line-height: 22.4px; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;\">multi-threaded</a><span style=\"color: rgb(37, 37, 37); font-family: sans-serif; line-height: 22.4px;\">&nbsp;programs. A piece of code is&nbsp;</span><b style=\"color: rgb(37, 37, 37); font-family: sans-serif; line-height: 22.4px;\">thread-safe</b><span style=\"color: rgb(37, 37, 37); font-family: sans-serif; line-height: 22.4px;\">&nbsp;if it only manipulates shared data structures in a manner that guarantees safe execution by multiple threads at the same time. There are various strategies for making thread-safe data structures.</span><sup id=\"cite_ref-1\" class=\"reference\" style=\"line-height: 1; unicode-bidi: isolate; white-space: nowrap; font-size: 11.2px; color: rgb(37, 37, 37); font-family: sans-serif;\"><a href=\"https://en.wikipedia.org/wiki/Thread_safety#cite_note-1\" style=\"color: rgb(11, 0, 128); background: none;\">[1]</a></sup><sup id=\"cite_ref-2\" class=\"reference\" style=\"line-height: 1; unicode-bidi: isolate; white-space: nowrap; font-size: 11.2px; color: rgb(37, 37, 37); font-family: sans-serif;\"><a href=\"https://en.wikipedia.org/wiki/Thread_safety#cite_note-2\" style=\"color: rgb(11, 0, 128); background: none;\">[2]</a></sup>"},"style":{},"collapsed":true}},{"title":"Archeticture","id":220,"ideas":{"1":{"title":"Go run in packages","key":1,"id":191,"level":0,"ideas":{"1":{"title":"math/rand","key":1,"id":192,"level":0,"ideas":{"1":{"title":"any package that starts with \"package rand\"","key":1,"id":193,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"any package that starts with \"package rand\"","id":193}]}},"ideasArr":[{"title":"math/rand","id":192,"ideas":{"1":{"title":"any package that starts with \"package rand\"","key":1,"id":193,"level":0,"ideasArr":[]}}}]}},"attr":{"position":[86,-171,1],"style":{},"collapsed":true}}]},{"title":"Resources","key":1,"id":177,"level":1,"ideas":{"1":{"title":"https://golang.org/","key":1,"id":178,"level":0,"ideas":{"1":{"title":"main website","key":1,"id":189,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"main website","id":189}]},"4":{"title":"Go tour","key":4,"id":185,"level":1,"ideas":{"1":{"title":"https://tour.golang.org/list","key":1,"id":186,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://tour.golang.org/list","id":186}]},"5":{"title":"tutorials","key":5,"id":187,"level":2,"ideas":{"1":{"title":"https://github.com/astaxie/build-web-application-with-golang/tree/master/en","key":1,"id":181,"level":0,"ideas":{"1":{"title":"web application with Go","key":1,"id":182,"level":0,"ideasArr":[]},"2":{"title":"https://github.com/astaxie/build-web-application-with-golang/blob/master/en/01.2.md","key":2,"id":183,"level":1,"ideas":{"1":{"title":"I stopped here","key":1,"id":184,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"I stopped here","id":184}]}},"ideasArr":[{"title":"web application with Go","id":182},{"title":"https://github.com/astaxie/build-web-application-with-golang/blob/master/en/01.2.md","id":183,"ideas":{"1":{"title":"I stopped here","key":1,"id":184,"level":0,"ideasArr":[]}}}]},"2":{"title":"https://github.com/GoesToEleven/GolangTraining","key":2,"id":256,"level":1,"ideas":{"1":{"title":"general go lessons","key":1,"id":258,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"general go lessons","id":258}]}},"ideasArr":[{"title":"https://github.com/astaxie/build-web-application-with-golang/tree/master/en","id":181,"ideas":{"1":{"title":"web application with Go","key":1,"id":182,"level":0,"ideasArr":[]},"2":{"title":"https://github.com/astaxie/build-web-application-with-golang/blob/master/en/01.2.md","key":2,"id":183,"level":1,"ideas":{"1":{"title":"I stopped here","key":1,"id":184,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"I stopped here","id":184}]}},"attr":{"style":{}}},{"title":"https://github.com/GoesToEleven/GolangTraining","id":256,"ideas":{"1":{"title":"general go lessons","key":1,"id":258,"level":0,"ideasArr":[]}}}]},"6":{"title":"third party","key":6,"id":188,"level":3,"ideas":{"1":{"title":"https://github.com/gpmgo/gopm","key":1,"id":179,"level":0,"ideas":{"1":{"title":"go package manager","key":1,"id":180,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"go package manager","id":180}]},"2":{"title":"https://github.com/gin-gonic/gin","key":2,"id":264,"level":1,"ideas":{"1":{"title":"http library","key":1,"id":265,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"http library","id":265}]},"3":{"title":"https://github.com/jinzhu/gorm","key":3,"id":269,"level":2,"ideas":{"1":{"title":"ORM","key":1,"id":270,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"ORM","id":270}]},"4":{"title":"https://github.com/gorilla/mux","key":4,"id":271,"level":3,"ideas":{"1":{"title":"router and dispatcher","key":1,"id":272,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"router and dispatcher","id":272}]},"5":{"title":"https://github.com/hybridgroup/gobot","key":5,"id":276,"level":4,"ideas":{"1":{"title":"gobot","key":1,"id":277,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"gobot","id":277}]},"6":{"title":"https://github.com/googollee/go-socket.io","key":6,"id":278,"level":5,"ideas":{"1":{"title":"socket.io in go","key":1,"id":279,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"socket.io in go","id":279}]},"7":{"title":"https://github.com/tealeg/xlsx","key":7,"id":283,"level":6,"ideas":{"1":{"title":"Excel","key":1,"id":284,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"Excel","id":284}]},"8":{"title":"https://github.com/olebedev/go-starter-kit","key":8,"id":285,"level":7,"ideas":{"1":{"title":"go starter kit with react","key":1,"id":286,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"go starter kit with react","id":286}]},"9":{"title":"https://github.com/Masterminds/squirrel","key":9,"id":287,"level":8,"ideas":{"1":{"title":"nice sql generation","key":1,"id":288,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"nice sql generation","id":288}]},"10":{"title":"https://github.com/nitrous-io/goop","key":10,"id":289,"level":9,"ideas":{"1":{"title":"goop dependency manager","key":1,"id":290,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"goop dependency manager","id":290}]},"11":{"title":"https://github.com/rogeralsing/gam","key":11,"id":291,"level":10,"ideas":{"1":{"title":"go actors","key":1,"id":292,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"go actors","id":292}]},"12":{"title":"https://github.com/visualfc/go-ui","key":12,"id":293,"level":11,"ideas":{"1":{"title":"https://github.com/visualfc/goqt","key":1,"id":295,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://github.com/visualfc/goqt","id":295}]}},"ideasArr":[{"title":"https://github.com/gpmgo/gopm","id":179,"ideas":{"1":{"title":"go package manager","key":1,"id":180,"level":0,"ideasArr":[]}},"attr":{"style":{}}},{"title":"https://github.com/gin-gonic/gin","id":264,"ideas":{"1":{"title":"http library","key":1,"id":265,"level":0,"ideasArr":[]}}},{"title":"https://github.com/jinzhu/gorm","id":269,"ideas":{"1":{"title":"ORM","key":1,"id":270,"level":0,"ideasArr":[]}}},{"title":"https://github.com/gorilla/mux","id":271,"ideas":{"1":{"title":"router and dispatcher","key":1,"id":272,"level":0,"ideasArr":[]}}},{"title":"https://github.com/hybridgroup/gobot","id":276,"ideas":{"1":{"title":"gobot","key":1,"id":277,"level":0,"ideasArr":[]}}},{"title":"https://github.com/googollee/go-socket.io","id":278,"ideas":{"1":{"title":"socket.io in go","key":1,"id":279,"level":0,"ideasArr":[]}}},{"title":"https://github.com/tealeg/xlsx","id":283,"ideas":{"1":{"title":"Excel","key":1,"id":284,"level":0,"ideasArr":[]}}},{"title":"https://github.com/olebedev/go-starter-kit","id":285,"ideas":{"1":{"title":"go starter kit with react","key":1,"id":286,"level":0,"ideasArr":[]}}},{"title":"https://github.com/Masterminds/squirrel","id":287,"ideas":{"1":{"title":"nice sql generation","key":1,"id":288,"level":0,"ideasArr":[]}}},{"title":"https://github.com/nitrous-io/goop","id":289,"ideas":{"1":{"title":"goop dependency manager","key":1,"id":290,"level":0,"ideasArr":[]}}},{"title":"https://github.com/rogeralsing/gam","id":291,"ideas":{"1":{"title":"go actors","key":1,"id":292,"level":0,"ideasArr":[]}}},{"title":"https://github.com/visualfc/go-ui","id":293,"ideas":{"1":{"title":"https://github.com/visualfc/goqt","key":1,"id":295,"level":0,"ideasArr":[]}}}]},"7":{"title":"links from the go tour","content":"<div class=\"page-header\" style=\"outline: none; font-size: 1.2em; line-height: 32px; margin-top: 32px; margin-bottom: 32px; color: rgb(0, 0, 0); font-family: sans-serif;\"><h1 style=\"outline: none; color: rgb(51, 51, 51); line-height: 32px; margin-top: 0px; margin-bottom: 0px;\">Welcome to a tour of Go</h1></div><div class=\"module ng-scope\" ng-repeat=\"m in toc.modules\" style=\"outline: none; margin: 32px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\"><p id=\"mechanics\" class=\"module-title ng-binding\" style=\"outline: none; margin-bottom: 0px; font-size: 1.3em; font-weight: bold; color: rgb(51, 51, 51);\">Using the tour</p><div ng-bind-html-unsafe=\"m.description\" class=\"ng-binding\" style=\"outline: none;\"><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">Welcome to a tour of the&nbsp;<a href=\"http://golang.org/\" style=\"outline: none; color: rgb(55, 94, 171);\" target=\"_blank\">Go programming language</a>. The tour covers the most important features of the language, mainly:</p></div><div class=\"lesson ng-scope\" ng-repeat=\"l in m.lessons\" style=\"outline: none; padding: 8px 16px; margin: 16px 0px; position: relative; background: rgb(224, 235, 245);\"><a href=\"https://tour.golang.org/welcome\" class=\"lesson-title ng-binding\" style=\"outline: none; color: rgb(55, 94, 171); display: inline-block; font-size: 1.2em; font-weight: bold; margin: 16px 0px 0px; padding-right: 48px;\" target=\"_blank\">Welcome!</a><p class=\"ng-binding\" style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">Learn how to use this tour: including how to navigate the different lessons and how to run code.</p></div></div><div class=\"module ng-scope\" ng-repeat=\"m in toc.modules\" style=\"outline: none; margin: 32px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\"><p id=\"basics\" class=\"module-title ng-binding\" style=\"outline: none; margin-bottom: 0px; font-size: 1.3em; font-weight: bold; color: rgb(51, 51, 51);\">Basics</p><div ng-bind-html-unsafe=\"m.description\" class=\"ng-binding\" style=\"outline: none;\"><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">The starting point, learn all the basics of the language.</p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">Declaring variables, calling functions, and all the things you need to know before moving to the next lessons.</p></div><div class=\"lesson ng-scope\" ng-repeat=\"l in m.lessons\" style=\"outline: none; padding: 8px 16px; margin: 16px 0px; position: relative; background: rgb(224, 235, 245);\"><a href=\"https://tour.golang.org/basics\" class=\"lesson-title ng-binding\" style=\"outline: none; color: rgb(55, 94, 171); display: inline-block; font-size: 1.2em; font-weight: bold; margin: 16px 0px 0px; padding-right: 48px;\" target=\"_blank\">Packages, variables, and functions.</a><p class=\"ng-binding\" style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">Learn the basic components of any Go program.</p></div><div class=\"lesson ng-scope\" ng-repeat=\"l in m.lessons\" style=\"outline: none; padding: 8px 16px; margin: 16px 0px; position: relative; background: rgb(224, 235, 245);\"><a href=\"https://tour.golang.org/flowcontrol\" class=\"lesson-title ng-binding\" style=\"outline: none; color: rgb(55, 94, 171); display: inline-block; font-size: 1.2em; font-weight: bold; margin: 16px 0px 0px; padding-right: 48px;\" target=\"_blank\">Flow control statements: for, if, else, switch and defer</a><p class=\"ng-binding\" style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">Learn how to control the flow of your code with conditionals, loops, switches and defers.</p></div><div class=\"lesson ng-scope\" ng-repeat=\"l in m.lessons\" style=\"outline: none; padding: 8px 16px; margin: 16px 0px; position: relative; background: rgb(224, 235, 245);\"><a href=\"https://tour.golang.org/moretypes\" class=\"lesson-title ng-binding\" style=\"outline: none; color: rgb(55, 94, 171); display: inline-block; font-size: 1.2em; font-weight: bold; margin: 16px 0px 0px; padding-right: 48px;\" target=\"_blank\">More types: structs, slices, and maps.</a><p class=\"ng-binding\" style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">Learn how to define types based on existing ones: this lesson covers structs, arrays, slices, and maps.</p></div></div><div class=\"module ng-scope\" ng-repeat=\"m in toc.modules\" style=\"outline: none; margin: 32px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\"><p id=\"methods\" class=\"module-title ng-binding\" style=\"outline: none; margin-bottom: 0px; font-size: 1.3em; font-weight: bold; color: rgb(51, 51, 51);\">Methods and interfaces</p><div ng-bind-html-unsafe=\"m.description\" class=\"ng-binding\" style=\"outline: none;\"><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">Learn how to define methods on types, how to declare interfaces, and how to put everything together.</p></div><div class=\"lesson ng-scope\" ng-repeat=\"l in m.lessons\" style=\"outline: none; padding: 8px 16px; margin: 16px 0px; position: relative; background: rgb(224, 235, 245);\"><a href=\"https://tour.golang.org/methods\" class=\"lesson-title ng-binding\" style=\"outline: none; color: rgb(55, 94, 171); display: inline-block; font-size: 1.2em; font-weight: bold; margin: 16px 0px 0px; padding-right: 48px;\" target=\"_blank\">Methods and interfaces</a><p class=\"ng-binding\" style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">This lesson covers methods and interfaces, the constructs that define objects and their behavior.</p></div></div><div class=\"module ng-scope\" ng-repeat=\"m in toc.modules\" style=\"outline: none; margin: 32px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\"><p id=\"concurrency\" class=\"module-title ng-binding\" style=\"outline: none; margin-bottom: 0px; font-size: 1.3em; font-weight: bold; color: rgb(51, 51, 51);\">Concurrency</p><div ng-bind-html-unsafe=\"m.description\" class=\"ng-binding\" style=\"outline: none;\"><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">Go provides concurrency features as part of the core language.</p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">This module goes over goroutines and channels, and how they are used to implement different concurrency patterns.</p></div><div class=\"lesson ng-scope\" ng-repeat=\"l in m.lessons\" style=\"outline: none; padding: 8px 16px; margin: 16px 0px; position: relative; background: rgb(224, 235, 245);\"><a href=\"https://tour.golang.org/concurrency\" class=\"lesson-title ng-binding\" style=\"outline: none; color: rgb(55, 94, 171); display: inline-block; font-size: 1.2em; font-weight: bold; margin: 16px 0px 0px; padding-right: 48px;\" target=\"_blank\">Concurrency</a><p class=\"ng-binding\" style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">Go provides concurrency constructions as part of the core language. This lessons presents them and gives some examples on how to use it.</p></div></div>","key":7,"id":190,"level":4,"ideasArr":[]},"8":{"title":"Github search for most starred libraries","key":8,"id":267,"level":5,"ideas":{"1":{"title":"https://github.com/search?o=desc&q=golang&s=stars&type=Repositories&utf8=%E2%9C%93","key":1,"id":268,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://github.com/search?o=desc&q=golang&s=stars&type=Repositories&utf8=%E2%9C%93","id":268}]},"9":{"title":"Meta resources","key":9,"id":273,"level":6,"ideas":{"1":{"title":"https://github.com/dariubs/GoBooks","key":1,"id":274,"level":0,"ideas":{"1":{"title":"List of books","key":1,"id":275,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"List of books","id":275}]}},"ideasArr":[{"title":"https://github.com/dariubs/GoBooks","id":274,"ideas":{"1":{"title":"List of books","key":1,"id":275,"level":0,"ideasArr":[]}}}]},"10":{"title":"https://github.com/ry/v8worker","key":10,"id":281,"level":7,"ideas":{"1":{"title":"go binding with V8","key":1,"id":282,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"go binding with V8","id":282}]}},"ideasArr":[{"title":"https://golang.org/","id":178,"ideas":{"1":{"title":"main website","key":1,"id":189,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Go tour","id":185,"ideas":{"1":{"title":"https://tour.golang.org/list","key":1,"id":186,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"tutorials","id":187,"ideas":{"1":{"title":"https://github.com/astaxie/build-web-application-with-golang/tree/master/en","key":1,"id":181,"level":0,"ideas":{"1":{"title":"web application with Go","key":1,"id":182,"level":0,"ideasArr":[]},"2":{"title":"https://github.com/astaxie/build-web-application-with-golang/blob/master/en/01.2.md","key":2,"id":183,"level":1,"ideas":{"1":{"title":"I stopped here","key":1,"id":184,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"I stopped here","id":184}]}},"ideasArr":[{"title":"web application with Go","id":182},{"title":"https://github.com/astaxie/build-web-application-with-golang/blob/master/en/01.2.md","id":183,"ideas":{"1":{"title":"I stopped here","key":1,"id":184,"level":0,"ideasArr":[]}}}]},"2":{"title":"https://github.com/GoesToEleven/GolangTraining","key":2,"id":256,"level":1,"ideas":{"1":{"title":"general go lessons","key":1,"id":258,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"general go lessons","id":258}]}},"attr":{"style":{},"collapsed":true}},{"title":"third party","id":188,"ideas":{"1":{"title":"https://github.com/gpmgo/gopm","key":1,"id":179,"level":0,"ideas":{"1":{"title":"go package manager","key":1,"id":180,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"go package manager","id":180}]},"2":{"title":"https://github.com/gin-gonic/gin","key":2,"id":264,"level":1,"ideas":{"1":{"title":"http library","key":1,"id":265,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"http library","id":265}]},"3":{"title":"https://github.com/jinzhu/gorm","key":3,"id":269,"level":2,"ideas":{"1":{"title":"ORM","key":1,"id":270,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"ORM","id":270}]},"4":{"title":"https://github.com/gorilla/mux","key":4,"id":271,"level":3,"ideas":{"1":{"title":"router and dispatcher","key":1,"id":272,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"router and dispatcher","id":272}]},"5":{"title":"https://github.com/hybridgroup/gobot","key":5,"id":276,"level":4,"ideas":{"1":{"title":"gobot","key":1,"id":277,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"gobot","id":277}]},"6":{"title":"https://github.com/googollee/go-socket.io","key":6,"id":278,"level":5,"ideas":{"1":{"title":"socket.io in go","key":1,"id":279,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"socket.io in go","id":279}]},"7":{"title":"https://github.com/tealeg/xlsx","key":7,"id":283,"level":6,"ideas":{"1":{"title":"Excel","key":1,"id":284,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"Excel","id":284}]},"8":{"title":"https://github.com/olebedev/go-starter-kit","key":8,"id":285,"level":7,"ideas":{"1":{"title":"go starter kit with react","key":1,"id":286,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"go starter kit with react","id":286}]},"9":{"title":"https://github.com/Masterminds/squirrel","key":9,"id":287,"level":8,"ideas":{"1":{"title":"nice sql generation","key":1,"id":288,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"nice sql generation","id":288}]},"10":{"title":"https://github.com/nitrous-io/goop","key":10,"id":289,"level":9,"ideas":{"1":{"title":"goop dependency manager","key":1,"id":290,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"goop dependency manager","id":290}]},"11":{"title":"https://github.com/rogeralsing/gam","key":11,"id":291,"level":10,"ideas":{"1":{"title":"go actors","key":1,"id":292,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"go actors","id":292}]},"12":{"title":"https://github.com/visualfc/go-ui","key":12,"id":293,"level":11,"ideas":{"1":{"title":"https://github.com/visualfc/goqt","key":1,"id":295,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://github.com/visualfc/goqt","id":295}]}},"attr":{"collapsed":true,"style":{}}},{"title":"links from the go tour","id":190,"attr":{"attachment":{"contentType":"text/html","content":"<div class=\"page-header\" style=\"outline: none; font-size: 1.2em; line-height: 32px; margin-top: 32px; margin-bottom: 32px; color: rgb(0, 0, 0); font-family: sans-serif;\"><h1 style=\"outline: none; color: rgb(51, 51, 51); line-height: 32px; margin-top: 0px; margin-bottom: 0px;\">Welcome to a tour of Go</h1></div><div class=\"module ng-scope\" ng-repeat=\"m in toc.modules\" style=\"outline: none; margin: 32px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\"><p id=\"mechanics\" class=\"module-title ng-binding\" style=\"outline: none; margin-bottom: 0px; font-size: 1.3em; font-weight: bold; color: rgb(51, 51, 51);\">Using the tour</p><div ng-bind-html-unsafe=\"m.description\" class=\"ng-binding\" style=\"outline: none;\"><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">Welcome to a tour of the&nbsp;<a href=\"http://golang.org/\" style=\"outline: none; color: rgb(55, 94, 171);\" target=\"_blank\">Go programming language</a>. The tour covers the most important features of the language, mainly:</p></div><div class=\"lesson ng-scope\" ng-repeat=\"l in m.lessons\" style=\"outline: none; padding: 8px 16px; margin: 16px 0px; position: relative; background: rgb(224, 235, 245);\"><a href=\"https://tour.golang.org/welcome\" class=\"lesson-title ng-binding\" style=\"outline: none; color: rgb(55, 94, 171); display: inline-block; font-size: 1.2em; font-weight: bold; margin: 16px 0px 0px; padding-right: 48px;\" target=\"_blank\">Welcome!</a><p class=\"ng-binding\" style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">Learn how to use this tour: including how to navigate the different lessons and how to run code.</p></div></div><div class=\"module ng-scope\" ng-repeat=\"m in toc.modules\" style=\"outline: none; margin: 32px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\"><p id=\"basics\" class=\"module-title ng-binding\" style=\"outline: none; margin-bottom: 0px; font-size: 1.3em; font-weight: bold; color: rgb(51, 51, 51);\">Basics</p><div ng-bind-html-unsafe=\"m.description\" class=\"ng-binding\" style=\"outline: none;\"><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">The starting point, learn all the basics of the language.</p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">Declaring variables, calling functions, and all the things you need to know before moving to the next lessons.</p></div><div class=\"lesson ng-scope\" ng-repeat=\"l in m.lessons\" style=\"outline: none; padding: 8px 16px; margin: 16px 0px; position: relative; background: rgb(224, 235, 245);\"><a href=\"https://tour.golang.org/basics\" class=\"lesson-title ng-binding\" style=\"outline: none; color: rgb(55, 94, 171); display: inline-block; font-size: 1.2em; font-weight: bold; margin: 16px 0px 0px; padding-right: 48px;\" target=\"_blank\">Packages, variables, and functions.</a><p class=\"ng-binding\" style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">Learn the basic components of any Go program.</p></div><div class=\"lesson ng-scope\" ng-repeat=\"l in m.lessons\" style=\"outline: none; padding: 8px 16px; margin: 16px 0px; position: relative; background: rgb(224, 235, 245);\"><a href=\"https://tour.golang.org/flowcontrol\" class=\"lesson-title ng-binding\" style=\"outline: none; color: rgb(55, 94, 171); display: inline-block; font-size: 1.2em; font-weight: bold; margin: 16px 0px 0px; padding-right: 48px;\" target=\"_blank\">Flow control statements: for, if, else, switch and defer</a><p class=\"ng-binding\" style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">Learn how to control the flow of your code with conditionals, loops, switches and defers.</p></div><div class=\"lesson ng-scope\" ng-repeat=\"l in m.lessons\" style=\"outline: none; padding: 8px 16px; margin: 16px 0px; position: relative; background: rgb(224, 235, 245);\"><a href=\"https://tour.golang.org/moretypes\" class=\"lesson-title ng-binding\" style=\"outline: none; color: rgb(55, 94, 171); display: inline-block; font-size: 1.2em; font-weight: bold; margin: 16px 0px 0px; padding-right: 48px;\" target=\"_blank\">More types: structs, slices, and maps.</a><p class=\"ng-binding\" style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">Learn how to define types based on existing ones: this lesson covers structs, arrays, slices, and maps.</p></div></div><div class=\"module ng-scope\" ng-repeat=\"m in toc.modules\" style=\"outline: none; margin: 32px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\"><p id=\"methods\" class=\"module-title ng-binding\" style=\"outline: none; margin-bottom: 0px; font-size: 1.3em; font-weight: bold; color: rgb(51, 51, 51);\">Methods and interfaces</p><div ng-bind-html-unsafe=\"m.description\" class=\"ng-binding\" style=\"outline: none;\"><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">Learn how to define methods on types, how to declare interfaces, and how to put everything together.</p></div><div class=\"lesson ng-scope\" ng-repeat=\"l in m.lessons\" style=\"outline: none; padding: 8px 16px; margin: 16px 0px; position: relative; background: rgb(224, 235, 245);\"><a href=\"https://tour.golang.org/methods\" class=\"lesson-title ng-binding\" style=\"outline: none; color: rgb(55, 94, 171); display: inline-block; font-size: 1.2em; font-weight: bold; margin: 16px 0px 0px; padding-right: 48px;\" target=\"_blank\">Methods and interfaces</a><p class=\"ng-binding\" style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">This lesson covers methods and interfaces, the constructs that define objects and their behavior.</p></div></div><div class=\"module ng-scope\" ng-repeat=\"m in toc.modules\" style=\"outline: none; margin: 32px 0px; color: rgb(0, 0, 0); font-family: sans-serif; font-size: 16px; line-height: 24px;\"><p id=\"concurrency\" class=\"module-title ng-binding\" style=\"outline: none; margin-bottom: 0px; font-size: 1.3em; font-weight: bold; color: rgb(51, 51, 51);\">Concurrency</p><div ng-bind-html-unsafe=\"m.description\" class=\"ng-binding\" style=\"outline: none;\"><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">Go provides concurrency features as part of the core language.</p><p style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">This module goes over goroutines and channels, and how they are used to implement different concurrency patterns.</p></div><div class=\"lesson ng-scope\" ng-repeat=\"l in m.lessons\" style=\"outline: none; padding: 8px 16px; margin: 16px 0px; position: relative; background: rgb(224, 235, 245);\"><a href=\"https://tour.golang.org/concurrency\" class=\"lesson-title ng-binding\" style=\"outline: none; color: rgb(55, 94, 171); display: inline-block; font-size: 1.2em; font-weight: bold; margin: 16px 0px 0px; padding-right: 48px;\" target=\"_blank\">Concurrency</a><p class=\"ng-binding\" style=\"outline: none; margin-top: 16px; margin-bottom: 16px;\">Go provides concurrency constructions as part of the core language. This lessons presents them and gives some examples on how to use it.</p></div></div>"},"style":{}}},{"title":"Github search for most starred libraries","id":267,"ideas":{"1":{"title":"https://github.com/search?o=desc&q=golang&s=stars&type=Repositories&utf8=%E2%9C%93","key":1,"id":268,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Meta resources","id":273,"ideas":{"1":{"title":"https://github.com/dariubs/GoBooks","key":1,"id":274,"level":0,"ideas":{"1":{"title":"List of books","key":1,"id":275,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"List of books","id":275}]}},"attr":{"collapsed":true,"style":{}}},{"title":"https://github.com/ry/v8worker","id":281,"ideas":{"1":{"title":"go binding with V8","key":1,"id":282,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}}]}]