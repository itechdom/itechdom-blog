[{"title":"resources","key":0,"id":2,"level":0},{"title":"code examples","content":"<p style=\"margin-top: 0.5em; margin-bottom: 0.5em; line-height: 22.3999996185303px; color: rgb(37, 37, 37); font-family: sans-serif;\">Here is the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Factorial\" title=\"Factorial\" style=\"color: rgb(11, 0, 128); background: none;\">factorial</a>&nbsp;function in Haskell, defined in a few different ways:</p><div class=\"mw-highlight mw-content-ltr\" dir=\"ltr\" style=\"direction: ltr; unicode-bidi: embed; color: rgb(37, 37, 37); font-family: sans-serif; line-height: 22.3999996185303px; background: rgb(248, 248, 248);\"><pre style=\"font-family: monospace, Courier; color: black; border-color: rgb(221, 221, 221); padding: 1em; line-height: 1.3em; background-color: rgb(249, 249, 249);\"><span class=\"c1\" style=\"color: rgb(64, 128, 128); font-style: italic;\">-- Type annotation (optional)</span>\n<span class=\"nf\" style=\"color: rgb(0, 0, 255);\">factorial</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">::</span> <span class=\"p\">(</span><span class=\"kt\" style=\"color: rgb(176, 0, 64);\">Integral</span> <span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">=&gt;</span> <span class=\"n\">a</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">-&gt;</span> <span class=\"n\">a</span>\n\n<span class=\"c1\" style=\"color: rgb(64, 128, 128); font-style: italic;\">-- Using recursion</span>\n<span class=\"nf\" style=\"color: rgb(0, 0, 255);\">factorial</span> <span class=\"n\">n</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">|</span> <span class=\"n\">n</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">&lt;</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">2</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">=</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span>\n<span class=\"nf\" style=\"color: rgb(0, 0, 255);\">factorial</span> <span class=\"n\">n</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">=</span> <span class=\"n\">n</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">*</span> <span class=\"n\">factorial</span> <span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">-</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\" style=\"color: rgb(64, 128, 128); font-style: italic;\">-- Using recursion, with guards</span>\n<span class=\"nf\" style=\"color: rgb(0, 0, 255);\">factorial</span> <span class=\"n\">n</span>\n  <span class=\"o\" style=\"color: rgb(102, 102, 102);\">|</span> <span class=\"n\">n</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">&lt;</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">2</span>     <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">=</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span>\n  <span class=\"o\" style=\"color: rgb(102, 102, 102);\">|</span> <span class=\"n\">otherwise</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">=</span> <span class=\"n\">n</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">*</span> <span class=\"n\">factorial</span> <span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">-</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\" style=\"color: rgb(64, 128, 128); font-style: italic;\">-- Using recursion but written without pattern matching</span>\n<span class=\"nf\" style=\"color: rgb(0, 0, 255);\">factorial</span> <span class=\"n\">n</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">=</span> <span class=\"kr\" style=\"color: rgb(0, 128, 0); font-weight: bold;\">if</span> <span class=\"n\">n</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">&gt;</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">0</span> <span class=\"kr\" style=\"color: rgb(0, 128, 0); font-weight: bold;\">then</span> <span class=\"n\">n</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">*</span> <span class=\"n\">factorial</span> <span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">-</span><span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span><span class=\"p\">)</span> <span class=\"kr\" style=\"color: rgb(0, 128, 0); font-weight: bold;\">else</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span>\n\n<span class=\"c1\" style=\"color: rgb(64, 128, 128); font-style: italic;\">-- Using a list</span>\n<span class=\"nf\" style=\"color: rgb(0, 0, 255);\">factorial</span> <span class=\"n\">n</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">=</span> <span class=\"n\">product</span> <span class=\"p\">[</span><span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">..</span><span class=\"n\">n</span><span class=\"p\">]</span>\n\n<span class=\"c1\" style=\"color: rgb(64, 128, 128); font-style: italic;\">-- Using fold (implements product)</span>\n<span class=\"nf\" style=\"color: rgb(0, 0, 255);\">factorial</span> <span class=\"n\">n</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">=</span> <span class=\"n\">foldl</span> <span class=\"p\">(</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">*</span><span class=\"p\">)</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span> <span class=\"p\">[</span><span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">..</span><span class=\"n\">n</span><span class=\"p\">]</span>\n\n<span class=\"c1\" style=\"color: rgb(64, 128, 128); font-style: italic;\">-- Point-free style</span>\n<span class=\"nf\" style=\"color: rgb(0, 0, 255);\">factorial</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">=</span> <span class=\"n\">foldr</span> <span class=\"p\">(</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">*</span><span class=\"p\">)</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">.</span> <span class=\"n\">enumFromTo</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span></pre></div>","key":1,"id":11,"level":1},{"title":"installation","key":2,"id":17,"level":2},{"title":"concepts","key":3,"id":7,"level":3},{"title":"tools","key":4,"id":12,"level":4}]