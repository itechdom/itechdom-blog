[{"title":"concepts","key":0,"id":7,"level":0,"ideas":{"1":{"title":"strict but you don't have to specify sometimes?","content":"<pre style=\"font-family: monospace, Courier; color: black; border-color: rgb(221, 221, 221); padding: 1em; line-height: 1.3em; font-size: 14px; background-color: rgb(249, 249, 249);\"><span class=\"c1\" style=\"color: rgb(64, 128, 128); font-style: italic;\">-- Type annotation (optional)</span>\n<span class=\"nf\" style=\"color: rgb(0, 0, 255);\">factorial</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">::</span> <span class=\"p\">(</span><span class=\"kt\" style=\"color: rgb(176, 0, 64);\">Integral</span> <span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">=&gt;</span> <span class=\"n\">a</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">-&gt;</span> <span class=\"n\">a</span></pre>","key":1,"id":8,"level":0,"ideas":{},"ideasArr":[]},"2":{"title":"do you have to declare things twice?","key":2,"id":9,"level":1,"ideasArr":[]},"3":{"title":"Pure","key":3,"id":23,"level":2,"ideasArr":[]},"4":{"title":"Lazy","key":4,"id":24,"level":3,"ideasArr":[]},"5":{"title":"Functional","key":5,"id":25,"level":4,"ideasArr":[]},"6":{"title":"Patentheses not required","key":6,"id":28,"level":5,"ideasArr":[]}},"ideasArr":[{"title":"strict but you don't have to specify sometimes?","id":8,"ideas":{},"attr":{"attachment":{"contentType":"text/html","content":"<pre style=\"font-family: monospace, Courier; color: black; border-color: rgb(221, 221, 221); padding: 1em; line-height: 1.3em; font-size: 14px; background-color: rgb(249, 249, 249);\"><span class=\"c1\" style=\"color: rgb(64, 128, 128); font-style: italic;\">-- Type annotation (optional)</span>\n<span class=\"nf\" style=\"color: rgb(0, 0, 255);\">factorial</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">::</span> <span class=\"p\">(</span><span class=\"kt\" style=\"color: rgb(176, 0, 64);\">Integral</span> <span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">=&gt;</span> <span class=\"n\">a</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">-&gt;</span> <span class=\"n\">a</span></pre>"},"style":{}}},{"title":"do you have to declare things twice?","id":9},{"title":"Pure","id":23},{"title":"Lazy","id":24},{"title":"Functional","id":25},{"title":"Patentheses not required","id":28}]},{"title":"code examples","content":"<p style=\"margin-top: 0.5em; margin-bottom: 0.5em; line-height: 22.3999996185303px; color: rgb(37, 37, 37); font-family: sans-serif;\">Here is the&nbsp;<a href=\"https://en.wikipedia.org/wiki/Factorial\" title=\"Factorial\" style=\"color: rgb(11, 0, 128); background: none;\">factorial</a>&nbsp;function in Haskell, defined in a few different ways:</p><div class=\"mw-highlight mw-content-ltr\" dir=\"ltr\" style=\"direction: ltr; unicode-bidi: embed; color: rgb(37, 37, 37); font-family: sans-serif; line-height: 22.3999996185303px; background: rgb(248, 248, 248);\"><pre style=\"font-family: monospace, Courier; color: black; border-color: rgb(221, 221, 221); padding: 1em; line-height: 1.3em; background-color: rgb(249, 249, 249);\"><span class=\"c1\" style=\"color: rgb(64, 128, 128); font-style: italic;\">-- Type annotation (optional)</span>\n<span class=\"nf\" style=\"color: rgb(0, 0, 255);\">factorial</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">::</span> <span class=\"p\">(</span><span class=\"kt\" style=\"color: rgb(176, 0, 64);\">Integral</span> <span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">=&gt;</span> <span class=\"n\">a</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">-&gt;</span> <span class=\"n\">a</span>\n\n<span class=\"c1\" style=\"color: rgb(64, 128, 128); font-style: italic;\">-- Using recursion</span>\n<span class=\"nf\" style=\"color: rgb(0, 0, 255);\">factorial</span> <span class=\"n\">n</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">|</span> <span class=\"n\">n</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">&lt;</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">2</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">=</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span>\n<span class=\"nf\" style=\"color: rgb(0, 0, 255);\">factorial</span> <span class=\"n\">n</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">=</span> <span class=\"n\">n</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">*</span> <span class=\"n\">factorial</span> <span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">-</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\" style=\"color: rgb(64, 128, 128); font-style: italic;\">-- Using recursion, with guards</span>\n<span class=\"nf\" style=\"color: rgb(0, 0, 255);\">factorial</span> <span class=\"n\">n</span>\n  <span class=\"o\" style=\"color: rgb(102, 102, 102);\">|</span> <span class=\"n\">n</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">&lt;</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">2</span>     <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">=</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span>\n  <span class=\"o\" style=\"color: rgb(102, 102, 102);\">|</span> <span class=\"n\">otherwise</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">=</span> <span class=\"n\">n</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">*</span> <span class=\"n\">factorial</span> <span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">-</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\" style=\"color: rgb(64, 128, 128); font-style: italic;\">-- Using recursion but written without pattern matching</span>\n<span class=\"nf\" style=\"color: rgb(0, 0, 255);\">factorial</span> <span class=\"n\">n</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">=</span> <span class=\"kr\" style=\"color: rgb(0, 128, 0); font-weight: bold;\">if</span> <span class=\"n\">n</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">&gt;</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">0</span> <span class=\"kr\" style=\"color: rgb(0, 128, 0); font-weight: bold;\">then</span> <span class=\"n\">n</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">*</span> <span class=\"n\">factorial</span> <span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">-</span><span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span><span class=\"p\">)</span> <span class=\"kr\" style=\"color: rgb(0, 128, 0); font-weight: bold;\">else</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span>\n\n<span class=\"c1\" style=\"color: rgb(64, 128, 128); font-style: italic;\">-- Using a list</span>\n<span class=\"nf\" style=\"color: rgb(0, 0, 255);\">factorial</span> <span class=\"n\">n</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">=</span> <span class=\"n\">product</span> <span class=\"p\">[</span><span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">..</span><span class=\"n\">n</span><span class=\"p\">]</span>\n\n<span class=\"c1\" style=\"color: rgb(64, 128, 128); font-style: italic;\">-- Using fold (implements product)</span>\n<span class=\"nf\" style=\"color: rgb(0, 0, 255);\">factorial</span> <span class=\"n\">n</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">=</span> <span class=\"n\">foldl</span> <span class=\"p\">(</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">*</span><span class=\"p\">)</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span> <span class=\"p\">[</span><span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">..</span><span class=\"n\">n</span><span class=\"p\">]</span>\n\n<span class=\"c1\" style=\"color: rgb(64, 128, 128); font-style: italic;\">-- Point-free style</span>\n<span class=\"nf\" style=\"color: rgb(0, 0, 255);\">factorial</span> <span class=\"ow\" style=\"color: rgb(170, 34, 255); font-weight: bold;\">=</span> <span class=\"n\">foldr</span> <span class=\"p\">(</span><span class=\"o\" style=\"color: rgb(102, 102, 102);\">*</span><span class=\"p\">)</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span> <span class=\"o\" style=\"color: rgb(102, 102, 102);\">.</span> <span class=\"n\">enumFromTo</span> <span class=\"mi\" style=\"color: rgb(102, 102, 102);\">1</span></pre></div>","key":1,"id":11,"level":1,"ideas":{"1":{"title":"Simple main","content":"<pre class=\"de1\" style=\"margin-bottom: 0px; padding: 0px; font-family: monospace; line-height: 1.2em; overflow: auto; border: 0px none white; font-stretch: normal; font-size: medium; vertical-align: top; color: rgb(0, 0, 0); background: none rgb(255, 255, 255);\">main <span class=\"sy0\" style=\"margin: 0px; padding: 0px; color: rgb(51, 153, 51); font-weight: bold;\">::</span> <span class=\"kw4\" style=\"margin: 0px; padding: 0px; color: rgb(204, 204, 0); font-weight: bold;\">IO</span> <span class=\"br0\" style=\"margin: 0px; padding: 0px; color: green;\">(</span><span class=\"br0\" style=\"margin: 0px; padding: 0px; color: green;\">)</span>\nmain <span class=\"sy0\" style=\"margin: 0px; padding: 0px; color: rgb(51, 153, 51); font-weight: bold;\">=</span> <span class=\"kw1\" style=\"margin: 0px; padding: 0px; font-weight: bold; color: rgb(0, 102, 204);\">do</span>\n    <span class=\"kw3\" style=\"margin: 0px; padding: 0px; color: rgb(85, 68, 136) !important; font-weight: bold;\">putStrLn</span> <span class=\"st0\" style=\"margin: 0px; padding: 0px; color: rgb(221, 17, 68) !important; background-image: initial !important; background-attachment: initial !important; background-color: rgb(60, 179, 113); background-size: initial !important; background-origin: initial !important; background-clip: initial !important; background-position: initial !important; background-repeat: initial !important;\">\"Enter two lines\"</span>\n    line1 <span class=\"sy0\" style=\"margin: 0px; padding: 0px; color: rgb(51, 153, 51); font-weight: bold;\">&lt;-</span> <span class=\"kw3\" style=\"margin: 0px; padding: 0px; color: rgb(85, 68, 136) !important; font-weight: bold;\">getLine</span>                                    <span class=\"co1\" style=\"margin: 0px; padding: 0px; color: rgb(93, 71, 139); font-style: italic;\">-- line1&nbsp;:: String</span>\n    line2 <span class=\"sy0\" style=\"margin: 0px; padding: 0px; color: rgb(51, 153, 51); font-weight: bold;\">&lt;-</span> <span class=\"kw3\" style=\"margin: 0px; padding: 0px; color: rgb(85, 68, 136) !important; font-weight: bold;\">getLine</span>                                    <span class=\"co1\" style=\"margin: 0px; padding: 0px; color: rgb(93, 71, 139); font-style: italic;\">-- line2&nbsp;:: String</span>\n    <span class=\"kw3\" style=\"margin: 0px; padding: 0px; color: rgb(85, 68, 136) !important; font-weight: bold;\">putStrLn</span> <span class=\"br0\" style=\"margin: 0px; padding: 0px; color: green;\">(</span><span class=\"st0\" style=\"margin: 0px; padding: 0px; color: rgb(221, 17, 68) !important; background-image: initial !important; background-attachment: initial !important; background-color: rgb(60, 179, 113); background-size: initial !important; background-origin: initial !important; background-clip: initial !important; background-position: initial !important; background-repeat: initial !important;\">\"you said: \"</span> <span class=\"sy0\" style=\"margin: 0px; padding: 0px; color: rgb(51, 153, 51); font-weight: bold;\">++</span> line1 <span class=\"sy0\" style=\"margin: 0px; padding: 0px; color: rgb(51, 153, 51); font-weight: bold;\">++</span> <span class=\"st0\" style=\"margin: 0px; padding: 0px; color: rgb(221, 17, 68) !important; background-image: initial !important; background-attachment: initial !important; background-color: rgb(60, 179, 113); background-size: initial !important; background-origin: initial !important; background-clip: initial !important; background-position: initial !important; background-repeat: initial !important;\">\" and \"</span> <span class=\"sy0\" style=\"margin: 0px; padding: 0px; color: rgb(51, 153, 51); font-weight: bold;\">++</span> line2<span class=\"br0\" style=\"margin: 0px; padding: 0px; color: green;\">)</span></pre>","key":1,"id":31,"level":0,"ideasArr":[]},"2":{"title":"https://wiki.haskell.org/Learn_Haskell_in_10_minutes#Simple_expressions","key":2,"id":29,"level":1,"ideas":{"1":{"title":"simple tutorial","key":1,"id":30,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"simple tutorial","id":30}]}},"ideasArr":[{"title":"Simple main","id":31,"attr":{"attachment":{"contentType":"text/html","content":"<pre class=\"de1\" style=\"margin-bottom: 0px; padding: 0px; font-family: monospace; line-height: 1.2em; overflow: auto; border: 0px none white; font-stretch: normal; font-size: medium; vertical-align: top; color: rgb(0, 0, 0); background: none rgb(255, 255, 255);\">main <span class=\"sy0\" style=\"margin: 0px; padding: 0px; color: rgb(51, 153, 51); font-weight: bold;\">::</span> <span class=\"kw4\" style=\"margin: 0px; padding: 0px; color: rgb(204, 204, 0); font-weight: bold;\">IO</span> <span class=\"br0\" style=\"margin: 0px; padding: 0px; color: green;\">(</span><span class=\"br0\" style=\"margin: 0px; padding: 0px; color: green;\">)</span>\nmain <span class=\"sy0\" style=\"margin: 0px; padding: 0px; color: rgb(51, 153, 51); font-weight: bold;\">=</span> <span class=\"kw1\" style=\"margin: 0px; padding: 0px; font-weight: bold; color: rgb(0, 102, 204);\">do</span>\n    <span class=\"kw3\" style=\"margin: 0px; padding: 0px; color: rgb(85, 68, 136) !important; font-weight: bold;\">putStrLn</span> <span class=\"st0\" style=\"margin: 0px; padding: 0px; color: rgb(221, 17, 68) !important; background-image: initial !important; background-attachment: initial !important; background-color: rgb(60, 179, 113); background-size: initial !important; background-origin: initial !important; background-clip: initial !important; background-position: initial !important; background-repeat: initial !important;\">\"Enter two lines\"</span>\n    line1 <span class=\"sy0\" style=\"margin: 0px; padding: 0px; color: rgb(51, 153, 51); font-weight: bold;\">&lt;-</span> <span class=\"kw3\" style=\"margin: 0px; padding: 0px; color: rgb(85, 68, 136) !important; font-weight: bold;\">getLine</span>                                    <span class=\"co1\" style=\"margin: 0px; padding: 0px; color: rgb(93, 71, 139); font-style: italic;\">-- line1&nbsp;:: String</span>\n    line2 <span class=\"sy0\" style=\"margin: 0px; padding: 0px; color: rgb(51, 153, 51); font-weight: bold;\">&lt;-</span> <span class=\"kw3\" style=\"margin: 0px; padding: 0px; color: rgb(85, 68, 136) !important; font-weight: bold;\">getLine</span>                                    <span class=\"co1\" style=\"margin: 0px; padding: 0px; color: rgb(93, 71, 139); font-style: italic;\">-- line2&nbsp;:: String</span>\n    <span class=\"kw3\" style=\"margin: 0px; padding: 0px; color: rgb(85, 68, 136) !important; font-weight: bold;\">putStrLn</span> <span class=\"br0\" style=\"margin: 0px; padding: 0px; color: green;\">(</span><span class=\"st0\" style=\"margin: 0px; padding: 0px; color: rgb(221, 17, 68) !important; background-image: initial !important; background-attachment: initial !important; background-color: rgb(60, 179, 113); background-size: initial !important; background-origin: initial !important; background-clip: initial !important; background-position: initial !important; background-repeat: initial !important;\">\"you said: \"</span> <span class=\"sy0\" style=\"margin: 0px; padding: 0px; color: rgb(51, 153, 51); font-weight: bold;\">++</span> line1 <span class=\"sy0\" style=\"margin: 0px; padding: 0px; color: rgb(51, 153, 51); font-weight: bold;\">++</span> <span class=\"st0\" style=\"margin: 0px; padding: 0px; color: rgb(221, 17, 68) !important; background-image: initial !important; background-attachment: initial !important; background-color: rgb(60, 179, 113); background-size: initial !important; background-origin: initial !important; background-clip: initial !important; background-position: initial !important; background-repeat: initial !important;\">\" and \"</span> <span class=\"sy0\" style=\"margin: 0px; padding: 0px; color: rgb(51, 153, 51); font-weight: bold;\">++</span> line2<span class=\"br0\" style=\"margin: 0px; padding: 0px; color: green;\">)</span></pre>"},"style":{}}},{"title":"https://wiki.haskell.org/Learn_Haskell_in_10_minutes#Simple_expressions","id":29,"ideas":{"1":{"title":"simple tutorial","key":1,"id":30,"level":0,"ideasArr":[]}},"attr":{"style":{}}}]},{"title":"installation","key":2,"id":17,"level":2,"ideas":{"1":{"title":"https://github.com/bitemyapp/learnhaskell/blob/master/install.md","key":1,"id":18,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://github.com/bitemyapp/learnhaskell/blob/master/install.md","id":18}]},{"title":"resources","key":3,"id":2,"level":3,"ideas":{"1":{"title":"https://en.wikipedia.org/wiki/Haskell_(programming_language)","key":1,"id":3,"level":0,"ideasArr":[]},"2":{"title":"https://www.haskell.org/","key":2,"id":5,"level":1,"ideas":{"1":{"title":"official","key":1,"id":6,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"official","id":6}]},"3":{"title":"https://en.wikibooks.org/wiki/Yet_Another_Haskell_Tutorial/Preamble","key":3,"id":19,"level":2,"ideas":{"1":{"title":"wikibooks","key":1,"id":20,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"wikibooks","id":20}]},"4":{"title":"https://github.com/bitemyapp/learnhaskell","key":4,"id":26,"level":3,"ideas":{"1":{"title":"Learn haskell","key":1,"id":27,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"Learn haskell","id":27}]},"5":{"title":"http://book.realworldhaskell.org/read/why-functional-programming-why-haskell.html#id528893","key":5,"id":36,"level":4,"ideasArr":[]}},"ideasArr":[{"title":"https://en.wikipedia.org/wiki/Haskell_(programming_language)","id":3},{"title":"https://www.haskell.org/","id":5,"ideas":{"1":{"title":"official","key":1,"id":6,"level":0,"ideasArr":[]}}},{"title":"https://en.wikibooks.org/wiki/Yet_Another_Haskell_Tutorial/Preamble","id":19,"ideas":{"1":{"title":"wikibooks","key":1,"id":20,"level":0,"ideasArr":[]}}},{"title":"https://github.com/bitemyapp/learnhaskell","id":26,"ideas":{"1":{"title":"Learn haskell","key":1,"id":27,"level":0,"ideasArr":[]}}},{"title":"http://book.realworldhaskell.org/read/why-functional-programming-why-haskell.html#id528893","id":36}]},{"title":"tools","key":4,"id":12,"level":4,"ideas":{"3":{"title":"Stack","key":3,"id":32,"level":0,"ideas":{"1":{"title":"a virtual env for haskell","key":1,"id":33,"level":0,"ideasArr":[]},"2":{"title":"Very easy haskell setup","key":2,"id":34,"level":1,"ideasArr":[]},"3":{"title":"http://docs.haskellstack.org/en/stable/README.html","key":3,"id":35,"level":2,"ideasArr":[]},"4":{"title":"remember to append -exe when running ","key":4,"id":37,"level":3,"ideasArr":[]}},"ideasArr":[{"title":"a virtual env for haskell","id":33},{"title":"Very easy haskell setup","id":34},{"title":"http://docs.haskellstack.org/en/stable/README.html","id":35},{"title":"remember to append -exe when running ","id":37}]},"8":{"title":"Cabal","key":8,"id":14,"level":1,"ideas":{"1":{"title":"Package Manager","key":1,"id":15,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"Package Manager","id":15}]},"13":{"title":"GHC","key":13,"id":13,"level":2,"ideas":{"1":{"title":"Compiler, REPL, ","key":1,"id":16,"level":0,"ideasArr":[]},"2":{"title":"command to compile","key":2,"id":21,"level":1,"ideas":{"1":{"title":"% ghc --make Main.hs -o main","key":1,"id":22,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"% ghc --make Main.hs -o main","id":22}]}},"ideasArr":[{"title":"Compiler, REPL, ","id":16},{"title":"command to compile","id":21,"ideas":{"1":{"title":"% ghc --make Main.hs -o main","key":1,"id":22,"level":0,"ideasArr":[]}}}]}},"ideasArr":[{"title":"Stack","id":32,"ideas":{"1":{"title":"a virtual env for haskell","key":1,"id":33,"level":0,"ideasArr":[]},"2":{"title":"Very easy haskell setup","key":2,"id":34,"level":1,"ideasArr":[]},"3":{"title":"http://docs.haskellstack.org/en/stable/README.html","key":3,"id":35,"level":2,"ideasArr":[]},"4":{"title":"remember to append -exe when running ","key":4,"id":37,"level":3,"ideasArr":[]}},"attr":{"style":{},"collapsed":true}},{"title":"Cabal","id":14,"ideas":{"1":{"title":"Package Manager","key":1,"id":15,"level":0,"ideasArr":[]}},"attr":{"style":{},"collapsed":true}},{"title":"GHC","id":13,"ideas":{"1":{"title":"Compiler, REPL, ","key":1,"id":16,"level":0,"ideasArr":[]},"2":{"title":"command to compile","key":2,"id":21,"level":1,"ideas":{"1":{"title":"% ghc --make Main.hs -o main","key":1,"id":22,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"% ghc --make Main.hs -o main","id":22}]}},"attr":{"position":[83.5,111.875,1],"style":{},"collapsed":true}}]}]