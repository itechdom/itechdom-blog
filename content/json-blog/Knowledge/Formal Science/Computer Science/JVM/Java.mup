[{"title":"Concepts","key":0,"id":176,"level":0,"ideas":{"3":{"title":"IO","key":3,"id":200,"level":0,"ideas":{"1":{"title":"Streams","key":1,"id":220,"level":0,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_files_io.htm","key":1,"id":221,"level":0,"ideasArr":[]},"2":{"title":"example","content":"<pre class=\"prettyprint notranslate prettyprinted\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 5px; margin-bottom: 10px; border-radius: 0px; width: 604px; line-height: 16px; border-color: rgb(214, 214, 214); font-size: 12px; overflow: auto; color: rgb(49, 49, 49); background-color: rgb(238, 238, 238);\"><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">import</span><span class=\"pln\" style=\"box-sizing: border-box;\"> java</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">io</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.*;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">class</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">CopyFile</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">static</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">void</span><span class=\"pln\" style=\"box-sizing: border-box;\"> main</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">String</span><span class=\"pln\" style=\"box-sizing: border-box;\"> args</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">[])</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">throws</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">IOException</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">FileInputStream</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">FileOutputStream</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">try</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">new</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">FileInputStream</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">\"input.txt\"</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">new</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">FileOutputStream</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">\"output.txt\"</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         \n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">while</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">((</span><span class=\"pln\" style=\"box-sizing: border-box;\">c </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">read</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">())</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">-</span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(0, 102, 102);\">1</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">write</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">finally</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">close</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">();</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">close</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">();</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span></pre>","key":2,"id":222,"level":1,"ideasArr":[]},"3":{"title":"Stdin Example","content":"<pre class=\"prettyprint notranslate tryit prettyprinted\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 5px; margin-bottom: 10px; border-radius: 0px; width: 604px; line-height: 16px; border-color: rgb(214, 214, 214); font-size: 12px; overflow: auto; min-height: 37px; color: rgb(49, 49, 49); cursor: default; background-image: url(&quot;java/images/try-it.jpg&quot;) !important; background-attachment: initial !important; background-color: rgb(238, 238, 238) !important; background-size: initial !important; background-origin: initial !important; background-clip: initial !important; background-position: 100% 0%; background-repeat: no-repeat !important;\"><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">import</span><span class=\"pln\" style=\"box-sizing: border-box;\"> java</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">io</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.*;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">class</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">ReadConsole</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">static</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">void</span><span class=\"pln\" style=\"box-sizing: border-box;\"> main</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">String</span><span class=\"pln\" style=\"box-sizing: border-box;\"> args</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">[])</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">throws</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">IOException</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">InputStreamReader</span><span class=\"pln\" style=\"box-sizing: border-box;\"> cin </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">try</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         cin </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">new</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">InputStreamReader</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">System</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">System</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">println</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">\"Enter characters, 'q' to quit.\"</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">char</span><span class=\"pln\" style=\"box-sizing: border-box;\"> c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">do</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            c </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">char</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> cin</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">read</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">();</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">System</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">print</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">while</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">c </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">'q'</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">finally</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">cin </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            cin</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">close</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">();</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span></pre>","key":3,"id":223,"level":2,"ideasArr":[]},"4":{"title":"New java 8 syntax","content":"<h3 style=\"box-sizing: border-box; margin-top: 1em; margin-bottom: 16px; line-height: 1.43; font-size: 1.5em; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\">Streams</h3><p style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\"><a href=\"http://www.java8.org/\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">Java 8</a>&nbsp;has a nice&nbsp;<a href=\"http://blog.hartveld.com/2013/03/jdk-8-33-stream-api.html\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">stream</a>&nbsp;and lambda syntax. You could write code like this:</p><div class=\"highlight highlight-source-java\" style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\"><pre style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin-bottom: 0px; font-stretch: normal; line-height: 1.45; padding: 16px; border-radius: 3px; word-wrap: normal; word-break: normal; background-color: rgb(247, 247, 247);\"><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">final</span> <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">List&lt;<span class=\"pl-smi\" style=\"box-sizing: border-box; color: rgb(51, 51, 51);\">String</span>&gt;</span> filtered <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">=</span> list<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>stream()\n    .filter(s <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">-</span><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">&gt;</span> s<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>startsWith(<span class=\"pl-s\" style=\"box-sizing: border-box; color: rgb(24, 54, 145);\"><span class=\"pl-pds\" style=\"box-sizing: border-box;\">\"</span>s<span class=\"pl-pds\" style=\"box-sizing: border-box;\">\"</span></span>))\n    .map(s <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">-</span><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">&gt;</span> s<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>toUpperCase())\n    .collect(<span class=\"pl-smi\" style=\"box-sizing: border-box;\">Collectors</span><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>toList());</pre></div><p style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\">Instead of this:</p><div class=\"highlight highlight-source-java\" style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\"><pre style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin-bottom: 0px; font-stretch: normal; line-height: 1.45; padding: 16px; border-radius: 3px; word-wrap: normal; word-break: normal; background-color: rgb(247, 247, 247);\"><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">final</span> <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">List&lt;<span class=\"pl-smi\" style=\"box-sizing: border-box; color: rgb(51, 51, 51);\">String</span>&gt;</span> filtered <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">new</span> <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">ArrayList&lt;&gt;</span>();\n<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">for</span> (<span class=\"pl-smi\" style=\"box-sizing: border-box;\">String</span> str <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">:</span> list) {\n    <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">if</span> (str<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>startsWith(<span class=\"pl-s\" style=\"box-sizing: border-box; color: rgb(24, 54, 145);\"><span class=\"pl-pds\" style=\"box-sizing: border-box;\">\"</span>s<span class=\"pl-pds\" style=\"box-sizing: border-box;\">\"</span></span>) {\n        filtered<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>add(str<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>toUpperCase());\n    }\n}</pre></div><p style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\">This allows you to write more fluent code, which is more readable.</p>","key":4,"id":271,"level":3,"ideasArr":[]}},"ideasArr":[{"title":"http://www.tutorialspoint.com/java/java_files_io.htm","id":221},{"title":"example","id":222,"attr":{"attachment":{"contentType":"text/html","content":"<pre class=\"prettyprint notranslate prettyprinted\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 5px; margin-bottom: 10px; border-radius: 0px; width: 604px; line-height: 16px; border-color: rgb(214, 214, 214); font-size: 12px; overflow: auto; color: rgb(49, 49, 49); background-color: rgb(238, 238, 238);\"><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">import</span><span class=\"pln\" style=\"box-sizing: border-box;\"> java</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">io</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.*;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">class</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">CopyFile</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">static</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">void</span><span class=\"pln\" style=\"box-sizing: border-box;\"> main</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">String</span><span class=\"pln\" style=\"box-sizing: border-box;\"> args</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">[])</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">throws</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">IOException</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">FileInputStream</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">FileOutputStream</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">try</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">new</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">FileInputStream</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">\"input.txt\"</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">new</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">FileOutputStream</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">\"output.txt\"</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         \n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">while</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">((</span><span class=\"pln\" style=\"box-sizing: border-box;\">c </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">read</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">())</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">-</span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(0, 102, 102);\">1</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">write</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">finally</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">close</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">();</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">close</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">();</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span></pre>"},"style":{}}},{"title":"Stdin Example","id":223,"attr":{"attachment":{"contentType":"text/html","content":"<pre class=\"prettyprint notranslate tryit prettyprinted\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 5px; margin-bottom: 10px; border-radius: 0px; width: 604px; line-height: 16px; border-color: rgb(214, 214, 214); font-size: 12px; overflow: auto; min-height: 37px; color: rgb(49, 49, 49); cursor: default; background-image: url(&quot;java/images/try-it.jpg&quot;) !important; background-attachment: initial !important; background-color: rgb(238, 238, 238) !important; background-size: initial !important; background-origin: initial !important; background-clip: initial !important; background-position: 100% 0%; background-repeat: no-repeat !important;\"><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">import</span><span class=\"pln\" style=\"box-sizing: border-box;\"> java</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">io</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.*;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">class</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">ReadConsole</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">static</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">void</span><span class=\"pln\" style=\"box-sizing: border-box;\"> main</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">String</span><span class=\"pln\" style=\"box-sizing: border-box;\"> args</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">[])</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">throws</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">IOException</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">InputStreamReader</span><span class=\"pln\" style=\"box-sizing: border-box;\"> cin </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">try</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         cin </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">new</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">InputStreamReader</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">System</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">System</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">println</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">\"Enter characters, 'q' to quit.\"</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">char</span><span class=\"pln\" style=\"box-sizing: border-box;\"> c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">do</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            c </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">char</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> cin</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">read</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">();</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">System</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">print</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">while</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">c </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">'q'</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">finally</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">cin </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            cin</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">close</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">();</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span></pre>"},"style":{}}},{"title":"New java 8 syntax","id":271,"attr":{"attachment":{"contentType":"text/html","content":"<h3 style=\"box-sizing: border-box; margin-top: 1em; margin-bottom: 16px; line-height: 1.43; font-size: 1.5em; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\">Streams</h3><p style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\"><a href=\"http://www.java8.org/\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">Java 8</a>&nbsp;has a nice&nbsp;<a href=\"http://blog.hartveld.com/2013/03/jdk-8-33-stream-api.html\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">stream</a>&nbsp;and lambda syntax. You could write code like this:</p><div class=\"highlight highlight-source-java\" style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\"><pre style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin-bottom: 0px; font-stretch: normal; line-height: 1.45; padding: 16px; border-radius: 3px; word-wrap: normal; word-break: normal; background-color: rgb(247, 247, 247);\"><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">final</span> <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">List&lt;<span class=\"pl-smi\" style=\"box-sizing: border-box; color: rgb(51, 51, 51);\">String</span>&gt;</span> filtered <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">=</span> list<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>stream()\n    .filter(s <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">-</span><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">&gt;</span> s<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>startsWith(<span class=\"pl-s\" style=\"box-sizing: border-box; color: rgb(24, 54, 145);\"><span class=\"pl-pds\" style=\"box-sizing: border-box;\">\"</span>s<span class=\"pl-pds\" style=\"box-sizing: border-box;\">\"</span></span>))\n    .map(s <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">-</span><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">&gt;</span> s<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>toUpperCase())\n    .collect(<span class=\"pl-smi\" style=\"box-sizing: border-box;\">Collectors</span><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>toList());</pre></div><p style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\">Instead of this:</p><div class=\"highlight highlight-source-java\" style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\"><pre style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin-bottom: 0px; font-stretch: normal; line-height: 1.45; padding: 16px; border-radius: 3px; word-wrap: normal; word-break: normal; background-color: rgb(247, 247, 247);\"><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">final</span> <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">List&lt;<span class=\"pl-smi\" style=\"box-sizing: border-box; color: rgb(51, 51, 51);\">String</span>&gt;</span> filtered <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">new</span> <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">ArrayList&lt;&gt;</span>();\n<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">for</span> (<span class=\"pl-smi\" style=\"box-sizing: border-box;\">String</span> str <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">:</span> list) {\n    <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">if</span> (str<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>startsWith(<span class=\"pl-s\" style=\"box-sizing: border-box; color: rgb(24, 54, 145);\"><span class=\"pl-pds\" style=\"box-sizing: border-box;\">\"</span>s<span class=\"pl-pds\" style=\"box-sizing: border-box;\">\"</span></span>) {\n        filtered<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>add(str<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>toUpperCase());\n    }\n}</pre></div><p style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\">This allows you to write more fluent code, which is more readable.</p>"},"style":{}}}]}},"ideasArr":[{"title":"Streams","id":220,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_files_io.htm","key":1,"id":221,"level":0,"ideasArr":[]},"2":{"title":"example","content":"<pre class=\"prettyprint notranslate prettyprinted\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 5px; margin-bottom: 10px; border-radius: 0px; width: 604px; line-height: 16px; border-color: rgb(214, 214, 214); font-size: 12px; overflow: auto; color: rgb(49, 49, 49); background-color: rgb(238, 238, 238);\"><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">import</span><span class=\"pln\" style=\"box-sizing: border-box;\"> java</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">io</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.*;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">class</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">CopyFile</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">static</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">void</span><span class=\"pln\" style=\"box-sizing: border-box;\"> main</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">String</span><span class=\"pln\" style=\"box-sizing: border-box;\"> args</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">[])</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">throws</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">IOException</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">FileInputStream</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">FileOutputStream</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">try</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">new</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">FileInputStream</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">\"input.txt\"</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">new</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">FileOutputStream</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">\"output.txt\"</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         \n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">while</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">((</span><span class=\"pln\" style=\"box-sizing: border-box;\">c </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">read</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">())</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">-</span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(0, 102, 102);\">1</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">write</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">finally</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">close</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">();</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">close</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">();</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span></pre>","key":2,"id":222,"level":1,"ideasArr":[]},"3":{"title":"Stdin Example","content":"<pre class=\"prettyprint notranslate tryit prettyprinted\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 5px; margin-bottom: 10px; border-radius: 0px; width: 604px; line-height: 16px; border-color: rgb(214, 214, 214); font-size: 12px; overflow: auto; min-height: 37px; color: rgb(49, 49, 49); cursor: default; background-image: url(&quot;java/images/try-it.jpg&quot;) !important; background-attachment: initial !important; background-color: rgb(238, 238, 238) !important; background-size: initial !important; background-origin: initial !important; background-clip: initial !important; background-position: 100% 0%; background-repeat: no-repeat !important;\"><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">import</span><span class=\"pln\" style=\"box-sizing: border-box;\"> java</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">io</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.*;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">class</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">ReadConsole</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">static</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">void</span><span class=\"pln\" style=\"box-sizing: border-box;\"> main</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">String</span><span class=\"pln\" style=\"box-sizing: border-box;\"> args</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">[])</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">throws</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">IOException</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">InputStreamReader</span><span class=\"pln\" style=\"box-sizing: border-box;\"> cin </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">try</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         cin </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">new</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">InputStreamReader</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">System</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">System</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">println</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">\"Enter characters, 'q' to quit.\"</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">char</span><span class=\"pln\" style=\"box-sizing: border-box;\"> c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">do</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            c </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">char</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> cin</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">read</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">();</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">System</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">print</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">while</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">c </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">'q'</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">finally</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">cin </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            cin</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">close</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">();</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span></pre>","key":3,"id":223,"level":2,"ideasArr":[]},"4":{"title":"New java 8 syntax","content":"<h3 style=\"box-sizing: border-box; margin-top: 1em; margin-bottom: 16px; line-height: 1.43; font-size: 1.5em; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\">Streams</h3><p style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\"><a href=\"http://www.java8.org/\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">Java 8</a>&nbsp;has a nice&nbsp;<a href=\"http://blog.hartveld.com/2013/03/jdk-8-33-stream-api.html\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">stream</a>&nbsp;and lambda syntax. You could write code like this:</p><div class=\"highlight highlight-source-java\" style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\"><pre style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin-bottom: 0px; font-stretch: normal; line-height: 1.45; padding: 16px; border-radius: 3px; word-wrap: normal; word-break: normal; background-color: rgb(247, 247, 247);\"><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">final</span> <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">List&lt;<span class=\"pl-smi\" style=\"box-sizing: border-box; color: rgb(51, 51, 51);\">String</span>&gt;</span> filtered <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">=</span> list<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>stream()\n    .filter(s <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">-</span><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">&gt;</span> s<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>startsWith(<span class=\"pl-s\" style=\"box-sizing: border-box; color: rgb(24, 54, 145);\"><span class=\"pl-pds\" style=\"box-sizing: border-box;\">\"</span>s<span class=\"pl-pds\" style=\"box-sizing: border-box;\">\"</span></span>))\n    .map(s <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">-</span><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">&gt;</span> s<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>toUpperCase())\n    .collect(<span class=\"pl-smi\" style=\"box-sizing: border-box;\">Collectors</span><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>toList());</pre></div><p style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\">Instead of this:</p><div class=\"highlight highlight-source-java\" style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\"><pre style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin-bottom: 0px; font-stretch: normal; line-height: 1.45; padding: 16px; border-radius: 3px; word-wrap: normal; word-break: normal; background-color: rgb(247, 247, 247);\"><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">final</span> <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">List&lt;<span class=\"pl-smi\" style=\"box-sizing: border-box; color: rgb(51, 51, 51);\">String</span>&gt;</span> filtered <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">new</span> <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">ArrayList&lt;&gt;</span>();\n<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">for</span> (<span class=\"pl-smi\" style=\"box-sizing: border-box;\">String</span> str <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">:</span> list) {\n    <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">if</span> (str<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>startsWith(<span class=\"pl-s\" style=\"box-sizing: border-box; color: rgb(24, 54, 145);\"><span class=\"pl-pds\" style=\"box-sizing: border-box;\">\"</span>s<span class=\"pl-pds\" style=\"box-sizing: border-box;\">\"</span></span>) {\n        filtered<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>add(str<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>toUpperCase());\n    }\n}</pre></div><p style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\">This allows you to write more fluent code, which is more readable.</p>","key":4,"id":271,"level":3,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}}]},"9":{"title":"Exceptions","key":9,"id":224,"level":1,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_exceptions.htm","key":1,"id":225,"level":0,"ideasArr":[]},"2":{"title":"java.lang.Exception","key":2,"id":227,"level":1,"ideasArr":[]}},"ideasArr":[{"title":"http://www.tutorialspoint.com/java/java_exceptions.htm","id":225},{"title":"java.lang.Exception","id":227}]},"12":{"title":"Packages","key":12,"id":235,"level":2,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_packages.htm","key":1,"id":236,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"http://www.tutorialspoint.com/java/java_packages.htm","id":236}]},"13":{"title":"Data Structures","content":"<ul class=\"list\" style=\"box-sizing: border-box; color: rgb(49, 49, 49); font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; line-height: 22px;\"><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Enumeration</p></li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">BitSet</p></li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Vector</p></li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Stack</p></li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Dictionary</p></li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Hashtable</p></li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Properties</p></li></ul>","key":13,"id":237,"level":3,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_data_structures.htm","key":1,"id":240,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"http://www.tutorialspoint.com/java/java_data_structures.htm","id":240}]},"14":{"title":"Collections","key":14,"id":241,"level":4,"ideas":{"1":{"title":"Why not vectors for example?","content":"<p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">The collections framework was designed to meet several goals.</p><ul class=\"list\" style=\"box-sizing: border-box; color: rgb(49, 49, 49); font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; line-height: 22px;\"><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">The framework had to be high-performance. The implementations for the fundamental collections (dynamic arrays, linked lists, trees, and hashtables) are highly efficient.</p></li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">The framework had to allow different types of collections to work in a similar manner and with a high degree of interoperability.</p></li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Extending and/or adapting a collection had to be easy.</p></li></ul>","key":1,"id":242,"level":0,"ideasArr":[]},"2":{"title":"http://www.tutorialspoint.com/java/java_collections.htm","key":2,"id":243,"level":1,"ideasArr":[]}},"ideasArr":[{"title":"Why not vectors for example?","id":242,"attr":{"attachment":{"contentType":"text/html","content":"<p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">The collections framework was designed to meet several goals.</p><ul class=\"list\" style=\"box-sizing: border-box; color: rgb(49, 49, 49); font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; line-height: 22px;\"><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">The framework had to be high-performance. The implementations for the fundamental collections (dynamic arrays, linked lists, trees, and hashtables) are highly efficient.</p></li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">The framework had to allow different types of collections to work in a similar manner and with a high degree of interoperability.</p></li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Extending and/or adapting a collection had to be easy.</p></li></ul>"},"style":{}}},{"title":"http://www.tutorialspoint.com/java/java_collections.htm","id":243}]},"15":{"title":"Generics","key":15,"id":244,"level":5,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_generics.htm","key":1,"id":245,"level":0,"ideasArr":[]},"2":{"title":"What if I want to implement a method that's not tied to a type","key":2,"id":246,"level":1,"ideasArr":[]}},"ideasArr":[{"title":"http://www.tutorialspoint.com/java/java_generics.htm","id":245},{"title":"What if I want to implement a method that's not tied to a type","id":246}]},"16":{"title":"Serialization","key":16,"id":247,"level":6,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_serialization.htm","key":1,"id":248,"level":0,"ideasArr":[]},"2":{"title":"Storing object in a file","key":2,"id":249,"level":1,"ideasArr":[]}},"ideasArr":[{"title":"http://www.tutorialspoint.com/java/java_serialization.htm","id":248},{"title":"Storing object in a file","id":249}]},"17":{"title":"Networking","key":17,"id":250,"level":7,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_networking.htm","key":1,"id":251,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"http://www.tutorialspoint.com/java/java_networking.htm","id":251}]},"18":{"title":"Multi-threading","key":18,"id":252,"level":8,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_multithreading.htm","key":1,"id":253,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"http://www.tutorialspoint.com/java/java_multithreading.htm","id":253}]},"19":{"title":"DI","key":19,"id":255,"level":9,"ideas":{"1":{"title":"https://www.objc.io/issues/11-android/dependency-injection-in-java/","key":1,"id":257,"level":0,"ideasArr":[]},"2":{"title":"https://github.com/cxxr/better-java#dependency-injection","key":2,"id":258,"level":1,"ideasArr":[]},"3":{"title":"We use @inject annotation","key":3,"id":259,"level":2,"ideasArr":[]},"4":{"title":"There are tools that generate code at compile time or runtime","key":4,"id":261,"level":3,"ideasArr":[]}},"ideasArr":[{"title":"https://www.objc.io/issues/11-android/dependency-injection-in-java/","id":257},{"title":"https://github.com/cxxr/better-java#dependency-injection","id":258},{"title":"We use @inject annotation","id":259},{"title":"There are tools that generate code at compile time or runtime","id":261}]},"20":{"title":"Annotations","key":20,"id":256,"level":10,"ideas":{"1":{"title":"@inject","key":1,"id":260,"level":0,"ideasArr":[]},"2":{"title":"How to create a runtime annotation","content":"<h3 id=\"an-example-of-runtime-annotation-processing\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; padding: 2.0736em 0px 0px; border: 0px; font-stretch: inherit; font-size: 1.44em; line-height: 1.2; font-family: AkkuratTT, sans-serif; vertical-align: baseline; max-width: 26.3889em; color: rgb(38, 38, 38);\">An Example of Runtime Annotation Processing</h3><p style=\"box-sizing: border-box; margin-top: 1em; margin-bottom: 0px; padding: 0px; border: 0px; font-stretch: inherit; font-size: 20px; line-height: 1.5; font-family: AkkuratTT, sans-serif; vertical-align: baseline; max-width: 38em; color: rgb(38, 38, 38);\">I’d like to finish up by showing a simple example of how one might define and process a runtime annotation. Let’s say that you were an exceptionally impatient person and were tired of typing out fully qualified static constants in your Android codebase, constants like these:</p><pre style=\"box-sizing: border-box; margin: 1.17647em -1.17647em; padding: 1.17647em; border: 0px; font-stretch: inherit; font-size: 0.85em; line-height: 1.25; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; position: relative; display: inline-block; color: rgb(26, 26, 26); border-radius: 5px; min-width: 47.0588em; background: rgb(247, 247, 247);\"><button class=\"js-select-code\" style=\"-webkit-font-smoothing: antialiased; font-family: AkkuratTT, sans-serif; font-size: 0.7em; text-transform: uppercase; font-weight: bold; letter-spacing: 0.1em; line-height: 1; -webkit-appearance: none; padding: 0px; border: none; color: rgb(0, 146, 219); position: absolute; top: 1.68067em; right: 1.68067em; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;\">SELECT ALL</button><code class=\"java hljs\" style=\"box-sizing: border-box; margin: 0px; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; display: block; overflow-x: auto; overflow-y: hidden;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">public</span> <span class=\"hljs-class\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">class</span> <span class=\"hljs-title\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(197, 96, 33);\">CrimeActivity</span> </span>{\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">public</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">static</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">final</span> String ACTION_VIEW_CRIME = \n        “com.bignerdranch.android.criminalintent.CrimeActivity.ACTION_VIEW_CRIME”;\n}\n</code></pre><span style=\"color: rgb(38, 38, 38); font-family: AkkuratTT, sans-serif; font-size: 20px;\"></span><p style=\"box-sizing: border-box; margin-top: 1.25em; margin-bottom: 0px; padding: 0px; border: 0px; font-stretch: inherit; font-size: 20px; line-height: 1.5; font-family: AkkuratTT, sans-serif; vertical-align: baseline; max-width: 38em; color: rgb(38, 38, 38);\">You could use a runtime annotation to do this work for you. First, you’d create the annotation class:</p><pre style=\"box-sizing: border-box; margin: 1.17647em -1.17647em; padding: 1.17647em; border: 0px; font-stretch: inherit; font-size: 0.85em; line-height: 1.25; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; position: relative; display: inline-block; color: rgb(26, 26, 26); border-radius: 5px; min-width: 47.0588em; background: rgb(247, 247, 247);\"><button class=\"js-select-code\" style=\"-webkit-font-smoothing: antialiased; font-family: AkkuratTT, sans-serif; font-size: 0.7em; text-transform: uppercase; font-weight: bold; letter-spacing: 0.1em; line-height: 1; -webkit-appearance: none; padding: 0px; border: none; color: rgb(0, 146, 219); position: absolute; top: 1.68067em; right: 1.68067em; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;\">SELECT ALL</button><code class=\"java hljs\" style=\"box-sizing: border-box; margin: 0px; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; display: block; overflow-x: auto; overflow-y: hidden;\"><span class=\"hljs-annotation\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(155, 133, 157);\">@Retention</span>(RetentionPolicy.RUNTIME)\n<span class=\"hljs-annotation\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(155, 133, 157);\">@Target</span>( { ElementType.FIELD })\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">public</span> <span class=\"hljs-annotation\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(155, 133, 157);\">@interface</span> ServiceConstant { }\n</code></pre><span style=\"color: rgb(38, 38, 38); font-family: AkkuratTT, sans-serif; font-size: 20px;\"></span><p style=\"box-sizing: border-box; margin-top: 1.25em; margin-bottom: 0px; padding: 0px; border: 0px; font-stretch: inherit; font-size: 20px; line-height: 1.5; font-family: AkkuratTT, sans-serif; vertical-align: baseline; max-width: 38em; color: rgb(38, 38, 38);\">This code declares an annotation named&nbsp;<code style=\"box-sizing: border-box; margin: 0px; padding: 0.1em 0.25em; border: 0px; font-variant: inherit; font-stretch: inherit; font-size: 0.9em; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; border-radius: 5px; color: rgb(34, 34, 34); word-wrap: break-word; background: rgb(242, 242, 242);\">ServiceConstant</code>. The code is itself annotated with two annotations:&nbsp;<code style=\"box-sizing: border-box; margin: 0px; padding: 0.1em 0.25em; border: 0px; font-variant: inherit; font-stretch: inherit; font-size: 0.9em; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; border-radius: 5px; color: rgb(34, 34, 34); word-wrap: break-word; background: rgb(242, 242, 242);\">@Retention</code>, and&nbsp;<code style=\"box-sizing: border-box; margin: 0px; padding: 0.1em 0.25em; border: 0px; font-variant: inherit; font-stretch: inherit; font-size: 0.9em; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; border-radius: 5px; color: rgb(34, 34, 34); word-wrap: break-word; background: rgb(242, 242, 242);\">@Target</code>.&nbsp;<code style=\"box-sizing: border-box; margin: 0px; padding: 0.1em 0.25em; border: 0px; font-variant: inherit; font-stretch: inherit; font-size: 0.9em; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; border-radius: 5px; color: rgb(34, 34, 34); word-wrap: break-word; background: rgb(242, 242, 242);\">@Retention</code>&nbsp;says how long the annotation will stick around. Here, we say that we want to see it at runtime. If we wanted this annotation to be processed at compile time only, we could have specified&nbsp;<code style=\"box-sizing: border-box; margin: 0px; padding: 0.1em 0.25em; border: 0px; font-variant: inherit; font-stretch: inherit; font-size: 0.9em; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; border-radius: 5px; color: rgb(34, 34, 34); word-wrap: break-word; background: rgb(242, 242, 242);\">RetentionPolicy.SOURCE</code>.</p><p style=\"box-sizing: border-box; margin-top: 1.25em; margin-bottom: 0px; padding: 0px; border: 0px; font-stretch: inherit; font-size: 20px; line-height: 1.5; font-family: AkkuratTT, sans-serif; vertical-align: baseline; max-width: 38em; color: rgb(38, 38, 38);\">The other annotation,&nbsp;<code style=\"box-sizing: border-box; margin: 0px; padding: 0.1em 0.25em; border: 0px; font-variant: inherit; font-stretch: inherit; font-size: 0.9em; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; border-radius: 5px; color: rgb(34, 34, 34); word-wrap: break-word; background: rgb(242, 242, 242);\">@Target</code>, says where you can put the annotation in your source code. Any number of values can be provided. Our annotation is only valid for fields, so we have just provided&nbsp;<code style=\"box-sizing: border-box; margin: 0px; padding: 0.1em 0.25em; border: 0px; font-variant: inherit; font-stretch: inherit; font-size: 0.9em; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; border-radius: 5px; color: rgb(34, 34, 34); word-wrap: break-word; background: rgb(242, 242, 242);\">ElementType.FIELD</code>.</p><p style=\"box-sizing: border-box; margin-top: 1.25em; margin-bottom: 0px; padding: 0px; border: 0px; font-stretch: inherit; font-size: 20px; line-height: 1.5; font-family: AkkuratTT, sans-serif; vertical-align: baseline; max-width: 38em; color: rgb(38, 38, 38);\">Once the annotation is defined, we write some code to look for it and populate the annotated field automatically:</p><pre style=\"box-sizing: border-box; margin: 1.17647em -1.17647em; padding: 1.17647em; border: 0px; font-stretch: inherit; font-size: 0.85em; line-height: 1.25; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; position: relative; display: inline-block; color: rgb(26, 26, 26); border-radius: 5px; min-width: 47.0588em; background: rgb(247, 247, 247);\"><button class=\"js-select-code\" style=\"-webkit-font-smoothing: antialiased; font-family: AkkuratTT, sans-serif; font-size: 0.7em; text-transform: uppercase; font-weight: bold; letter-spacing: 0.1em; line-height: 1; -webkit-appearance: none; padding: 0px; border: none; color: rgb(0, 146, 219); position: absolute; top: 1.68067em; right: 1.68067em; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;\">SELECT ALL</button><code class=\"java hljs\" style=\"box-sizing: border-box; margin: 0px; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; display: block; overflow-x: auto; overflow-y: hidden;\"><span class=\"hljs-function\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">public</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">static</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">void</span> <span class=\"hljs-title\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">populateConstants</span><span class=\"hljs-params\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(197, 96, 33);\">(Class&lt;?&gt; klass)</span> </span>{\n    String packageName = klass.getPackage().getName();\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">for</span> (Field field : klass.getDeclaredFields()) {\n        <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">if</span> (Modifier.isStatic(field.getModifiers()) &amp;&amp; \n                field.isAnnotationPresent(ServiceConstant.class)) {\n            String value = packageName + <span class=\"hljs-string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(239, 65, 52);\">\".\"</span> + field.getName();\n            <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">try</span> {\n                field.set(<span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">null</span>, value);\n                Log.i(TAG, <span class=\"hljs-string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(239, 65, 52);\">\"Setup service constant: \"</span> + value + <span class=\"hljs-string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(239, 65, 52);\">\"\"</span>);\n            } <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">catch</span> (IllegalAccessException iae) {\n                Log.e(TAG, <span class=\"hljs-string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(239, 65, 52);\">\"Unable to setup constant for field \"</span> + \n                        field.getName() +\n                        <span class=\"hljs-string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(239, 65, 52);\">\" in class \"</span> + klass.getName());\n            }\n        }\n    }\n}\n</code></pre><span style=\"color: rgb(38, 38, 38); font-family: AkkuratTT, sans-serif; font-size: 20px;\"></span><p style=\"box-sizing: border-box; margin-top: 1.25em; margin-bottom: 0px; padding: 0px; border: 0px; font-stretch: inherit; font-size: 20px; line-height: 1.5; font-family: AkkuratTT, sans-serif; vertical-align: baseline; max-width: 38em; color: rgb(38, 38, 38);\">Finally, we add the annotation to our code, and call our magic method:</p><pre style=\"box-sizing: border-box; margin: 1.17647em -1.17647em; padding: 1.17647em; border: 0px; font-stretch: inherit; font-size: 0.85em; line-height: 1.25; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; position: relative; display: inline-block; color: rgb(26, 26, 26); border-radius: 5px; min-width: 47.0588em; background: rgb(247, 247, 247);\"><button class=\"js-select-code\" style=\"-webkit-font-smoothing: antialiased; font-family: AkkuratTT, sans-serif; font-size: 0.7em; text-transform: uppercase; font-weight: bold; letter-spacing: 0.1em; line-height: 1; -webkit-appearance: none; padding: 0px; border: none; color: rgb(0, 146, 219); position: absolute; top: 1.68067em; right: 1.68067em; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;\">SELECT ALL</button><code class=\"java hljs\" style=\"box-sizing: border-box; margin: 0px; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; display: block; overflow-x: auto; overflow-y: hidden;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">public</span> <span class=\"hljs-class\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">class</span> <span class=\"hljs-title\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(197, 96, 33);\">CrimeActivity</span> </span>{\n    <span class=\"hljs-annotation\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(155, 133, 157);\">@ServiceConstant</span>\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">public</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">static</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">final</span> String ACTION_VIEW_CRIME;\n\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">static</span> {\n        ServiceUtils.populateConstants(CrimeActivity.class);\n    }\n}</code></pre>","key":2,"id":263,"level":1,"ideasArr":[]}},"ideasArr":[{"title":"@inject","id":260},{"title":"How to create a runtime annotation","id":263,"attr":{"attachment":{"contentType":"text/html","content":"<h3 id=\"an-example-of-runtime-annotation-processing\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; padding: 2.0736em 0px 0px; border: 0px; font-stretch: inherit; font-size: 1.44em; line-height: 1.2; font-family: AkkuratTT, sans-serif; vertical-align: baseline; max-width: 26.3889em; color: rgb(38, 38, 38);\">An Example of Runtime Annotation Processing</h3><p style=\"box-sizing: border-box; margin-top: 1em; margin-bottom: 0px; padding: 0px; border: 0px; font-stretch: inherit; font-size: 20px; line-height: 1.5; font-family: AkkuratTT, sans-serif; vertical-align: baseline; max-width: 38em; color: rgb(38, 38, 38);\">I’d like to finish up by showing a simple example of how one might define and process a runtime annotation. Let’s say that you were an exceptionally impatient person and were tired of typing out fully qualified static constants in your Android codebase, constants like these:</p><pre style=\"box-sizing: border-box; margin: 1.17647em -1.17647em; padding: 1.17647em; border: 0px; font-stretch: inherit; font-size: 0.85em; line-height: 1.25; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; position: relative; display: inline-block; color: rgb(26, 26, 26); border-radius: 5px; min-width: 47.0588em; background: rgb(247, 247, 247);\"><button class=\"js-select-code\" style=\"-webkit-font-smoothing: antialiased; font-family: AkkuratTT, sans-serif; font-size: 0.7em; text-transform: uppercase; font-weight: bold; letter-spacing: 0.1em; line-height: 1; -webkit-appearance: none; padding: 0px; border: none; color: rgb(0, 146, 219); position: absolute; top: 1.68067em; right: 1.68067em; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;\">SELECT ALL</button><code class=\"java hljs\" style=\"box-sizing: border-box; margin: 0px; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; display: block; overflow-x: auto; overflow-y: hidden;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">public</span> <span class=\"hljs-class\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">class</span> <span class=\"hljs-title\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(197, 96, 33);\">CrimeActivity</span> </span>{\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">public</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">static</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">final</span> String ACTION_VIEW_CRIME = \n        “com.bignerdranch.android.criminalintent.CrimeActivity.ACTION_VIEW_CRIME”;\n}\n</code></pre><span style=\"color: rgb(38, 38, 38); font-family: AkkuratTT, sans-serif; font-size: 20px;\"></span><p style=\"box-sizing: border-box; margin-top: 1.25em; margin-bottom: 0px; padding: 0px; border: 0px; font-stretch: inherit; font-size: 20px; line-height: 1.5; font-family: AkkuratTT, sans-serif; vertical-align: baseline; max-width: 38em; color: rgb(38, 38, 38);\">You could use a runtime annotation to do this work for you. First, you’d create the annotation class:</p><pre style=\"box-sizing: border-box; margin: 1.17647em -1.17647em; padding: 1.17647em; border: 0px; font-stretch: inherit; font-size: 0.85em; line-height: 1.25; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; position: relative; display: inline-block; color: rgb(26, 26, 26); border-radius: 5px; min-width: 47.0588em; background: rgb(247, 247, 247);\"><button class=\"js-select-code\" style=\"-webkit-font-smoothing: antialiased; font-family: AkkuratTT, sans-serif; font-size: 0.7em; text-transform: uppercase; font-weight: bold; letter-spacing: 0.1em; line-height: 1; -webkit-appearance: none; padding: 0px; border: none; color: rgb(0, 146, 219); position: absolute; top: 1.68067em; right: 1.68067em; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;\">SELECT ALL</button><code class=\"java hljs\" style=\"box-sizing: border-box; margin: 0px; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; display: block; overflow-x: auto; overflow-y: hidden;\"><span class=\"hljs-annotation\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(155, 133, 157);\">@Retention</span>(RetentionPolicy.RUNTIME)\n<span class=\"hljs-annotation\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(155, 133, 157);\">@Target</span>( { ElementType.FIELD })\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">public</span> <span class=\"hljs-annotation\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(155, 133, 157);\">@interface</span> ServiceConstant { }\n</code></pre><span style=\"color: rgb(38, 38, 38); font-family: AkkuratTT, sans-serif; font-size: 20px;\"></span><p style=\"box-sizing: border-box; margin-top: 1.25em; margin-bottom: 0px; padding: 0px; border: 0px; font-stretch: inherit; font-size: 20px; line-height: 1.5; font-family: AkkuratTT, sans-serif; vertical-align: baseline; max-width: 38em; color: rgb(38, 38, 38);\">This code declares an annotation named&nbsp;<code style=\"box-sizing: border-box; margin: 0px; padding: 0.1em 0.25em; border: 0px; font-variant: inherit; font-stretch: inherit; font-size: 0.9em; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; border-radius: 5px; color: rgb(34, 34, 34); word-wrap: break-word; background: rgb(242, 242, 242);\">ServiceConstant</code>. The code is itself annotated with two annotations:&nbsp;<code style=\"box-sizing: border-box; margin: 0px; padding: 0.1em 0.25em; border: 0px; font-variant: inherit; font-stretch: inherit; font-size: 0.9em; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; border-radius: 5px; color: rgb(34, 34, 34); word-wrap: break-word; background: rgb(242, 242, 242);\">@Retention</code>, and&nbsp;<code style=\"box-sizing: border-box; margin: 0px; padding: 0.1em 0.25em; border: 0px; font-variant: inherit; font-stretch: inherit; font-size: 0.9em; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; border-radius: 5px; color: rgb(34, 34, 34); word-wrap: break-word; background: rgb(242, 242, 242);\">@Target</code>.&nbsp;<code style=\"box-sizing: border-box; margin: 0px; padding: 0.1em 0.25em; border: 0px; font-variant: inherit; font-stretch: inherit; font-size: 0.9em; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; border-radius: 5px; color: rgb(34, 34, 34); word-wrap: break-word; background: rgb(242, 242, 242);\">@Retention</code>&nbsp;says how long the annotation will stick around. Here, we say that we want to see it at runtime. If we wanted this annotation to be processed at compile time only, we could have specified&nbsp;<code style=\"box-sizing: border-box; margin: 0px; padding: 0.1em 0.25em; border: 0px; font-variant: inherit; font-stretch: inherit; font-size: 0.9em; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; border-radius: 5px; color: rgb(34, 34, 34); word-wrap: break-word; background: rgb(242, 242, 242);\">RetentionPolicy.SOURCE</code>.</p><p style=\"box-sizing: border-box; margin-top: 1.25em; margin-bottom: 0px; padding: 0px; border: 0px; font-stretch: inherit; font-size: 20px; line-height: 1.5; font-family: AkkuratTT, sans-serif; vertical-align: baseline; max-width: 38em; color: rgb(38, 38, 38);\">The other annotation,&nbsp;<code style=\"box-sizing: border-box; margin: 0px; padding: 0.1em 0.25em; border: 0px; font-variant: inherit; font-stretch: inherit; font-size: 0.9em; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; border-radius: 5px; color: rgb(34, 34, 34); word-wrap: break-word; background: rgb(242, 242, 242);\">@Target</code>, says where you can put the annotation in your source code. Any number of values can be provided. Our annotation is only valid for fields, so we have just provided&nbsp;<code style=\"box-sizing: border-box; margin: 0px; padding: 0.1em 0.25em; border: 0px; font-variant: inherit; font-stretch: inherit; font-size: 0.9em; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; border-radius: 5px; color: rgb(34, 34, 34); word-wrap: break-word; background: rgb(242, 242, 242);\">ElementType.FIELD</code>.</p><p style=\"box-sizing: border-box; margin-top: 1.25em; margin-bottom: 0px; padding: 0px; border: 0px; font-stretch: inherit; font-size: 20px; line-height: 1.5; font-family: AkkuratTT, sans-serif; vertical-align: baseline; max-width: 38em; color: rgb(38, 38, 38);\">Once the annotation is defined, we write some code to look for it and populate the annotated field automatically:</p><pre style=\"box-sizing: border-box; margin: 1.17647em -1.17647em; padding: 1.17647em; border: 0px; font-stretch: inherit; font-size: 0.85em; line-height: 1.25; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; position: relative; display: inline-block; color: rgb(26, 26, 26); border-radius: 5px; min-width: 47.0588em; background: rgb(247, 247, 247);\"><button class=\"js-select-code\" style=\"-webkit-font-smoothing: antialiased; font-family: AkkuratTT, sans-serif; font-size: 0.7em; text-transform: uppercase; font-weight: bold; letter-spacing: 0.1em; line-height: 1; -webkit-appearance: none; padding: 0px; border: none; color: rgb(0, 146, 219); position: absolute; top: 1.68067em; right: 1.68067em; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;\">SELECT ALL</button><code class=\"java hljs\" style=\"box-sizing: border-box; margin: 0px; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; display: block; overflow-x: auto; overflow-y: hidden;\"><span class=\"hljs-function\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">public</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">static</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">void</span> <span class=\"hljs-title\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">populateConstants</span><span class=\"hljs-params\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(197, 96, 33);\">(Class&lt;?&gt; klass)</span> </span>{\n    String packageName = klass.getPackage().getName();\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">for</span> (Field field : klass.getDeclaredFields()) {\n        <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">if</span> (Modifier.isStatic(field.getModifiers()) &amp;&amp; \n                field.isAnnotationPresent(ServiceConstant.class)) {\n            String value = packageName + <span class=\"hljs-string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(239, 65, 52);\">\".\"</span> + field.getName();\n            <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">try</span> {\n                field.set(<span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">null</span>, value);\n                Log.i(TAG, <span class=\"hljs-string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(239, 65, 52);\">\"Setup service constant: \"</span> + value + <span class=\"hljs-string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(239, 65, 52);\">\"\"</span>);\n            } <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">catch</span> (IllegalAccessException iae) {\n                Log.e(TAG, <span class=\"hljs-string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(239, 65, 52);\">\"Unable to setup constant for field \"</span> + \n                        field.getName() +\n                        <span class=\"hljs-string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(239, 65, 52);\">\" in class \"</span> + klass.getName());\n            }\n        }\n    }\n}\n</code></pre><span style=\"color: rgb(38, 38, 38); font-family: AkkuratTT, sans-serif; font-size: 20px;\"></span><p style=\"box-sizing: border-box; margin-top: 1.25em; margin-bottom: 0px; padding: 0px; border: 0px; font-stretch: inherit; font-size: 20px; line-height: 1.5; font-family: AkkuratTT, sans-serif; vertical-align: baseline; max-width: 38em; color: rgb(38, 38, 38);\">Finally, we add the annotation to our code, and call our magic method:</p><pre style=\"box-sizing: border-box; margin: 1.17647em -1.17647em; padding: 1.17647em; border: 0px; font-stretch: inherit; font-size: 0.85em; line-height: 1.25; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; position: relative; display: inline-block; color: rgb(26, 26, 26); border-radius: 5px; min-width: 47.0588em; background: rgb(247, 247, 247);\"><button class=\"js-select-code\" style=\"-webkit-font-smoothing: antialiased; font-family: AkkuratTT, sans-serif; font-size: 0.7em; text-transform: uppercase; font-weight: bold; letter-spacing: 0.1em; line-height: 1; -webkit-appearance: none; padding: 0px; border: none; color: rgb(0, 146, 219); position: absolute; top: 1.68067em; right: 1.68067em; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;\">SELECT ALL</button><code class=\"java hljs\" style=\"box-sizing: border-box; margin: 0px; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; display: block; overflow-x: auto; overflow-y: hidden;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">public</span> <span class=\"hljs-class\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">class</span> <span class=\"hljs-title\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(197, 96, 33);\">CrimeActivity</span> </span>{\n    <span class=\"hljs-annotation\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(155, 133, 157);\">@ServiceConstant</span>\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">public</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">static</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">final</span> String ACTION_VIEW_CRIME;\n\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">static</span> {\n        ServiceUtils.populateConstants(CrimeActivity.class);\n    }\n}</code></pre>"},"style":{}}}]},"21":{"title":"Reflection API","key":21,"id":262,"level":11,"ideas":{"1":{"title":"https://github.com/google/guava/wiki/ReflectionExplained","key":1,"id":275,"level":0,"ideas":{"1":{"title":"Guava's reflection","key":1,"id":276,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"Guava's reflection","id":276}]}},"ideasArr":[{"title":"https://github.com/google/guava/wiki/ReflectionExplained","id":275,"ideas":{"1":{"title":"Guava's reflection","key":1,"id":276,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}}]},"22":{"title":"General Guidelines","key":22,"id":264,"level":12,"ideas":{"1":{"title":"Don't use nulls, but return empty collections","key":1,"id":265,"level":0,"ideasArr":[]},"2":{"title":"Use immutable with final","key":2,"id":268,"level":1,"ideasArr":[]},"3":{"title":"http://google.github.io/styleguide/javaguide.html#s6-programming-practices","key":3,"id":269,"level":2,"ideas":{"1":{"title":"Google Java Styleguide","key":1,"id":270,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"Google Java Styleguide","id":270}]},"4":{"title":"Code quality","key":4,"id":285,"level":3,"ideas":{"1":{"title":"https://github.com/cxxr/better-java#code-quality","key":1,"id":286,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://github.com/cxxr/better-java#code-quality","id":286}]}},"ideasArr":[{"title":"Don't use nulls, but return empty collections","id":265},{"title":"Use immutable with final","id":268,"attr":{"style":{}}},{"title":"http://google.github.io/styleguide/javaguide.html#s6-programming-practices","id":269,"ideas":{"1":{"title":"Google Java Styleguide","key":1,"id":270,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Code quality","id":285,"ideas":{"1":{"title":"https://github.com/cxxr/better-java#code-quality","key":1,"id":286,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}}]},"6.5":{"title":"Basics","key":6.5,"id":254,"level":13,"ideas":{"1":{"title":"Access Modifiers","key":1,"id":205,"level":0,"ideas":{"1":{"title":"public,private,static,abstract ...","key":1,"id":206,"level":0,"ideasArr":[]},"2":{"title":"Static","content":"<pre class=\"prettyprint notranslate tryit prettyprinted\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 5px; margin-bottom: 10px; border-radius: 0px; width: 604px; line-height: 16px; border-color: rgb(214, 214, 214); font-size: 12px; overflow: auto; min-height: 37px; color: rgb(49, 49, 49); cursor: default; background-image: url(&quot;java/images/try-it.jpg&quot;) !important; background-attachment: initial !important; background-color: rgb(238, 238, 238) !important; background-size: initial !important; background-origin: initial !important; background-clip: initial !important; background-position: 100% 0%; background-repeat: no-repeat !important;\"><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">class</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">ExampleMinNumber</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   \n   </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">static</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">void</span><span class=\"pln\" style=\"box-sizing: border-box;\"> main</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">String</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">[]</span><span class=\"pln\" style=\"box-sizing: border-box;\"> args</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> a </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(0, 102, 102);\">11</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> b </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(0, 102, 102);\">6</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> c </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> minFunction</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">a</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"box-sizing: border-box;\"> b</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">System</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">println</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">\"Minimum Value = \"</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">+</span><span class=\"pln\" style=\"box-sizing: border-box;\"> c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n   </span><span class=\"com\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">/** returns the minimum of two numbers */</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">static</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> minFunction</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n1</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n2</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> min</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">n1 </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">&gt;</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n2</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         min </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n2</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">else</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         min </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n1</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">return</span><span class=\"pln\" style=\"box-sizing: border-box;\"> min</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\"> \n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span></pre>","key":2,"id":219,"level":1,"ideasArr":[]},"3":{"title":"Abstract","key":3,"id":230,"level":2,"ideas":{"1":{"title":"A class that can't be instantiated","key":1,"id":231,"level":0,"ideasArr":[]},"2":{"title":"A method that's abstract within it would have to be extended in sub-classes","key":2,"id":232,"level":1,"ideasArr":[]}},"ideasArr":[{"title":"A class that can't be instantiated","id":231},{"title":"A method that's abstract within it would have to be extended in sub-classes","id":232}]}},"ideasArr":[{"title":"public,private,static,abstract ...","id":206},{"title":"Static","id":219,"attr":{"attachment":{"contentType":"text/html","content":"<pre class=\"prettyprint notranslate tryit prettyprinted\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 5px; margin-bottom: 10px; border-radius: 0px; width: 604px; line-height: 16px; border-color: rgb(214, 214, 214); font-size: 12px; overflow: auto; min-height: 37px; color: rgb(49, 49, 49); cursor: default; background-image: url(&quot;java/images/try-it.jpg&quot;) !important; background-attachment: initial !important; background-color: rgb(238, 238, 238) !important; background-size: initial !important; background-origin: initial !important; background-clip: initial !important; background-position: 100% 0%; background-repeat: no-repeat !important;\"><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">class</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">ExampleMinNumber</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   \n   </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">static</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">void</span><span class=\"pln\" style=\"box-sizing: border-box;\"> main</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">String</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">[]</span><span class=\"pln\" style=\"box-sizing: border-box;\"> args</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> a </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(0, 102, 102);\">11</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> b </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(0, 102, 102);\">6</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> c </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> minFunction</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">a</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"box-sizing: border-box;\"> b</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">System</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">println</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">\"Minimum Value = \"</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">+</span><span class=\"pln\" style=\"box-sizing: border-box;\"> c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n   </span><span class=\"com\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">/** returns the minimum of two numbers */</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">static</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> minFunction</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n1</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n2</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> min</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">n1 </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">&gt;</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n2</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         min </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n2</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">else</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         min </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n1</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">return</span><span class=\"pln\" style=\"box-sizing: border-box;\"> min</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\"> \n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span></pre>"},"style":{}}},{"title":"Abstract","id":230,"ideas":{"1":{"title":"A class that can't be instantiated","key":1,"id":231,"level":0,"ideasArr":[]},"2":{"title":"A method that's abstract within it would have to be extended in sub-classes","key":2,"id":232,"level":1,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}}]},"2":{"title":"Operators","key":2,"id":207,"level":1,"ideas":{"1":{"title":"Bitwise operators","content":"<h2 style=\"box-sizing: border-box; color: rgb(18, 18, 20); font-weight: normal; letter-spacing: -1px; margin-top: 0.2em; margin-right: 0.2em; margin-bottom: 0.2em; font-size: 1.7em; line-height: 1.5em; padding: 0px; text-shadow: rgb(204, 204, 204) 1px 1px 2px; position: relative; left: 0px; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif;\">The Bitwise Operators:</h2><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">Java defines several bitwise operators, which can be applied to the integer types, long, int, short, char, and byte.</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">Bitwise operator works on bits and performs bit-by-bit operation. Assume if a = 60; and b = 13; now in binary format they will be as follows:</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">a = 0011 1100</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">b = 0000 1101</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">-----------------</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">a&amp;b = 0000 1100</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">a|b = 0011 1101</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">a^b = 0011 0001</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">~a&nbsp; = 1100 0011</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">The following table lists the bitwise operators:</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">Assume integer variable A holds 60 and variable B holds 13 then:</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\"><a href=\"http://www.tutorialspoint.com/java/java_bitwise_operators_examples.htm\" style=\"box-sizing: border-box; color: rgb(49, 49, 49); padding-right: 22px; padding-bottom: 2px; outline: none !important; background: url(&quot;/images/link-icon.png&quot;) 100% 50% no-repeat;\">Show Examples</a></p><table class=\"table table-bordered\" style=\"box-sizing: border-box; border-collapse: collapse; width: 604px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(221, 221, 221); color: rgb(49, 49, 49); font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; line-height: 22px;\"><tbody style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box;\"><th style=\"box-sizing: border-box; line-height: 1.42857; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-top-color: rgb(221, 221, 221); border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221); background: rgb(238, 238, 238);\">SR.NO</th><th style=\"box-sizing: border-box; line-height: 1.42857; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-top-color: rgb(221, 221, 221); border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221); background: rgb(238, 238, 238);\">Operator and Description</th></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">1</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">&amp; (bitwise and)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary AND Operator copies a bit to the result if it exists in both operands.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;(A &amp; B) will give 12 which is 0000 1100</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">2</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">| (bitwise or)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary OR Operator copies a bit if it exists in either operand.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;(A | B) will give 61 which is 0011 1101</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">3</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">^ (bitwise XOR)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary XOR Operator copies the bit if it is set in one operand but not both.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;(A ^ B) will give 49 which is 0011 0001</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">4</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">~ (bitwise compliment)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary Ones Complement Operator is unary and has the effect of 'flipping' bits.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;(~A ) will give -61 which is 1100 0011 in 2's complement form due to a signed binary number.</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">5</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">&lt;&lt; (left shift)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary Left Shift Operator. The left operands value is moved left by the number of bits specified by the right operand</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;A &lt;&lt; 2 will give 240 which is 1111 0000</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">6</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">&gt;&gt; (right shift)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary Right Shift Operator. The left operands value is moved right by the number of bits specified by the right operand.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;A &gt;&gt; 2 will give 15 which is 1111</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">7</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">&gt;&gt;&gt; (zero fill right shift)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Shift right zero fill operator. The left operands value is moved right by the number of bits specified by the right operand and shifted values are filled up with zeros.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;A &gt;&gt;&gt;2 will give 15 which is 0000 1111</td></tr></tbody></table>","key":1,"id":208,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"Bitwise operators","id":208,"attr":{"attachment":{"contentType":"text/html","content":"<h2 style=\"box-sizing: border-box; color: rgb(18, 18, 20); font-weight: normal; letter-spacing: -1px; margin-top: 0.2em; margin-right: 0.2em; margin-bottom: 0.2em; font-size: 1.7em; line-height: 1.5em; padding: 0px; text-shadow: rgb(204, 204, 204) 1px 1px 2px; position: relative; left: 0px; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif;\">The Bitwise Operators:</h2><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">Java defines several bitwise operators, which can be applied to the integer types, long, int, short, char, and byte.</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">Bitwise operator works on bits and performs bit-by-bit operation. Assume if a = 60; and b = 13; now in binary format they will be as follows:</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">a = 0011 1100</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">b = 0000 1101</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">-----------------</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">a&amp;b = 0000 1100</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">a|b = 0011 1101</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">a^b = 0011 0001</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">~a&nbsp; = 1100 0011</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">The following table lists the bitwise operators:</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">Assume integer variable A holds 60 and variable B holds 13 then:</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\"><a href=\"http://www.tutorialspoint.com/java/java_bitwise_operators_examples.htm\" style=\"box-sizing: border-box; color: rgb(49, 49, 49); padding-right: 22px; padding-bottom: 2px; outline: none !important; background: url(&quot;/images/link-icon.png&quot;) 100% 50% no-repeat;\">Show Examples</a></p><table class=\"table table-bordered\" style=\"box-sizing: border-box; border-collapse: collapse; width: 604px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(221, 221, 221); color: rgb(49, 49, 49); font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; line-height: 22px;\"><tbody style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box;\"><th style=\"box-sizing: border-box; line-height: 1.42857; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-top-color: rgb(221, 221, 221); border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221); background: rgb(238, 238, 238);\">SR.NO</th><th style=\"box-sizing: border-box; line-height: 1.42857; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-top-color: rgb(221, 221, 221); border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221); background: rgb(238, 238, 238);\">Operator and Description</th></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">1</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">&amp; (bitwise and)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary AND Operator copies a bit to the result if it exists in both operands.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;(A &amp; B) will give 12 which is 0000 1100</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">2</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">| (bitwise or)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary OR Operator copies a bit if it exists in either operand.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;(A | B) will give 61 which is 0011 1101</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">3</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">^ (bitwise XOR)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary XOR Operator copies the bit if it is set in one operand but not both.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;(A ^ B) will give 49 which is 0011 0001</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">4</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">~ (bitwise compliment)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary Ones Complement Operator is unary and has the effect of 'flipping' bits.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;(~A ) will give -61 which is 1100 0011 in 2's complement form due to a signed binary number.</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">5</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">&lt;&lt; (left shift)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary Left Shift Operator. The left operands value is moved left by the number of bits specified by the right operand</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;A &lt;&lt; 2 will give 240 which is 1111 0000</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">6</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">&gt;&gt; (right shift)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary Right Shift Operator. The left operands value is moved right by the number of bits specified by the right operand.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;A &gt;&gt; 2 will give 15 which is 1111</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">7</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">&gt;&gt;&gt; (zero fill right shift)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Shift right zero fill operator. The left operands value is moved right by the number of bits specified by the right operand and shifted values are filled up with zeros.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;A &gt;&gt;&gt;2 will give 15 which is 0000 1111</td></tr></tbody></table>"},"style":{}}}]},"3":{"title":"Data types","key":3,"id":201,"level":2,"ideas":{"1":{"title":"Primitive","key":1,"id":202,"level":0,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_basic_datatypes.htm","key":1,"id":204,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"http://www.tutorialspoint.com/java/java_basic_datatypes.htm","id":204}]},"2":{"title":"Object","key":2,"id":203,"level":1,"ideasArr":[]}},"ideasArr":[{"title":"Primitive","id":202,"attr":{"style":{}},"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_basic_datatypes.htm","key":1,"id":204,"level":0,"ideasArr":[]}}},{"title":"Object","id":203}]},"4":{"title":"OOP","key":4,"id":189,"level":3,"ideas":{"1":{"title":"Generics","key":1,"id":190,"level":0,"ideas":{},"ideasArr":[]},"2":{"title":"Interfaces","key":2,"id":192,"level":1,"ideas":{},"ideasArr":[]},"3":{"title":"Classes","key":3,"id":194,"level":2,"ideasArr":[]},"5":{"title":"Enums","key":5,"id":196,"level":3,"ideasArr":[]},"6":{"title":"Methods","key":6,"id":198,"level":4,"ideasArr":[]},"7":{"title":"Inner classes","key":7,"id":228,"level":5,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_innerclasses.htm","key":1,"id":229,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"http://www.tutorialspoint.com/java/java_innerclasses.htm","id":229}]}},"ideasArr":[{"title":"Generics","id":190,"ideas":{}},{"title":"Interfaces","id":192,"ideas":{}},{"title":"Classes","id":194},{"title":"Enums","id":196},{"title":"Methods","id":198},{"title":"Inner classes","id":228,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_innerclasses.htm","key":1,"id":229,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}}]},"5":{"title":"Decision Making","key":5,"id":209,"level":4,"ideas":{"1":{"title":"Ternary operators","content":"<h2 style=\"box-sizing: border-box; color: rgb(18, 18, 20); font-weight: normal; letter-spacing: -1px; margin-top: 0.2em; margin-right: 0.2em; margin-bottom: 0.2em; font-size: 1.7em; line-height: 1.5em; padding: 0px; text-shadow: rgb(204, 204, 204) 1px 1px 2px; position: relative; left: 0px; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif;\">The ? : Operator:</h2><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">We have covered&nbsp;<b style=\"box-sizing: border-box;\">conditional operator ? :</b>&nbsp;in previous chapter which can be used to replace&nbsp;<b style=\"box-sizing: border-box;\">if...else</b>&nbsp;statements. It has the following general form:</p><pre class=\"prettyprint notranslate prettyprinted\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 5px; margin-bottom: 10px; border-radius: 0px; width: 604px; line-height: 16px; border-color: rgb(214, 214, 214); font-size: 12px; overflow: auto; color: rgb(49, 49, 49); background-color: rgb(238, 238, 238);\"><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">Exp1</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">?</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">Exp2</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">Exp3</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span></pre><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">Where Exp1, Exp2, and Exp3 are expressions. Notice the use and placement of the colon.</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">To determine the value of whole expression, initially exp1 is evaluated</p><ul class=\"list\" style=\"box-sizing: border-box; color: rgb(49, 49, 49); font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; line-height: 22px;\"><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\">If the value of exp1 is true, then the value of Exp2 will be the value of the whole expression.</li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\">If the value of exp1 is false, then Exp3 is evaluated and its value becomes the value of the entire expression.</li></ul>","key":1,"id":211,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"Ternary operators","id":211,"attr":{"attachment":{"contentType":"text/html","content":"<h2 style=\"box-sizing: border-box; color: rgb(18, 18, 20); font-weight: normal; letter-spacing: -1px; margin-top: 0.2em; margin-right: 0.2em; margin-bottom: 0.2em; font-size: 1.7em; line-height: 1.5em; padding: 0px; text-shadow: rgb(204, 204, 204) 1px 1px 2px; position: relative; left: 0px; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif;\">The ? : Operator:</h2><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">We have covered&nbsp;<b style=\"box-sizing: border-box;\">conditional operator ? :</b>&nbsp;in previous chapter which can be used to replace&nbsp;<b style=\"box-sizing: border-box;\">if...else</b>&nbsp;statements. It has the following general form:</p><pre class=\"prettyprint notranslate prettyprinted\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 5px; margin-bottom: 10px; border-radius: 0px; width: 604px; line-height: 16px; border-color: rgb(214, 214, 214); font-size: 12px; overflow: auto; color: rgb(49, 49, 49); background-color: rgb(238, 238, 238);\"><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">Exp1</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">?</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">Exp2</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">Exp3</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span></pre><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">Where Exp1, Exp2, and Exp3 are expressions. Notice the use and placement of the colon.</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">To determine the value of whole expression, initially exp1 is evaluated</p><ul class=\"list\" style=\"box-sizing: border-box; color: rgb(49, 49, 49); font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; line-height: 22px;\"><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\">If the value of exp1 is true, then the value of Exp2 will be the value of the whole expression.</li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\">If the value of exp1 is false, then Exp3 is evaluated and its value becomes the value of the entire expression.</li></ul>"},"style":{}}}]},"6":{"title":"Types as classes","key":6,"id":212,"level":5,"ideas":{"1":{"title":"Number","key":1,"id":213,"level":0,"ideasArr":[]},"2":{"title":"Character","key":2,"id":214,"level":1,"ideasArr":[]},"3":{"title":"Arrays","key":3,"id":215,"level":2,"ideas":{"1":{"title":"You can use [ ] literal","key":1,"id":216,"level":0,"ideasArr":[]},"2":{"title":"Or you can use the new operator","key":2,"id":217,"level":1,"ideasArr":[]},"3":{"title":"It has to have a type","key":3,"id":218,"level":2,"ideasArr":[]}},"ideasArr":[{"title":"You can use [ ] literal","id":216},{"title":"Or you can use the new operator","id":217},{"title":"It has to have a type","id":218}]}},"ideasArr":[{"title":"Number","id":213},{"title":"Character","id":214},{"title":"Arrays","id":215,"ideas":{"1":{"title":"You can use [ ] literal","key":1,"id":216,"level":0,"ideasArr":[]},"2":{"title":"Or you can use the new operator","key":2,"id":217,"level":1,"ideasArr":[]},"3":{"title":"It has to have a type","key":3,"id":218,"level":2,"ideasArr":[]}}}]}},"ideasArr":[{"title":"Access Modifiers","id":205,"ideas":{"1":{"title":"public,private,static,abstract ...","key":1,"id":206,"level":0,"ideasArr":[]},"2":{"title":"Static","content":"<pre class=\"prettyprint notranslate tryit prettyprinted\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 5px; margin-bottom: 10px; border-radius: 0px; width: 604px; line-height: 16px; border-color: rgb(214, 214, 214); font-size: 12px; overflow: auto; min-height: 37px; color: rgb(49, 49, 49); cursor: default; background-image: url(&quot;java/images/try-it.jpg&quot;) !important; background-attachment: initial !important; background-color: rgb(238, 238, 238) !important; background-size: initial !important; background-origin: initial !important; background-clip: initial !important; background-position: 100% 0%; background-repeat: no-repeat !important;\"><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">class</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">ExampleMinNumber</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   \n   </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">static</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">void</span><span class=\"pln\" style=\"box-sizing: border-box;\"> main</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">String</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">[]</span><span class=\"pln\" style=\"box-sizing: border-box;\"> args</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> a </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(0, 102, 102);\">11</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> b </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(0, 102, 102);\">6</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> c </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> minFunction</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">a</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"box-sizing: border-box;\"> b</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">System</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">println</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">\"Minimum Value = \"</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">+</span><span class=\"pln\" style=\"box-sizing: border-box;\"> c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n   </span><span class=\"com\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">/** returns the minimum of two numbers */</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">static</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> minFunction</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n1</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n2</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> min</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">n1 </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">&gt;</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n2</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         min </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n2</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">else</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         min </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n1</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">return</span><span class=\"pln\" style=\"box-sizing: border-box;\"> min</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\"> \n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span></pre>","key":2,"id":219,"level":1,"ideasArr":[]},"3":{"title":"Abstract","key":3,"id":230,"level":2,"ideas":{"1":{"title":"A class that can't be instantiated","key":1,"id":231,"level":0,"ideasArr":[]},"2":{"title":"A method that's abstract within it would have to be extended in sub-classes","key":2,"id":232,"level":1,"ideasArr":[]}},"ideasArr":[{"title":"A class that can't be instantiated","id":231},{"title":"A method that's abstract within it would have to be extended in sub-classes","id":232}]}},"attr":{"style":{},"collapsed":true}},{"title":"Operators","id":207,"attr":{"style":{},"collapsed":true},"ideas":{"1":{"title":"Bitwise operators","content":"<h2 style=\"box-sizing: border-box; color: rgb(18, 18, 20); font-weight: normal; letter-spacing: -1px; margin-top: 0.2em; margin-right: 0.2em; margin-bottom: 0.2em; font-size: 1.7em; line-height: 1.5em; padding: 0px; text-shadow: rgb(204, 204, 204) 1px 1px 2px; position: relative; left: 0px; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif;\">The Bitwise Operators:</h2><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">Java defines several bitwise operators, which can be applied to the integer types, long, int, short, char, and byte.</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">Bitwise operator works on bits and performs bit-by-bit operation. Assume if a = 60; and b = 13; now in binary format they will be as follows:</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">a = 0011 1100</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">b = 0000 1101</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">-----------------</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">a&amp;b = 0000 1100</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">a|b = 0011 1101</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">a^b = 0011 0001</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">~a&nbsp; = 1100 0011</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">The following table lists the bitwise operators:</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">Assume integer variable A holds 60 and variable B holds 13 then:</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\"><a href=\"http://www.tutorialspoint.com/java/java_bitwise_operators_examples.htm\" style=\"box-sizing: border-box; color: rgb(49, 49, 49); padding-right: 22px; padding-bottom: 2px; outline: none !important; background: url(&quot;/images/link-icon.png&quot;) 100% 50% no-repeat;\">Show Examples</a></p><table class=\"table table-bordered\" style=\"box-sizing: border-box; border-collapse: collapse; width: 604px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(221, 221, 221); color: rgb(49, 49, 49); font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; line-height: 22px;\"><tbody style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box;\"><th style=\"box-sizing: border-box; line-height: 1.42857; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-top-color: rgb(221, 221, 221); border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221); background: rgb(238, 238, 238);\">SR.NO</th><th style=\"box-sizing: border-box; line-height: 1.42857; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-top-color: rgb(221, 221, 221); border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221); background: rgb(238, 238, 238);\">Operator and Description</th></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">1</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">&amp; (bitwise and)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary AND Operator copies a bit to the result if it exists in both operands.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;(A &amp; B) will give 12 which is 0000 1100</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">2</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">| (bitwise or)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary OR Operator copies a bit if it exists in either operand.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;(A | B) will give 61 which is 0011 1101</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">3</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">^ (bitwise XOR)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary XOR Operator copies the bit if it is set in one operand but not both.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;(A ^ B) will give 49 which is 0011 0001</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">4</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">~ (bitwise compliment)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary Ones Complement Operator is unary and has the effect of 'flipping' bits.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;(~A ) will give -61 which is 1100 0011 in 2's complement form due to a signed binary number.</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">5</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">&lt;&lt; (left shift)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary Left Shift Operator. The left operands value is moved left by the number of bits specified by the right operand</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;A &lt;&lt; 2 will give 240 which is 1111 0000</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">6</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">&gt;&gt; (right shift)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary Right Shift Operator. The left operands value is moved right by the number of bits specified by the right operand.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;A &gt;&gt; 2 will give 15 which is 1111</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">7</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">&gt;&gt;&gt; (zero fill right shift)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Shift right zero fill operator. The left operands value is moved right by the number of bits specified by the right operand and shifted values are filled up with zeros.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;A &gt;&gt;&gt;2 will give 15 which is 0000 1111</td></tr></tbody></table>","key":1,"id":208,"level":0,"ideasArr":[]}}},{"title":"Data types","id":201,"ideas":{"1":{"title":"Primitive","key":1,"id":202,"level":0,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_basic_datatypes.htm","key":1,"id":204,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"http://www.tutorialspoint.com/java/java_basic_datatypes.htm","id":204}]},"2":{"title":"Object","key":2,"id":203,"level":1,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"OOP","id":189,"ideas":{"1":{"title":"Generics","key":1,"id":190,"level":0,"ideas":{},"ideasArr":[]},"2":{"title":"Interfaces","key":2,"id":192,"level":1,"ideas":{},"ideasArr":[]},"3":{"title":"Classes","key":3,"id":194,"level":2,"ideasArr":[]},"5":{"title":"Enums","key":5,"id":196,"level":3,"ideasArr":[]},"6":{"title":"Methods","key":6,"id":198,"level":4,"ideasArr":[]},"7":{"title":"Inner classes","key":7,"id":228,"level":5,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_innerclasses.htm","key":1,"id":229,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"http://www.tutorialspoint.com/java/java_innerclasses.htm","id":229}]}},"attr":{"style":{},"collapsed":true}},{"title":"Decision Making","id":209,"ideas":{"1":{"title":"Ternary operators","content":"<h2 style=\"box-sizing: border-box; color: rgb(18, 18, 20); font-weight: normal; letter-spacing: -1px; margin-top: 0.2em; margin-right: 0.2em; margin-bottom: 0.2em; font-size: 1.7em; line-height: 1.5em; padding: 0px; text-shadow: rgb(204, 204, 204) 1px 1px 2px; position: relative; left: 0px; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif;\">The ? : Operator:</h2><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">We have covered&nbsp;<b style=\"box-sizing: border-box;\">conditional operator ? :</b>&nbsp;in previous chapter which can be used to replace&nbsp;<b style=\"box-sizing: border-box;\">if...else</b>&nbsp;statements. It has the following general form:</p><pre class=\"prettyprint notranslate prettyprinted\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 5px; margin-bottom: 10px; border-radius: 0px; width: 604px; line-height: 16px; border-color: rgb(214, 214, 214); font-size: 12px; overflow: auto; color: rgb(49, 49, 49); background-color: rgb(238, 238, 238);\"><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">Exp1</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">?</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">Exp2</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">Exp3</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span></pre><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">Where Exp1, Exp2, and Exp3 are expressions. Notice the use and placement of the colon.</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">To determine the value of whole expression, initially exp1 is evaluated</p><ul class=\"list\" style=\"box-sizing: border-box; color: rgb(49, 49, 49); font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; line-height: 22px;\"><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\">If the value of exp1 is true, then the value of Exp2 will be the value of the whole expression.</li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\">If the value of exp1 is false, then Exp3 is evaluated and its value becomes the value of the entire expression.</li></ul>","key":1,"id":211,"level":0,"ideasArr":[]}},"attr":{"style":{},"collapsed":true}},{"title":"Types as classes","id":212,"ideas":{"1":{"title":"Number","key":1,"id":213,"level":0,"ideasArr":[]},"2":{"title":"Character","key":2,"id":214,"level":1,"ideasArr":[]},"3":{"title":"Arrays","key":3,"id":215,"level":2,"ideas":{"1":{"title":"You can use [ ] literal","key":1,"id":216,"level":0,"ideasArr":[]},"2":{"title":"Or you can use the new operator","key":2,"id":217,"level":1,"ideasArr":[]},"3":{"title":"It has to have a type","key":3,"id":218,"level":2,"ideasArr":[]}},"ideasArr":[{"title":"You can use [ ] literal","id":216},{"title":"Or you can use the new operator","id":217},{"title":"It has to have a type","id":218}]}},"attr":{"style":{},"collapsed":true}}]}},"ideasArr":[{"title":"IO","id":200,"ideas":{"1":{"title":"Streams","key":1,"id":220,"level":0,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_files_io.htm","key":1,"id":221,"level":0,"ideasArr":[]},"2":{"title":"example","content":"<pre class=\"prettyprint notranslate prettyprinted\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 5px; margin-bottom: 10px; border-radius: 0px; width: 604px; line-height: 16px; border-color: rgb(214, 214, 214); font-size: 12px; overflow: auto; color: rgb(49, 49, 49); background-color: rgb(238, 238, 238);\"><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">import</span><span class=\"pln\" style=\"box-sizing: border-box;\"> java</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">io</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.*;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">class</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">CopyFile</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">static</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">void</span><span class=\"pln\" style=\"box-sizing: border-box;\"> main</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">String</span><span class=\"pln\" style=\"box-sizing: border-box;\"> args</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">[])</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">throws</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">IOException</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">FileInputStream</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">FileOutputStream</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">try</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">new</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">FileInputStream</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">\"input.txt\"</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">new</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">FileOutputStream</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">\"output.txt\"</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         \n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">while</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">((</span><span class=\"pln\" style=\"box-sizing: border-box;\">c </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">read</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">())</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">-</span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(0, 102, 102);\">1</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">write</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">finally</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">close</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">();</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">close</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">();</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span></pre>","key":2,"id":222,"level":1,"ideasArr":[]},"3":{"title":"Stdin Example","content":"<pre class=\"prettyprint notranslate tryit prettyprinted\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 5px; margin-bottom: 10px; border-radius: 0px; width: 604px; line-height: 16px; border-color: rgb(214, 214, 214); font-size: 12px; overflow: auto; min-height: 37px; color: rgb(49, 49, 49); cursor: default; background-image: url(&quot;java/images/try-it.jpg&quot;) !important; background-attachment: initial !important; background-color: rgb(238, 238, 238) !important; background-size: initial !important; background-origin: initial !important; background-clip: initial !important; background-position: 100% 0%; background-repeat: no-repeat !important;\"><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">import</span><span class=\"pln\" style=\"box-sizing: border-box;\"> java</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">io</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.*;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">class</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">ReadConsole</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">static</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">void</span><span class=\"pln\" style=\"box-sizing: border-box;\"> main</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">String</span><span class=\"pln\" style=\"box-sizing: border-box;\"> args</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">[])</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">throws</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">IOException</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">InputStreamReader</span><span class=\"pln\" style=\"box-sizing: border-box;\"> cin </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">try</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         cin </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">new</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">InputStreamReader</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">System</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">System</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">println</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">\"Enter characters, 'q' to quit.\"</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">char</span><span class=\"pln\" style=\"box-sizing: border-box;\"> c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">do</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            c </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">char</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> cin</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">read</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">();</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">System</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">print</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">while</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">c </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">'q'</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">finally</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">cin </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            cin</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">close</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">();</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span></pre>","key":3,"id":223,"level":2,"ideasArr":[]},"4":{"title":"New java 8 syntax","content":"<h3 style=\"box-sizing: border-box; margin-top: 1em; margin-bottom: 16px; line-height: 1.43; font-size: 1.5em; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\">Streams</h3><p style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\"><a href=\"http://www.java8.org/\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">Java 8</a>&nbsp;has a nice&nbsp;<a href=\"http://blog.hartveld.com/2013/03/jdk-8-33-stream-api.html\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">stream</a>&nbsp;and lambda syntax. You could write code like this:</p><div class=\"highlight highlight-source-java\" style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\"><pre style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin-bottom: 0px; font-stretch: normal; line-height: 1.45; padding: 16px; border-radius: 3px; word-wrap: normal; word-break: normal; background-color: rgb(247, 247, 247);\"><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">final</span> <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">List&lt;<span class=\"pl-smi\" style=\"box-sizing: border-box; color: rgb(51, 51, 51);\">String</span>&gt;</span> filtered <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">=</span> list<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>stream()\n    .filter(s <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">-</span><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">&gt;</span> s<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>startsWith(<span class=\"pl-s\" style=\"box-sizing: border-box; color: rgb(24, 54, 145);\"><span class=\"pl-pds\" style=\"box-sizing: border-box;\">\"</span>s<span class=\"pl-pds\" style=\"box-sizing: border-box;\">\"</span></span>))\n    .map(s <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">-</span><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">&gt;</span> s<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>toUpperCase())\n    .collect(<span class=\"pl-smi\" style=\"box-sizing: border-box;\">Collectors</span><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>toList());</pre></div><p style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\">Instead of this:</p><div class=\"highlight highlight-source-java\" style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\"><pre style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin-bottom: 0px; font-stretch: normal; line-height: 1.45; padding: 16px; border-radius: 3px; word-wrap: normal; word-break: normal; background-color: rgb(247, 247, 247);\"><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">final</span> <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">List&lt;<span class=\"pl-smi\" style=\"box-sizing: border-box; color: rgb(51, 51, 51);\">String</span>&gt;</span> filtered <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">new</span> <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">ArrayList&lt;&gt;</span>();\n<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">for</span> (<span class=\"pl-smi\" style=\"box-sizing: border-box;\">String</span> str <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">:</span> list) {\n    <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">if</span> (str<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>startsWith(<span class=\"pl-s\" style=\"box-sizing: border-box; color: rgb(24, 54, 145);\"><span class=\"pl-pds\" style=\"box-sizing: border-box;\">\"</span>s<span class=\"pl-pds\" style=\"box-sizing: border-box;\">\"</span></span>) {\n        filtered<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>add(str<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>toUpperCase());\n    }\n}</pre></div><p style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\">This allows you to write more fluent code, which is more readable.</p>","key":4,"id":271,"level":3,"ideasArr":[]}},"ideasArr":[{"title":"http://www.tutorialspoint.com/java/java_files_io.htm","id":221},{"title":"example","id":222,"attr":{"attachment":{"contentType":"text/html","content":"<pre class=\"prettyprint notranslate prettyprinted\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 5px; margin-bottom: 10px; border-radius: 0px; width: 604px; line-height: 16px; border-color: rgb(214, 214, 214); font-size: 12px; overflow: auto; color: rgb(49, 49, 49); background-color: rgb(238, 238, 238);\"><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">import</span><span class=\"pln\" style=\"box-sizing: border-box;\"> java</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">io</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.*;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">class</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">CopyFile</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">static</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">void</span><span class=\"pln\" style=\"box-sizing: border-box;\"> main</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">String</span><span class=\"pln\" style=\"box-sizing: border-box;\"> args</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">[])</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">throws</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">IOException</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">FileInputStream</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">FileOutputStream</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">try</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">new</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">FileInputStream</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">\"input.txt\"</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">new</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">FileOutputStream</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">\"output.txt\"</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         \n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">while</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">((</span><span class=\"pln\" style=\"box-sizing: border-box;\">c </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">read</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">())</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">-</span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(0, 102, 102);\">1</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">write</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">finally</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">close</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">();</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">close</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">();</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span></pre>"},"style":{}}},{"title":"Stdin Example","id":223,"attr":{"attachment":{"contentType":"text/html","content":"<pre class=\"prettyprint notranslate tryit prettyprinted\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 5px; margin-bottom: 10px; border-radius: 0px; width: 604px; line-height: 16px; border-color: rgb(214, 214, 214); font-size: 12px; overflow: auto; min-height: 37px; color: rgb(49, 49, 49); cursor: default; background-image: url(&quot;java/images/try-it.jpg&quot;) !important; background-attachment: initial !important; background-color: rgb(238, 238, 238) !important; background-size: initial !important; background-origin: initial !important; background-clip: initial !important; background-position: 100% 0%; background-repeat: no-repeat !important;\"><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">import</span><span class=\"pln\" style=\"box-sizing: border-box;\"> java</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">io</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.*;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">class</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">ReadConsole</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">static</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">void</span><span class=\"pln\" style=\"box-sizing: border-box;\"> main</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">String</span><span class=\"pln\" style=\"box-sizing: border-box;\"> args</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">[])</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">throws</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">IOException</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">InputStreamReader</span><span class=\"pln\" style=\"box-sizing: border-box;\"> cin </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">try</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         cin </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">new</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">InputStreamReader</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">System</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">in</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">System</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">println</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">\"Enter characters, 'q' to quit.\"</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">char</span><span class=\"pln\" style=\"box-sizing: border-box;\"> c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">do</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            c </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">char</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> cin</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">read</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">();</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">System</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">print</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">while</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">c </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">'q'</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">finally</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">cin </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">!=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">null</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n            cin</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">close</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">();</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span></pre>"},"style":{}}},{"title":"New java 8 syntax","id":271,"attr":{"attachment":{"contentType":"text/html","content":"<h3 style=\"box-sizing: border-box; margin-top: 1em; margin-bottom: 16px; line-height: 1.43; font-size: 1.5em; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\">Streams</h3><p style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\"><a href=\"http://www.java8.org/\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">Java 8</a>&nbsp;has a nice&nbsp;<a href=\"http://blog.hartveld.com/2013/03/jdk-8-33-stream-api.html\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">stream</a>&nbsp;and lambda syntax. You could write code like this:</p><div class=\"highlight highlight-source-java\" style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\"><pre style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin-bottom: 0px; font-stretch: normal; line-height: 1.45; padding: 16px; border-radius: 3px; word-wrap: normal; word-break: normal; background-color: rgb(247, 247, 247);\"><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">final</span> <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">List&lt;<span class=\"pl-smi\" style=\"box-sizing: border-box; color: rgb(51, 51, 51);\">String</span>&gt;</span> filtered <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">=</span> list<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>stream()\n    .filter(s <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">-</span><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">&gt;</span> s<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>startsWith(<span class=\"pl-s\" style=\"box-sizing: border-box; color: rgb(24, 54, 145);\"><span class=\"pl-pds\" style=\"box-sizing: border-box;\">\"</span>s<span class=\"pl-pds\" style=\"box-sizing: border-box;\">\"</span></span>))\n    .map(s <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">-</span><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">&gt;</span> s<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>toUpperCase())\n    .collect(<span class=\"pl-smi\" style=\"box-sizing: border-box;\">Collectors</span><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>toList());</pre></div><p style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\">Instead of this:</p><div class=\"highlight highlight-source-java\" style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\"><pre style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; margin-bottom: 0px; font-stretch: normal; line-height: 1.45; padding: 16px; border-radius: 3px; word-wrap: normal; word-break: normal; background-color: rgb(247, 247, 247);\"><span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">final</span> <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">List&lt;<span class=\"pl-smi\" style=\"box-sizing: border-box; color: rgb(51, 51, 51);\">String</span>&gt;</span> filtered <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">=</span> <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">new</span> <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">ArrayList&lt;&gt;</span>();\n<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">for</span> (<span class=\"pl-smi\" style=\"box-sizing: border-box;\">String</span> str <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">:</span> list) {\n    <span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">if</span> (str<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>startsWith(<span class=\"pl-s\" style=\"box-sizing: border-box; color: rgb(24, 54, 145);\"><span class=\"pl-pds\" style=\"box-sizing: border-box;\">\"</span>s<span class=\"pl-pds\" style=\"box-sizing: border-box;\">\"</span></span>) {\n        filtered<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>add(str<span class=\"pl-k\" style=\"box-sizing: border-box; color: rgb(167, 29, 93);\">.</span>toUpperCase());\n    }\n}</pre></div><p style=\"box-sizing: border-box; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\">This allows you to write more fluent code, which is more readable.</p>"},"style":{}}}]}},"attr":{"style":{},"collapsed":true}},{"title":"Exceptions","id":224,"attr":{"style":{},"collapsed":true},"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_exceptions.htm","key":1,"id":225,"level":0,"ideasArr":[]},"2":{"title":"java.lang.Exception","key":2,"id":227,"level":1,"ideasArr":[]}}},{"title":"Packages","id":235,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_packages.htm","key":1,"id":236,"level":0,"ideasArr":[]}},"attr":{"style":{},"collapsed":true}},{"title":"Data Structures","id":237,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_data_structures.htm","key":1,"id":240,"level":0,"ideasArr":[]}},"attr":{"attachment":{"contentType":"text/html","content":"<ul class=\"list\" style=\"box-sizing: border-box; color: rgb(49, 49, 49); font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; line-height: 22px;\"><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Enumeration</p></li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">BitSet</p></li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Vector</p></li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Stack</p></li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Dictionary</p></li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Hashtable</p></li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Properties</p></li></ul>"},"style":{},"collapsed":true}},{"title":"Collections","id":241,"ideas":{"1":{"title":"Why not vectors for example?","content":"<p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">The collections framework was designed to meet several goals.</p><ul class=\"list\" style=\"box-sizing: border-box; color: rgb(49, 49, 49); font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; line-height: 22px;\"><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">The framework had to be high-performance. The implementations for the fundamental collections (dynamic arrays, linked lists, trees, and hashtables) are highly efficient.</p></li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">The framework had to allow different types of collections to work in a similar manner and with a high degree of interoperability.</p></li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\"><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Extending and/or adapting a collection had to be easy.</p></li></ul>","key":1,"id":242,"level":0,"ideasArr":[]},"2":{"title":"http://www.tutorialspoint.com/java/java_collections.htm","key":2,"id":243,"level":1,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Generics","id":244,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_generics.htm","key":1,"id":245,"level":0,"ideasArr":[]},"2":{"title":"What if I want to implement a method that's not tied to a type","key":2,"id":246,"level":1,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Serialization","id":247,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_serialization.htm","key":1,"id":248,"level":0,"ideasArr":[]},"2":{"title":"Storing object in a file","key":2,"id":249,"level":1,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Networking","id":250,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_networking.htm","key":1,"id":251,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Multi-threading","id":252,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_multithreading.htm","key":1,"id":253,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"DI","id":255,"ideas":{"1":{"title":"https://www.objc.io/issues/11-android/dependency-injection-in-java/","key":1,"id":257,"level":0,"ideasArr":[]},"2":{"title":"https://github.com/cxxr/better-java#dependency-injection","key":2,"id":258,"level":1,"ideasArr":[]},"3":{"title":"We use @inject annotation","key":3,"id":259,"level":2,"ideasArr":[]},"4":{"title":"There are tools that generate code at compile time or runtime","key":4,"id":261,"level":3,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Annotations","id":256,"ideas":{"1":{"title":"@inject","key":1,"id":260,"level":0,"ideasArr":[]},"2":{"title":"How to create a runtime annotation","content":"<h3 id=\"an-example-of-runtime-annotation-processing\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; padding: 2.0736em 0px 0px; border: 0px; font-stretch: inherit; font-size: 1.44em; line-height: 1.2; font-family: AkkuratTT, sans-serif; vertical-align: baseline; max-width: 26.3889em; color: rgb(38, 38, 38);\">An Example of Runtime Annotation Processing</h3><p style=\"box-sizing: border-box; margin-top: 1em; margin-bottom: 0px; padding: 0px; border: 0px; font-stretch: inherit; font-size: 20px; line-height: 1.5; font-family: AkkuratTT, sans-serif; vertical-align: baseline; max-width: 38em; color: rgb(38, 38, 38);\">I’d like to finish up by showing a simple example of how one might define and process a runtime annotation. Let’s say that you were an exceptionally impatient person and were tired of typing out fully qualified static constants in your Android codebase, constants like these:</p><pre style=\"box-sizing: border-box; margin: 1.17647em -1.17647em; padding: 1.17647em; border: 0px; font-stretch: inherit; font-size: 0.85em; line-height: 1.25; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; position: relative; display: inline-block; color: rgb(26, 26, 26); border-radius: 5px; min-width: 47.0588em; background: rgb(247, 247, 247);\"><button class=\"js-select-code\" style=\"-webkit-font-smoothing: antialiased; font-family: AkkuratTT, sans-serif; font-size: 0.7em; text-transform: uppercase; font-weight: bold; letter-spacing: 0.1em; line-height: 1; -webkit-appearance: none; padding: 0px; border: none; color: rgb(0, 146, 219); position: absolute; top: 1.68067em; right: 1.68067em; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;\">SELECT ALL</button><code class=\"java hljs\" style=\"box-sizing: border-box; margin: 0px; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; display: block; overflow-x: auto; overflow-y: hidden;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">public</span> <span class=\"hljs-class\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">class</span> <span class=\"hljs-title\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(197, 96, 33);\">CrimeActivity</span> </span>{\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">public</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">static</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">final</span> String ACTION_VIEW_CRIME = \n        “com.bignerdranch.android.criminalintent.CrimeActivity.ACTION_VIEW_CRIME”;\n}\n</code></pre><span style=\"color: rgb(38, 38, 38); font-family: AkkuratTT, sans-serif; font-size: 20px;\"></span><p style=\"box-sizing: border-box; margin-top: 1.25em; margin-bottom: 0px; padding: 0px; border: 0px; font-stretch: inherit; font-size: 20px; line-height: 1.5; font-family: AkkuratTT, sans-serif; vertical-align: baseline; max-width: 38em; color: rgb(38, 38, 38);\">You could use a runtime annotation to do this work for you. First, you’d create the annotation class:</p><pre style=\"box-sizing: border-box; margin: 1.17647em -1.17647em; padding: 1.17647em; border: 0px; font-stretch: inherit; font-size: 0.85em; line-height: 1.25; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; position: relative; display: inline-block; color: rgb(26, 26, 26); border-radius: 5px; min-width: 47.0588em; background: rgb(247, 247, 247);\"><button class=\"js-select-code\" style=\"-webkit-font-smoothing: antialiased; font-family: AkkuratTT, sans-serif; font-size: 0.7em; text-transform: uppercase; font-weight: bold; letter-spacing: 0.1em; line-height: 1; -webkit-appearance: none; padding: 0px; border: none; color: rgb(0, 146, 219); position: absolute; top: 1.68067em; right: 1.68067em; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;\">SELECT ALL</button><code class=\"java hljs\" style=\"box-sizing: border-box; margin: 0px; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; display: block; overflow-x: auto; overflow-y: hidden;\"><span class=\"hljs-annotation\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(155, 133, 157);\">@Retention</span>(RetentionPolicy.RUNTIME)\n<span class=\"hljs-annotation\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(155, 133, 157);\">@Target</span>( { ElementType.FIELD })\n<span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">public</span> <span class=\"hljs-annotation\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(155, 133, 157);\">@interface</span> ServiceConstant { }\n</code></pre><span style=\"color: rgb(38, 38, 38); font-family: AkkuratTT, sans-serif; font-size: 20px;\"></span><p style=\"box-sizing: border-box; margin-top: 1.25em; margin-bottom: 0px; padding: 0px; border: 0px; font-stretch: inherit; font-size: 20px; line-height: 1.5; font-family: AkkuratTT, sans-serif; vertical-align: baseline; max-width: 38em; color: rgb(38, 38, 38);\">This code declares an annotation named&nbsp;<code style=\"box-sizing: border-box; margin: 0px; padding: 0.1em 0.25em; border: 0px; font-variant: inherit; font-stretch: inherit; font-size: 0.9em; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; border-radius: 5px; color: rgb(34, 34, 34); word-wrap: break-word; background: rgb(242, 242, 242);\">ServiceConstant</code>. The code is itself annotated with two annotations:&nbsp;<code style=\"box-sizing: border-box; margin: 0px; padding: 0.1em 0.25em; border: 0px; font-variant: inherit; font-stretch: inherit; font-size: 0.9em; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; border-radius: 5px; color: rgb(34, 34, 34); word-wrap: break-word; background: rgb(242, 242, 242);\">@Retention</code>, and&nbsp;<code style=\"box-sizing: border-box; margin: 0px; padding: 0.1em 0.25em; border: 0px; font-variant: inherit; font-stretch: inherit; font-size: 0.9em; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; border-radius: 5px; color: rgb(34, 34, 34); word-wrap: break-word; background: rgb(242, 242, 242);\">@Target</code>.&nbsp;<code style=\"box-sizing: border-box; margin: 0px; padding: 0.1em 0.25em; border: 0px; font-variant: inherit; font-stretch: inherit; font-size: 0.9em; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; border-radius: 5px; color: rgb(34, 34, 34); word-wrap: break-word; background: rgb(242, 242, 242);\">@Retention</code>&nbsp;says how long the annotation will stick around. Here, we say that we want to see it at runtime. If we wanted this annotation to be processed at compile time only, we could have specified&nbsp;<code style=\"box-sizing: border-box; margin: 0px; padding: 0.1em 0.25em; border: 0px; font-variant: inherit; font-stretch: inherit; font-size: 0.9em; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; border-radius: 5px; color: rgb(34, 34, 34); word-wrap: break-word; background: rgb(242, 242, 242);\">RetentionPolicy.SOURCE</code>.</p><p style=\"box-sizing: border-box; margin-top: 1.25em; margin-bottom: 0px; padding: 0px; border: 0px; font-stretch: inherit; font-size: 20px; line-height: 1.5; font-family: AkkuratTT, sans-serif; vertical-align: baseline; max-width: 38em; color: rgb(38, 38, 38);\">The other annotation,&nbsp;<code style=\"box-sizing: border-box; margin: 0px; padding: 0.1em 0.25em; border: 0px; font-variant: inherit; font-stretch: inherit; font-size: 0.9em; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; border-radius: 5px; color: rgb(34, 34, 34); word-wrap: break-word; background: rgb(242, 242, 242);\">@Target</code>, says where you can put the annotation in your source code. Any number of values can be provided. Our annotation is only valid for fields, so we have just provided&nbsp;<code style=\"box-sizing: border-box; margin: 0px; padding: 0.1em 0.25em; border: 0px; font-variant: inherit; font-stretch: inherit; font-size: 0.9em; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; border-radius: 5px; color: rgb(34, 34, 34); word-wrap: break-word; background: rgb(242, 242, 242);\">ElementType.FIELD</code>.</p><p style=\"box-sizing: border-box; margin-top: 1.25em; margin-bottom: 0px; padding: 0px; border: 0px; font-stretch: inherit; font-size: 20px; line-height: 1.5; font-family: AkkuratTT, sans-serif; vertical-align: baseline; max-width: 38em; color: rgb(38, 38, 38);\">Once the annotation is defined, we write some code to look for it and populate the annotated field automatically:</p><pre style=\"box-sizing: border-box; margin: 1.17647em -1.17647em; padding: 1.17647em; border: 0px; font-stretch: inherit; font-size: 0.85em; line-height: 1.25; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; position: relative; display: inline-block; color: rgb(26, 26, 26); border-radius: 5px; min-width: 47.0588em; background: rgb(247, 247, 247);\"><button class=\"js-select-code\" style=\"-webkit-font-smoothing: antialiased; font-family: AkkuratTT, sans-serif; font-size: 0.7em; text-transform: uppercase; font-weight: bold; letter-spacing: 0.1em; line-height: 1; -webkit-appearance: none; padding: 0px; border: none; color: rgb(0, 146, 219); position: absolute; top: 1.68067em; right: 1.68067em; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;\">SELECT ALL</button><code class=\"java hljs\" style=\"box-sizing: border-box; margin: 0px; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; display: block; overflow-x: auto; overflow-y: hidden;\"><span class=\"hljs-function\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">public</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">static</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">void</span> <span class=\"hljs-title\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">populateConstants</span><span class=\"hljs-params\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(197, 96, 33);\">(Class&lt;?&gt; klass)</span> </span>{\n    String packageName = klass.getPackage().getName();\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">for</span> (Field field : klass.getDeclaredFields()) {\n        <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">if</span> (Modifier.isStatic(field.getModifiers()) &amp;&amp; \n                field.isAnnotationPresent(ServiceConstant.class)) {\n            String value = packageName + <span class=\"hljs-string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(239, 65, 52);\">\".\"</span> + field.getName();\n            <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">try</span> {\n                field.set(<span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">null</span>, value);\n                Log.i(TAG, <span class=\"hljs-string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(239, 65, 52);\">\"Setup service constant: \"</span> + value + <span class=\"hljs-string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(239, 65, 52);\">\"\"</span>);\n            } <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">catch</span> (IllegalAccessException iae) {\n                Log.e(TAG, <span class=\"hljs-string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(239, 65, 52);\">\"Unable to setup constant for field \"</span> + \n                        field.getName() +\n                        <span class=\"hljs-string\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(239, 65, 52);\">\" in class \"</span> + klass.getName());\n            }\n        }\n    }\n}\n</code></pre><span style=\"color: rgb(38, 38, 38); font-family: AkkuratTT, sans-serif; font-size: 20px;\"></span><p style=\"box-sizing: border-box; margin-top: 1.25em; margin-bottom: 0px; padding: 0px; border: 0px; font-stretch: inherit; font-size: 20px; line-height: 1.5; font-family: AkkuratTT, sans-serif; vertical-align: baseline; max-width: 38em; color: rgb(38, 38, 38);\">Finally, we add the annotation to our code, and call our magic method:</p><pre style=\"box-sizing: border-box; margin: 1.17647em -1.17647em; padding: 1.17647em; border: 0px; font-stretch: inherit; font-size: 0.85em; line-height: 1.25; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; position: relative; display: inline-block; color: rgb(26, 26, 26); border-radius: 5px; min-width: 47.0588em; background: rgb(247, 247, 247);\"><button class=\"js-select-code\" style=\"-webkit-font-smoothing: antialiased; font-family: AkkuratTT, sans-serif; font-size: 0.7em; text-transform: uppercase; font-weight: bold; letter-spacing: 0.1em; line-height: 1; -webkit-appearance: none; padding: 0px; border: none; color: rgb(0, 146, 219); position: absolute; top: 1.68067em; right: 1.68067em; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;\">SELECT ALL</button><code class=\"java hljs\" style=\"box-sizing: border-box; margin: 0px; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: AkkuratMono, Consolas, Monaco, monospace; vertical-align: baseline; max-width: 100%; display: block; overflow-x: auto; overflow-y: hidden;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">public</span> <span class=\"hljs-class\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">class</span> <span class=\"hljs-title\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(197, 96, 33);\">CrimeActivity</span> </span>{\n    <span class=\"hljs-annotation\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(155, 133, 157);\">@ServiceConstant</span>\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">public</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">static</span> <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">final</span> String ACTION_VIEW_CRIME;\n\n    <span class=\"hljs-keyword\" style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline; color: rgb(170, 13, 145);\">static</span> {\n        ServiceUtils.populateConstants(CrimeActivity.class);\n    }\n}</code></pre>","key":2,"id":263,"level":1,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Reflection API","id":262,"ideas":{"1":{"title":"https://github.com/google/guava/wiki/ReflectionExplained","key":1,"id":275,"level":0,"ideas":{"1":{"title":"Guava's reflection","key":1,"id":276,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"Guava's reflection","id":276}]}},"attr":{"collapsed":true,"style":{}}},{"title":"General Guidelines","id":264,"ideas":{"1":{"title":"Don't use nulls, but return empty collections","key":1,"id":265,"level":0,"ideasArr":[]},"2":{"title":"Use immutable with final","key":2,"id":268,"level":1,"ideasArr":[]},"3":{"title":"http://google.github.io/styleguide/javaguide.html#s6-programming-practices","key":3,"id":269,"level":2,"ideas":{"1":{"title":"Google Java Styleguide","key":1,"id":270,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"Google Java Styleguide","id":270}]},"4":{"title":"Code quality","key":4,"id":285,"level":3,"ideas":{"1":{"title":"https://github.com/cxxr/better-java#code-quality","key":1,"id":286,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://github.com/cxxr/better-java#code-quality","id":286}]}},"attr":{"style":{},"collapsed":true}},{"title":"Basics","id":254,"attr":{"style":{},"collapsed":true},"ideas":{"1":{"title":"Access Modifiers","key":1,"id":205,"level":0,"ideas":{"1":{"title":"public,private,static,abstract ...","key":1,"id":206,"level":0,"ideasArr":[]},"2":{"title":"Static","content":"<pre class=\"prettyprint notranslate tryit prettyprinted\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 5px; margin-bottom: 10px; border-radius: 0px; width: 604px; line-height: 16px; border-color: rgb(214, 214, 214); font-size: 12px; overflow: auto; min-height: 37px; color: rgb(49, 49, 49); cursor: default; background-image: url(&quot;java/images/try-it.jpg&quot;) !important; background-attachment: initial !important; background-color: rgb(238, 238, 238) !important; background-size: initial !important; background-origin: initial !important; background-clip: initial !important; background-position: 100% 0%; background-repeat: no-repeat !important;\"><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">class</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">ExampleMinNumber</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   \n   </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">static</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">void</span><span class=\"pln\" style=\"box-sizing: border-box;\"> main</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">String</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">[]</span><span class=\"pln\" style=\"box-sizing: border-box;\"> args</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> a </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(0, 102, 102);\">11</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> b </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(0, 102, 102);\">6</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> c </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> minFunction</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">a</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"box-sizing: border-box;\"> b</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">System</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">println</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">\"Minimum Value = \"</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">+</span><span class=\"pln\" style=\"box-sizing: border-box;\"> c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n   </span><span class=\"com\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">/** returns the minimum of two numbers */</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">static</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> minFunction</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n1</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n2</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> min</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">n1 </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">&gt;</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n2</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         min </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n2</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">else</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         min </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n1</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">return</span><span class=\"pln\" style=\"box-sizing: border-box;\"> min</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\"> \n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span></pre>","key":2,"id":219,"level":1,"ideasArr":[]},"3":{"title":"Abstract","key":3,"id":230,"level":2,"ideas":{"1":{"title":"A class that can't be instantiated","key":1,"id":231,"level":0,"ideasArr":[]},"2":{"title":"A method that's abstract within it would have to be extended in sub-classes","key":2,"id":232,"level":1,"ideasArr":[]}},"ideasArr":[{"title":"A class that can't be instantiated","id":231},{"title":"A method that's abstract within it would have to be extended in sub-classes","id":232}]}},"ideasArr":[{"title":"public,private,static,abstract ...","id":206},{"title":"Static","id":219,"attr":{"attachment":{"contentType":"text/html","content":"<pre class=\"prettyprint notranslate tryit prettyprinted\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 5px; margin-bottom: 10px; border-radius: 0px; width: 604px; line-height: 16px; border-color: rgb(214, 214, 214); font-size: 12px; overflow: auto; min-height: 37px; color: rgb(49, 49, 49); cursor: default; background-image: url(&quot;java/images/try-it.jpg&quot;) !important; background-attachment: initial !important; background-color: rgb(238, 238, 238) !important; background-size: initial !important; background-origin: initial !important; background-clip: initial !important; background-position: 100% 0%; background-repeat: no-repeat !important;\"><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">class</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">ExampleMinNumber</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   \n   </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">static</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">void</span><span class=\"pln\" style=\"box-sizing: border-box;\"> main</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">String</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">[]</span><span class=\"pln\" style=\"box-sizing: border-box;\"> args</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> a </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(0, 102, 102);\">11</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> b </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(0, 102, 102);\">6</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> c </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> minFunction</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">a</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"box-sizing: border-box;\"> b</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">System</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">out</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">.</span><span class=\"pln\" style=\"box-sizing: border-box;\">println</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(0, 136, 0);\">\"Minimum Value = \"</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">+</span><span class=\"pln\" style=\"box-sizing: border-box;\"> c</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">);</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n   </span><span class=\"com\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">/** returns the minimum of two numbers */</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n   </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">public</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">static</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> minFunction</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n1</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">,</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n2</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">{</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">int</span><span class=\"pln\" style=\"box-sizing: border-box;\"> min</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">if</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">(</span><span class=\"pln\" style=\"box-sizing: border-box;\">n1 </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">&gt;</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n2</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">)</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         min </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n2</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">else</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n         min </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">=</span><span class=\"pln\" style=\"box-sizing: border-box;\"> n1</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n\n      </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(0, 0, 136);\">return</span><span class=\"pln\" style=\"box-sizing: border-box;\"> min</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span><span class=\"pln\" style=\"box-sizing: border-box;\"> \n   </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span><span class=\"pln\" style=\"box-sizing: border-box;\">\n</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">}</span></pre>"},"style":{}}},{"title":"Abstract","id":230,"ideas":{"1":{"title":"A class that can't be instantiated","key":1,"id":231,"level":0,"ideasArr":[]},"2":{"title":"A method that's abstract within it would have to be extended in sub-classes","key":2,"id":232,"level":1,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}}]},"2":{"title":"Operators","key":2,"id":207,"level":1,"ideas":{"1":{"title":"Bitwise operators","content":"<h2 style=\"box-sizing: border-box; color: rgb(18, 18, 20); font-weight: normal; letter-spacing: -1px; margin-top: 0.2em; margin-right: 0.2em; margin-bottom: 0.2em; font-size: 1.7em; line-height: 1.5em; padding: 0px; text-shadow: rgb(204, 204, 204) 1px 1px 2px; position: relative; left: 0px; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif;\">The Bitwise Operators:</h2><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">Java defines several bitwise operators, which can be applied to the integer types, long, int, short, char, and byte.</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">Bitwise operator works on bits and performs bit-by-bit operation. Assume if a = 60; and b = 13; now in binary format they will be as follows:</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">a = 0011 1100</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">b = 0000 1101</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">-----------------</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">a&amp;b = 0000 1100</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">a|b = 0011 1101</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">a^b = 0011 0001</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">~a&nbsp; = 1100 0011</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">The following table lists the bitwise operators:</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">Assume integer variable A holds 60 and variable B holds 13 then:</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\"><a href=\"http://www.tutorialspoint.com/java/java_bitwise_operators_examples.htm\" style=\"box-sizing: border-box; color: rgb(49, 49, 49); padding-right: 22px; padding-bottom: 2px; outline: none !important; background: url(&quot;/images/link-icon.png&quot;) 100% 50% no-repeat;\">Show Examples</a></p><table class=\"table table-bordered\" style=\"box-sizing: border-box; border-collapse: collapse; width: 604px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(221, 221, 221); color: rgb(49, 49, 49); font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; line-height: 22px;\"><tbody style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box;\"><th style=\"box-sizing: border-box; line-height: 1.42857; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-top-color: rgb(221, 221, 221); border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221); background: rgb(238, 238, 238);\">SR.NO</th><th style=\"box-sizing: border-box; line-height: 1.42857; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-top-color: rgb(221, 221, 221); border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221); background: rgb(238, 238, 238);\">Operator and Description</th></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">1</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">&amp; (bitwise and)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary AND Operator copies a bit to the result if it exists in both operands.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;(A &amp; B) will give 12 which is 0000 1100</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">2</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">| (bitwise or)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary OR Operator copies a bit if it exists in either operand.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;(A | B) will give 61 which is 0011 1101</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">3</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">^ (bitwise XOR)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary XOR Operator copies the bit if it is set in one operand but not both.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;(A ^ B) will give 49 which is 0011 0001</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">4</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">~ (bitwise compliment)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary Ones Complement Operator is unary and has the effect of 'flipping' bits.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;(~A ) will give -61 which is 1100 0011 in 2's complement form due to a signed binary number.</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">5</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">&lt;&lt; (left shift)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary Left Shift Operator. The left operands value is moved left by the number of bits specified by the right operand</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;A &lt;&lt; 2 will give 240 which is 1111 0000</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">6</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">&gt;&gt; (right shift)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary Right Shift Operator. The left operands value is moved right by the number of bits specified by the right operand.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;A &gt;&gt; 2 will give 15 which is 1111</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">7</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">&gt;&gt;&gt; (zero fill right shift)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Shift right zero fill operator. The left operands value is moved right by the number of bits specified by the right operand and shifted values are filled up with zeros.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;A &gt;&gt;&gt;2 will give 15 which is 0000 1111</td></tr></tbody></table>","key":1,"id":208,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"Bitwise operators","id":208,"attr":{"attachment":{"contentType":"text/html","content":"<h2 style=\"box-sizing: border-box; color: rgb(18, 18, 20); font-weight: normal; letter-spacing: -1px; margin-top: 0.2em; margin-right: 0.2em; margin-bottom: 0.2em; font-size: 1.7em; line-height: 1.5em; padding: 0px; text-shadow: rgb(204, 204, 204) 1px 1px 2px; position: relative; left: 0px; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif;\">The Bitwise Operators:</h2><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">Java defines several bitwise operators, which can be applied to the integer types, long, int, short, char, and byte.</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">Bitwise operator works on bits and performs bit-by-bit operation. Assume if a = 60; and b = 13; now in binary format they will be as follows:</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">a = 0011 1100</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">b = 0000 1101</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">-----------------</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">a&amp;b = 0000 1100</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">a|b = 0011 1101</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">a^b = 0011 0001</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">~a&nbsp; = 1100 0011</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">The following table lists the bitwise operators:</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">Assume integer variable A holds 60 and variable B holds 13 then:</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\"><a href=\"http://www.tutorialspoint.com/java/java_bitwise_operators_examples.htm\" style=\"box-sizing: border-box; color: rgb(49, 49, 49); padding-right: 22px; padding-bottom: 2px; outline: none !important; background: url(&quot;/images/link-icon.png&quot;) 100% 50% no-repeat;\">Show Examples</a></p><table class=\"table table-bordered\" style=\"box-sizing: border-box; border-collapse: collapse; width: 604px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(221, 221, 221); color: rgb(49, 49, 49); font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; line-height: 22px;\"><tbody style=\"box-sizing: border-box;\"><tr style=\"box-sizing: border-box;\"><th style=\"box-sizing: border-box; line-height: 1.42857; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-top-color: rgb(221, 221, 221); border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221); background: rgb(238, 238, 238);\">SR.NO</th><th style=\"box-sizing: border-box; line-height: 1.42857; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-top-color: rgb(221, 221, 221); border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221); background: rgb(238, 238, 238);\">Operator and Description</th></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">1</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">&amp; (bitwise and)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary AND Operator copies a bit to the result if it exists in both operands.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;(A &amp; B) will give 12 which is 0000 1100</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">2</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">| (bitwise or)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary OR Operator copies a bit if it exists in either operand.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;(A | B) will give 61 which is 0011 1101</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">3</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">^ (bitwise XOR)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary XOR Operator copies the bit if it is set in one operand but not both.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;(A ^ B) will give 49 which is 0011 0001</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">4</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">~ (bitwise compliment)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary Ones Complement Operator is unary and has the effect of 'flipping' bits.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;(~A ) will give -61 which is 1100 0011 in 2's complement form due to a signed binary number.</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">5</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">&lt;&lt; (left shift)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary Left Shift Operator. The left operands value is moved left by the number of bits specified by the right operand</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;A &lt;&lt; 2 will give 240 which is 1111 0000</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">6</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">&gt;&gt; (right shift)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Binary Right Shift Operator. The left operands value is moved right by the number of bits specified by the right operand.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;A &gt;&gt; 2 will give 15 which is 1111</td></tr><tr style=\"box-sizing: border-box;\"><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\">7</td><td style=\"box-sizing: border-box; line-height: 1.42857; border-right-width: 1px; border-bottom-width: 1px; border-right-style: solid; border-bottom-style: solid; border-right-color: rgb(221, 221, 221); border-bottom-color: rgb(221, 221, 221);\"><b style=\"box-sizing: border-box;\">&gt;&gt;&gt; (zero fill right shift)</b><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-size: 15px !important;\">Shift right zero fill operator. The left operands value is moved right by the number of bits specified by the right operand and shifted values are filled up with zeros.</p><b style=\"box-sizing: border-box;\">Example:</b>&nbsp;A &gt;&gt;&gt;2 will give 15 which is 0000 1111</td></tr></tbody></table>"},"style":{}}}]},"3":{"title":"Data types","key":3,"id":201,"level":2,"ideas":{"1":{"title":"Primitive","key":1,"id":202,"level":0,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_basic_datatypes.htm","key":1,"id":204,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"http://www.tutorialspoint.com/java/java_basic_datatypes.htm","id":204}]},"2":{"title":"Object","key":2,"id":203,"level":1,"ideasArr":[]}},"ideasArr":[{"title":"Primitive","id":202,"attr":{"style":{}},"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_basic_datatypes.htm","key":1,"id":204,"level":0,"ideasArr":[]}}},{"title":"Object","id":203}]},"4":{"title":"OOP","key":4,"id":189,"level":3,"ideas":{"1":{"title":"Generics","key":1,"id":190,"level":0,"ideas":{},"ideasArr":[]},"2":{"title":"Interfaces","key":2,"id":192,"level":1,"ideas":{},"ideasArr":[]},"3":{"title":"Classes","key":3,"id":194,"level":2,"ideasArr":[]},"5":{"title":"Enums","key":5,"id":196,"level":3,"ideasArr":[]},"6":{"title":"Methods","key":6,"id":198,"level":4,"ideasArr":[]},"7":{"title":"Inner classes","key":7,"id":228,"level":5,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_innerclasses.htm","key":1,"id":229,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"http://www.tutorialspoint.com/java/java_innerclasses.htm","id":229}]}},"ideasArr":[{"title":"Generics","id":190,"ideas":{}},{"title":"Interfaces","id":192,"ideas":{}},{"title":"Classes","id":194},{"title":"Enums","id":196},{"title":"Methods","id":198},{"title":"Inner classes","id":228,"ideas":{"1":{"title":"http://www.tutorialspoint.com/java/java_innerclasses.htm","key":1,"id":229,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}}]},"5":{"title":"Decision Making","key":5,"id":209,"level":4,"ideas":{"1":{"title":"Ternary operators","content":"<h2 style=\"box-sizing: border-box; color: rgb(18, 18, 20); font-weight: normal; letter-spacing: -1px; margin-top: 0.2em; margin-right: 0.2em; margin-bottom: 0.2em; font-size: 1.7em; line-height: 1.5em; padding: 0px; text-shadow: rgb(204, 204, 204) 1px 1px 2px; position: relative; left: 0px; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif;\">The ? : Operator:</h2><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">We have covered&nbsp;<b style=\"box-sizing: border-box;\">conditional operator ? :</b>&nbsp;in previous chapter which can be used to replace&nbsp;<b style=\"box-sizing: border-box;\">if...else</b>&nbsp;statements. It has the following general form:</p><pre class=\"prettyprint notranslate prettyprinted\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 5px; margin-bottom: 10px; border-radius: 0px; width: 604px; line-height: 16px; border-color: rgb(214, 214, 214); font-size: 12px; overflow: auto; color: rgb(49, 49, 49); background-color: rgb(238, 238, 238);\"><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">Exp1</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">?</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">Exp2</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">Exp3</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span></pre><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">Where Exp1, Exp2, and Exp3 are expressions. Notice the use and placement of the colon.</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">To determine the value of whole expression, initially exp1 is evaluated</p><ul class=\"list\" style=\"box-sizing: border-box; color: rgb(49, 49, 49); font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; line-height: 22px;\"><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\">If the value of exp1 is true, then the value of Exp2 will be the value of the whole expression.</li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\">If the value of exp1 is false, then Exp3 is evaluated and its value becomes the value of the entire expression.</li></ul>","key":1,"id":211,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"Ternary operators","id":211,"attr":{"attachment":{"contentType":"text/html","content":"<h2 style=\"box-sizing: border-box; color: rgb(18, 18, 20); font-weight: normal; letter-spacing: -1px; margin-top: 0.2em; margin-right: 0.2em; margin-bottom: 0.2em; font-size: 1.7em; line-height: 1.5em; padding: 0px; text-shadow: rgb(204, 204, 204) 1px 1px 2px; position: relative; left: 0px; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif;\">The ? : Operator:</h2><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">We have covered&nbsp;<b style=\"box-sizing: border-box;\">conditional operator ? :</b>&nbsp;in previous chapter which can be used to replace&nbsp;<b style=\"box-sizing: border-box;\">if...else</b>&nbsp;statements. It has the following general form:</p><pre class=\"prettyprint notranslate prettyprinted\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 5px; margin-bottom: 10px; border-radius: 0px; width: 604px; line-height: 16px; border-color: rgb(214, 214, 214); font-size: 12px; overflow: auto; color: rgb(49, 49, 49); background-color: rgb(238, 238, 238);\"><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">Exp1</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">?</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">Exp2</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">:</span><span class=\"pln\" style=\"box-sizing: border-box;\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(127, 0, 85);\">Exp3</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(102, 102, 0);\">;</span></pre><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">Where Exp1, Exp2, and Exp3 are expressions. Notice the use and placement of the colon.</p><p style=\"box-sizing: border-box; color: rgb(0, 0, 0); line-height: 24px; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify; font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; font-size: 15px !important;\">To determine the value of whole expression, initially exp1 is evaluated</p><ul class=\"list\" style=\"box-sizing: border-box; color: rgb(49, 49, 49); font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif; line-height: 22px;\"><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\">If the value of exp1 is true, then the value of Exp2 will be the value of the whole expression.</li><li style=\"box-sizing: border-box; line-height: 24px; margin-bottom: 5px; padding: 0px 0px 0px 19px; list-style: none; color: rgb(0, 0, 0); background: url(&quot;/images/icon-bullet.png&quot;) 0px 4px no-repeat;\">If the value of exp1 is false, then Exp3 is evaluated and its value becomes the value of the entire expression.</li></ul>"},"style":{}}}]},"6":{"title":"Types as classes","key":6,"id":212,"level":5,"ideas":{"1":{"title":"Number","key":1,"id":213,"level":0,"ideasArr":[]},"2":{"title":"Character","key":2,"id":214,"level":1,"ideasArr":[]},"3":{"title":"Arrays","key":3,"id":215,"level":2,"ideas":{"1":{"title":"You can use [ ] literal","key":1,"id":216,"level":0,"ideasArr":[]},"2":{"title":"Or you can use the new operator","key":2,"id":217,"level":1,"ideasArr":[]},"3":{"title":"It has to have a type","key":3,"id":218,"level":2,"ideasArr":[]}},"ideasArr":[{"title":"You can use [ ] literal","id":216},{"title":"Or you can use the new operator","id":217},{"title":"It has to have a type","id":218}]}},"ideasArr":[{"title":"Number","id":213},{"title":"Character","id":214},{"title":"Arrays","id":215,"ideas":{"1":{"title":"You can use [ ] literal","key":1,"id":216,"level":0,"ideasArr":[]},"2":{"title":"Or you can use the new operator","key":2,"id":217,"level":1,"ideasArr":[]},"3":{"title":"It has to have a type","key":3,"id":218,"level":2,"ideasArr":[]}}}]}}}]},{"title":"Core","key":1,"id":181,"level":1,"ideas":{"1":{"title":"8.0","key":1,"id":183,"level":0,"ideas":{"1":{"title":"http://www.javacodegeeks.com/2014/03/8-new-features-for-java-8.html","key":1,"id":184,"level":0,"ideas":{"1":{"title":"summary of the new changes","key":1,"id":185,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"summary of the new changes","id":185}]}},"ideasArr":[{"title":"http://www.javacodegeeks.com/2014/03/8-new-features-for-java-8.html","id":184,"ideas":{"1":{"title":"summary of the new changes","key":1,"id":185,"level":0,"ideasArr":[]}}}]}},"ideasArr":[{"title":"8.0","id":183,"ideas":{"1":{"title":"http://www.javacodegeeks.com/2014/03/8-new-features-for-java-8.html","key":1,"id":184,"level":0,"ideas":{"1":{"title":"summary of the new changes","key":1,"id":185,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"summary of the new changes","id":185}]}}}]},{"title":"Resources","key":2,"id":177,"level":2,"ideas":{"1":{"title":"https://en.wikipedia.org/wiki/Java_(programming_language)#Versions","key":1,"id":179,"level":0,"ideasArr":[]},"2":{"title":"Meta Resource","key":2,"id":186,"level":1,"ideas":{"1":{"title":"https://github.com/cxxr/better-java","key":1,"id":187,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://github.com/cxxr/better-java","id":187}]},"3":{"title":"http://www.tutorialspoint.com/java/","key":3,"id":188,"level":2,"ideas":{},"ideasArr":[]},"4":{"title":"https://spring.io/guides/gs/gradle/","key":4,"id":294,"level":3,"ideas":{"1":{"title":"bulding java projects with gradle","key":1,"id":295,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"bulding java projects with gradle","id":295}]}},"ideasArr":[{"title":"https://en.wikipedia.org/wiki/Java_(programming_language)#Versions","id":179},{"title":"Meta Resource","id":186,"ideas":{"1":{"title":"https://github.com/cxxr/better-java","key":1,"id":187,"level":0,"ideasArr":[]}},"attr":{"style":{}}},{"title":"http://www.tutorialspoint.com/java/","id":188,"ideas":{}},{"title":"https://spring.io/guides/gs/gradle/","id":294,"ideas":{"1":{"title":"bulding java projects with gradle","key":1,"id":295,"level":0,"ideasArr":[]}}}]},{"title":"Third Party","key":3,"id":272,"level":3,"ideas":{"1":{"title":"Guava","content":"<a href=\"https://github.com/google/guava\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); text-decoration: underline; outline: 0px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\">Guava</a><span style=\"font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\">&nbsp;is Google's excellent here's-what-Java-is-missing library. It's almost hard to distill everything that I like about this library, but I'm going to try.</span>","key":1,"id":273,"level":0,"ideas":{"1":{"title":"https://github.com/google/guava","key":1,"id":274,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://github.com/google/guava","id":274}]},"2":{"title":"Gson","key":2,"id":277,"level":1,"ideas":{"1":{"title":"https://github.com/google/gson","key":1,"id":278,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://github.com/google/gson","id":278}]},"3":{"title":"Tuples","key":3,"id":279,"level":2,"ideas":{"1":{"title":"https://github.com/cxxr/better-java#java-tuples","key":1,"id":280,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"https://github.com/cxxr/better-java#java-tuples","id":280}]},"4":{"title":"Functional Java","key":4,"id":281,"level":3,"ideas":{"1":{"title":"http://www.javaslang.io/","key":1,"id":282,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"http://www.javaslang.io/","id":282}]},"5":{"title":"ORM","key":5,"id":283,"level":4,"ideas":{"1":{"title":"http://www.jooq.org/","key":1,"id":284,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"http://www.jooq.org/","id":284}]},"6":{"title":"Gradle","key":6,"id":287,"level":5,"ideas":{"1":{"title":"http://gradle.org/getting-started-gradle-java/","key":1,"id":288,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"http://gradle.org/getting-started-gradle-java/","id":288}]},"7":{"title":"Maven","key":7,"id":289,"level":6,"ideas":{"1":{"title":"is the repository for all the external libraries","key":1,"id":290,"level":0,"ideasArr":[]}},"ideasArr":[{"title":"is the repository for all the external libraries","id":290}]},"8":{"title":"Web Servers","key":8,"id":291,"level":7,"ideas":{"1":{"title":"Tomcat","key":1,"id":292,"level":0,"ideasArr":[]},"2":{"title":"Jetty","key":2,"id":293,"level":1,"ideasArr":[]}},"ideasArr":[{"title":"Tomcat","id":292},{"title":"Jetty","id":293}]}},"ideasArr":[{"title":"Guava","id":273,"attr":{"attachment":{"contentType":"text/html","content":"<a href=\"https://github.com/google/guava\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); text-decoration: underline; outline: 0px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\">Guava</a><span style=\"font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\">&nbsp;is Google's excellent here's-what-Java-is-missing library. It's almost hard to distill everything that I like about this library, but I'm going to try.</span>"},"style":{},"collapsed":true},"ideas":{"1":{"title":"https://github.com/google/guava","key":1,"id":274,"level":0,"ideasArr":[]}}},{"title":"Gson","id":277,"ideas":{"1":{"title":"https://github.com/google/gson","key":1,"id":278,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Tuples","id":279,"ideas":{"1":{"title":"https://github.com/cxxr/better-java#java-tuples","key":1,"id":280,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Functional Java","id":281,"ideas":{"1":{"title":"http://www.javaslang.io/","key":1,"id":282,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"ORM","id":283,"ideas":{"1":{"title":"http://www.jooq.org/","key":1,"id":284,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Gradle","id":287,"ideas":{"1":{"title":"http://gradle.org/getting-started-gradle-java/","key":1,"id":288,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Maven","id":289,"ideas":{"1":{"title":"is the repository for all the external libraries","key":1,"id":290,"level":0,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}},{"title":"Web Servers","id":291,"ideas":{"1":{"title":"Tomcat","key":1,"id":292,"level":0,"ideasArr":[]},"2":{"title":"Jetty","key":2,"id":293,"level":1,"ideasArr":[]}},"attr":{"collapsed":true,"style":{}}}]}]