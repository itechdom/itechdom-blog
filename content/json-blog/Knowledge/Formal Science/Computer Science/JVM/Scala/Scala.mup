[{"title":"Concepts","key":0,"id":176,"level":0,"ideas":{"1":{"title":"Traits","key":1,"id":237,"level":0,"ideas":{}},"2":{"title":"Higher Order functions","key":2,"id":239,"level":1},"3":{"title":"Functional","key":3,"id":240,"level":2},"4":{"title":"Lang features","content":"<div>SEAMLESS JAVA INTEROP<br></div><div>Scala runs on the JVM, so Java and Scala stacks can be freely mixed for totally seamless integration.</div><div><br></div><div>TYPE INFERENCE</div><div>So the type system doesn’t feel so static. Don’t work for the type system. Let the type system work for you!</div><div><br></div><div>CONCURRENCY</div><div>&amp; DISTRIBUTION</div><div>Use data-parallel operations on collections, use actors for concurrency and distribution, or futures for asynchronous programming.</div><div><br></div><div>TRAITS</div><div>Combine the flexibility of Java-style interfaces with the power of classes. Think principled multiple-inheritance.</div><div><br></div><div>PATTERN MATCHING</div><div>Think “switch” on steroids. Match against class hierarchies, sequences, and more.</div><div><br></div><div>HIGHER-ORDER FUNCTIONS</div><div>Functions are first-class objects. Compose them with guaranteed type safety. Use them anywhere, pass them to anything.</div>","key":4,"id":241,"level":3},"5":{"title":"Actors","key":5,"id":286,"level":4,"ideas":{"1":{"title":"Currently Akka actors","key":1,"id":288,"level":0}}},"6":{"title":"Classes ","key":6,"id":291,"level":5,"ideas":{"1":{"title":"case classes","key":1,"id":292,"level":0,"ideas":{"1":{"title":"used as a value object?","key":1,"id":293,"level":0},"2":{"title":"no need for new to initialize an object","key":2,"id":294,"level":1}}},"2":{"title":"object","key":2,"id":296,"level":1,"ideas":{"1":{"title":"a static class?","key":1,"id":297,"level":0}}}}},"7":{"title":"Collections","key":7,"id":298,"level":6,"ideas":{"1":{"title":"by default immutable","key":1,"id":299,"level":0},"2":{"title":"Seq","key":2,"id":307,"level":1,"ideas":{"1":{"title":"a type of collections","key":1,"id":308,"level":0},"2":{"title":"http://www.scala-lang.org/api/current/index.html#scala.collection.Seq","key":2,"id":309,"level":1}}}}},"8":{"title":"lambdas","key":8,"id":300,"level":7,"ideas":{"1":{"title":"=>","key":1,"id":301,"level":0}}}}},{"title":"Resources","key":1,"id":234,"level":1,"ideas":{"1":{"title":"http://www.scala-lang.org/documentation/","key":1,"id":235,"level":0,"ideas":{"1":{"title":"Scala Docs","key":1,"id":236,"level":0}}},"2":{"title":"sbt","key":2,"id":245,"level":1,"ideas":{"1":{"title":"build tool","key":1,"id":246,"level":0}}},"3":{"title":"Activiator","key":3,"id":247,"level":2},"4":{"title":"http://www.tutorialspoint.com/scala/scala_basic_syntax.htm","key":4,"id":251,"level":3,"ideas":{"1":{"title":"tutorials point","key":1,"id":252,"level":0}}},"5":{"title":"http://aperiodic.net/phil/scala/s-99/","key":5,"id":255,"level":4,"ideas":{"1":{"title":"99 scala problems","key":1,"id":256,"level":0}}},"6":{"title":"https://github.com/search?l=Scala&o=desc&q=scala&s=stars&type=Repositories&utf8=%E2%9C%93","key":6,"id":257,"level":5,"ideas":{"1":{"title":"top list of github repos","key":1,"id":258,"level":0}}}}},{"title":"Project Starters","key":2,"id":233,"level":2,"ideas":{"1":{"title":"https://github.com/csoma/Scala-starter","key":1,"id":242,"level":0,"ideas":{"1":{"title":"scala-starter","key":1,"id":278,"level":0}}},"2":{"title":"https://github.com/scalatra/scalatra-sbt-prototype","key":2,"id":243,"level":1,"ideas":{"1":{"title":"Scalatara web framework","key":1,"id":244,"level":0}}}}},{"title":"Third Party","key":3,"id":248,"level":3,"ideas":{"1":{"title":"play framework","key":1,"id":250,"level":0},"2":{"title":"scalatara","key":2,"id":253,"level":1},"3":{"title":"akka","content":"<div>Build powerful concurrent &amp; distributed applications</div><div>more easily. Akka is a toolkit and runtime</div><div>for building highly concurrent,</div><div>distributed, and resilient</div><div>message-driven applications</div><div>on the JVM.</div>","key":3,"id":254,"level":2,"ideas":{"1":{"title":"Scala actors are deprecated in favor of akka","key":1,"id":287,"level":0}}},"5":{"title":"spray","key":5,"id":261,"level":3,"ideas":{"1":{"title":"https://github.com/spray/spray","key":1,"id":262,"level":0,"ideas":{"1":{"title":"Rest framework","key":1,"id":263,"level":0}}},"2":{"title":"https://drive.google.com/open?id=0B9tPYCpuqoIrTEcyUUpLb1BPY2s","key":2,"id":284,"level":1,"ideas":{"1":{"title":"my spray road","key":1,"id":285,"level":0}}}}},"6":{"title":"spark","key":6,"id":266,"level":4,"ideas":{"1":{"title":"https://github.com/mesos/spark","key":1,"id":267,"level":0}}},"14":{"title":"twitter scala http services","key":14,"id":269,"level":5,"ideas":{"1":{"title":"https://github.com/twitter/finatra","key":1,"id":268,"level":0,"ideas":{}}}},"15":{"title":"Sqeyrel, sql wrapper","key":15,"id":271,"level":6,"ideas":{"1":{"title":"https://github.com/squeryl/squeryl","key":1,"id":270,"level":0,"ideas":{}}}},"16":{"title":"Di in Scala","key":16,"id":273,"level":7,"ideas":{"1":{"title":"https://github.com/adamw/macwire","key":1,"id":272,"level":0,"ideas":{}}}},"17":{"title":"Scala-Android","key":17,"id":280,"level":8,"ideas":{"1":{"title":"http://macroid.github.io/ScalaOnAndroid.html","key":1,"id":279,"level":0,"ideas":{}}}},"18":{"title":"scalafx examples","key":18,"id":277,"level":9,"ideas":{"1":{"title":"https://github.com/scalafx/ScalaFX-Tutorials","key":1,"id":276,"level":0,"ideas":{}}}},"19":{"title":"scalafx","key":19,"id":275,"level":10,"ideas":{"1":{"title":"http://www.scalafx.org/docs/home/","key":1,"id":274,"level":0,"ideas":{}}}},"20":{"title":"Exercises and examples","key":20,"id":265,"level":11,"ideas":{"1":{"title":"https://github.com/fpinscala/fpinscala","key":1,"id":264,"level":0,"ideas":{}}}},"21":{"title":"functional programming extension","key":21,"id":260,"level":12,"ideas":{"1":{"title":"https://github.com/scalaz/scalaz","key":1,"id":259,"level":0,"ideas":{}}}},"22":{"title":"sbt","key":22,"id":303,"level":13,"ideas":{"1":{"title":"build tool","key":1,"id":305,"level":0}}}}},{"title":"Pain Point","key":4,"id":289,"level":4,"ideas":{"1":{"title":"What's the reverse arrow -> in Scala loops","content":"The left-arrow &lt;- operator is called a generator, so named because it's generating individual values from a range.<div><br></div><div><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\">Following is the example of for loop with range using i to j syntax:</span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\"><br></span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\">&lt;code&gt;object Test {</span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\">&nbsp; &nbsp;def main(args: Array[String]) {</span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\">&nbsp; &nbsp; &nbsp; var a = 0;</span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\">&nbsp; &nbsp; &nbsp; // for loop execution with a range</span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\">&nbsp; &nbsp; &nbsp; for( a &lt;- 1 to 10){</span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;println( \"Value of a: \" + a );</span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\">&nbsp; &nbsp; &nbsp; }</span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\">&nbsp; &nbsp;}</span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\">}</span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><span style=\"font-size: 15px; line-height: 24px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif;\">&lt;/code&gt;</span></p></div>","key":1,"id":290,"level":0},"2":{"title":"Blocks vs Functions","key":2,"id":302,"level":1,"ideas":{"1":{"title":"http://stackoverflow.com/questions/19007611/understanding-scala-blocks","key":1,"id":310,"level":0,"ideas":{"1":{"title":"blocks similar to anonymous classes in java","key":1,"id":311,"level":0},"2":{"title":"apply method is what's called internally","key":2,"id":314,"level":1}}}}}}}]