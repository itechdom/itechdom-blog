[{"title":"Concepts","id":50,"attr":{"style":{},"position":[136,-90,4]},"ideas":{"2":{"title":"helpers","id":55,"ideas":{"2":{"title":"block helpers","id":57,"attr":{"style":{}},"ideas":{"1":{"title":"http://handlebarsjs.com/block_helpers.html","id":56,"ideas":{},"attr":{"style":{}}}}}},"attr":{"style":{},"attachment":{"contentType":"text/html","content":"<h2 id=\"helpers\" style=\"font-size: 20px; padding: 5px; margin-top: 24px; color: rgb(88, 42, 0); border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: rgb(139, 66, 0); width: 725px; box-sizing: border-box; font-family: Helvetica, sans-serif; line-height: normal;\">Helpers</h2><div class=\"contents\" style=\"width: 725px; color: rgb(0, 0, 0); font-family: Helvetica, sans-serif; font-size: medium; line-height: normal;\"><div class=\"bullet\" style=\"width: 725px; padding: 8px 15px 25px; box-sizing: border-box; display: -webkit-box; -webkit-box-orient: vertical;\"><div class=\"description\" style=\"width: 695px; margin-right: 16px; color: rgb(63, 30, 0); line-height: 24px; margin-bottom: 8px;\">A Handlebars helper call is a simple identifier, followed by zero or more parameters (separated by space). Each parameter is a Handlebars expression.</div><pre class=\"sunburst\" style=\"border-radius: 5px; -webkit-box-flex: 1; margin-bottom: 0px; padding: 10px; font-family: Monaco, monospace; color: rgb(248, 248, 248); background-color: rgb(0, 0, 0);\"><span class=\"EmbeddedSourceBright\" style=\"background-color: rgb(41, 41, 41);\">{{{link story}}</span>}\n</pre><div class=\"notes\" style=\"font-size: 14.4px; line-height: 21.6px; margin-top: 15px; margin-bottom: 8px; padding-right: 4px; padding-left: 4px; color: rgb(88, 42, 0);\">In this case,&nbsp;<code style=\"font-family: monospace; font-size: 14.04px; padding: 0px 3px; border-color: rgba(0, 0, 0, 0.0980392); background-color: rgba(0, 0, 0, 0.0980392);\">link</code>&nbsp;is the name of a Handlebars helper, and story is a parameter to the helper. Handlebars evaluates parameters in exactly the same way described above in \"Basic Usage\".</div><pre class=\"sunburst\" style=\"border-radius: 5px; -webkit-box-flex: 1; margin-top: 10px; margin-bottom: 0px; padding: 10px; font-family: Monaco, monospace; color: rgb(248, 248, 248); background-color: rgb(0, 0, 0);\">Handlebars.registerHelper(<span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">'</span>link<span class=\"String\">'</span></span>, <span class=\"Storage\" style=\"color: rgb(153, 207, 80);\">function</span>(object) {\n  <span class=\"Storage\" style=\"color: rgb(153, 207, 80);\">var</span> url <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">=</span> Handlebars.escapeExpression(object.url),\n      text <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">=</span> Handlebars.escapeExpression(object.<span class=\"SupportConstant\" style=\"color: rgb(207, 106, 76);\">text</span>);\n\n  <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">return</span> <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">new</span> <span class=\"JEntityNameType\" style=\"text-decoration: underline;\">Handlebars.SafeString</span>(\n    <span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">\"</span>&lt;a href='<span class=\"String\">\"</span></span> <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">+</span> url <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">+</span> <span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">\"</span>'&gt;<span class=\"String\">\"</span></span> <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">+</span> text <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">+</span> <span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">\"</span>&lt;/a&gt;<span class=\"String\">\"</span></span>\n  );\n});\n</pre><div class=\"notes\" style=\"font-size: 14.4px; line-height: 21.6px; margin-top: 15px; margin-bottom: 8px; padding-right: 4px; padding-left: 4px; color: rgb(88, 42, 0);\">When returning HTML from a helper, you should return a Handlebars SafeString if you don't want it to be escaped by default. When using SafeString all unknown or unsafe data should be manually escaped with the&nbsp;<code style=\"font-family: monospace; font-size: 14.04px; padding: 0px 3px; border-color: rgba(0, 0, 0, 0.0980392); background-color: rgba(0, 0, 0, 0.0980392);\">escapeExpression</code>&nbsp;method.</div></div><div class=\"bullet\" style=\"width: 725px; padding: 15px 15px 25px; box-sizing: border-box; display: -webkit-box; -webkit-box-orient: vertical; border-top-width: 1px; border-top-style: solid; border-top-color: rgba(0, 0, 0, 0.0980392); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgba(0, 0, 0, 0.0980392); background-color: rgba(0, 0, 0, 0.0980392);\"><div class=\"description\" style=\"width: 695px; margin-right: 16px; color: rgb(63, 30, 0); line-height: 24px; margin-bottom: 8px;\">You can also pass a simple String, number, or boolean as a parameter to Handlebars helpers.</div><pre class=\"sunburst\" style=\"border-radius: 5px; -webkit-box-flex: 1; margin-bottom: 0px; padding: 10px; font-family: Monaco, monospace; color: rgb(248, 248, 248); background-color: rgb(0, 0, 0);\"><span class=\"EmbeddedSourceBright\" style=\"background-color: rgb(41, 41, 41);\">{{{link \"See more...\" story.url}}</span>}\n</pre><div class=\"notes\" style=\"font-size: 14.4px; line-height: 21.6px; margin-top: 15px; margin-bottom: 8px; padding-right: 4px; padding-left: 4px; color: rgb(88, 42, 0);\">In this case, Handlebars will pass the link helper two parameters: the String&nbsp;<code style=\"font-family: monospace; font-size: 14.04px; padding: 0px 3px; border-color: rgba(0, 0, 0, 0.0980392); background-color: rgba(0, 0, 0, 0.0980392);\">\"See more...\"</code>&nbsp;and the result of evaluating&nbsp;<code style=\"font-family: monospace; font-size: 14.04px; padding: 0px 3px; border-color: rgba(0, 0, 0, 0.0980392); background-color: rgba(0, 0, 0, 0.0980392);\">story.url</code>&nbsp;in the current context.</div><pre class=\"sunburst\" style=\"border-radius: 5px; -webkit-box-flex: 1; margin-top: 10px; margin-bottom: 0px; padding: 10px; font-family: Monaco, monospace; color: rgb(248, 248, 248); background-color: rgb(0, 0, 0);\">Handlebars.registerHelper(<span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">'</span>link<span class=\"String\">'</span></span>, <span class=\"Storage\" style=\"color: rgb(153, 207, 80);\">function</span>(text, url) {\n  url <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">=</span> Handlebars.escapeExpression(url);\n  text <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">=</span> Handlebars.escapeExpression(text);\n\n  <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">return</span> <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">new</span> <span class=\"JEntityNameType\" style=\"text-decoration: underline;\">Handlebars.SafeString</span>(\n    <span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">\"</span>&lt;a href='<span class=\"String\">\"</span></span> <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">+</span> url <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">+</span> <span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">\"</span>'&gt;<span class=\"String\">\"</span></span> <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">+</span> text <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">+</span> <span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">\"</span>&lt;/a&gt;<span class=\"String\">\"</span></span>\n  );\n});\n</pre><div class=\"notes\" style=\"font-size: 14.4px; line-height: 21.6px; margin-top: 15px; margin-bottom: 8px; padding-right: 4px; padding-left: 4px; color: rgb(88, 42, 0);\">You could use the exact same helper with dynamic text based on the value of&nbsp;<code style=\"font-family: monospace; font-size: 14.04px; padding: 0px 3px; border-color: rgba(0, 0, 0, 0.0980392); background-color: rgba(0, 0, 0, 0.0980392);\">story.text</code>:</div><pre class=\"sunburst\" style=\"border-radius: 5px; -webkit-box-flex: 1; margin-top: 10px; margin-bottom: 0px; padding: 10px; font-family: Monaco, monospace; color: rgb(248, 248, 248); background-color: rgb(0, 0, 0);\"><span class=\"EmbeddedSourceBright\" style=\"background-color: rgb(41, 41, 41);\">{{{link story.text story.url}}</span>}\n</pre></div><div class=\"bullet\" style=\"width: 725px; padding: 15px 15px 25px; box-sizing: border-box; display: -webkit-box; -webkit-box-orient: vertical;\"><div class=\"description\" style=\"width: 695px; margin-right: 16px; color: rgb(63, 30, 0); line-height: 24px; margin-bottom: 8px;\">Handlebars helpers can also receive an optional sequence of key-value pairs as their final parameter (referred to as hash arguments in the documentation):</div><pre class=\"sunburst\" style=\"border-radius: 5px; -webkit-box-flex: 1; margin-bottom: 0px; padding: 10px; font-family: Monaco, monospace; color: rgb(248, 248, 248); background-color: rgb(0, 0, 0);\"><span class=\"EmbeddedSourceBright\" style=\"background-color: rgb(41, 41, 41);\">{{{link \"See more...\" href=story.url class=\"story\"}}</span>}\n</pre><div class=\"notes\" style=\"font-size: 14.4px; line-height: 21.6px; margin-top: 15px; margin-bottom: 8px; padding-right: 4px; padding-left: 4px; color: rgb(88, 42, 0);\">The keys in hash arguments must each be simple identifiers, and the values are Handlebars expressions. This means that values can be simple identifiers, paths, or Strings.</div><pre class=\"sunburst\" style=\"border-radius: 5px; -webkit-box-flex: 1; margin-top: 10px; margin-bottom: 0px; padding: 10px; font-family: Monaco, monospace; color: rgb(248, 248, 248); background-color: rgb(0, 0, 0);\">Handlebars.registerHelper(<span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">'</span>link<span class=\"String\">'</span></span>, <span class=\"Storage\" style=\"color: rgb(153, 207, 80);\">function</span>(text, options) {\n  <span class=\"Storage\" style=\"color: rgb(153, 207, 80);\">var</span> attrs <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">=</span> [];\n\n  <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">for</span> (<span class=\"Storage\" style=\"color: rgb(153, 207, 80);\">var</span> prop <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">in</span> options.<span class=\"SupportConstant\" style=\"color: rgb(207, 106, 76);\">hash</span>) {\n    attrs.<span class=\"SupportFunction\" style=\"color: rgb(218, 208, 133);\">push</span>(\n        Handlebars.escapeExpression(prop) <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">+</span> <span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">'</span>=\"<span class=\"String\">'</span></span>\n        <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">+</span> Handlebars.escapeExpression(options.<span class=\"SupportConstant\" style=\"color: rgb(207, 106, 76);\">hash</span>[prop]) <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">+</span> <span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">'</span>\"<span class=\"String\">'</span></span>);\n  }\n\n  <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">return</span> <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">new</span> <span class=\"JEntityNameType\" style=\"text-decoration: underline;\">Handlebars.SafeString</span>(\n    <span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">\"</span>&lt;a <span class=\"String\">\"</span></span> <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">+</span> attrs.<span class=\"SupportFunction\" style=\"color: rgb(218, 208, 133);\">join</span>(<span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">\"</span> <span class=\"String\">\"</span></span>) <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">+</span> <span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">\"</span>&gt;<span class=\"String\">\"</span></span> <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">+</span> Handlebars.escapeExpression(text) <span class=\"Keyword\" style=\"color: rgb(226, 137, 100);\">+</span> <span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">\"</span>&lt;/a&gt;<span class=\"String\">\"</span></span>\n  );\n});\n</pre><div class=\"notes\" style=\"font-size: 14.4px; line-height: 21.6px; margin-top: 15px; margin-bottom: 8px; padding-right: 4px; padding-left: 4px; color: rgb(88, 42, 0);\">Handlebars provides additional metadata, such as Hash arguments, to helpers as a final parameter.</div></div><div class=\"bullet\" style=\"width: 725px; padding: 15px 15px 25px; box-sizing: border-box; display: -webkit-box; -webkit-box-orient: vertical; border-top-width: 1px; border-top-style: solid; border-top-color: rgba(0, 0, 0, 0.0980392); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgba(0, 0, 0, 0.0980392); background-color: rgba(0, 0, 0, 0.0980392);\"><div class=\"description\" style=\"width: 695px; margin-right: 16px; color: rgb(63, 30, 0); line-height: 24px; margin-bottom: 8px;\">Handlebars also offers a mechanism for invoking a helper with a block of the template. Block helpers can then invoke that block zero or more times with any context it chooses.</div><a class=\"more-info\" href=\"http://handlebarsjs.com/block_helpers.html\" style=\"color: white; padding-top: 8px; padding-bottom: 8px; display: block; margin: 10px 0px 0px 450px; text-shadow: rgba(0, 0, 0, 0.298039) 0px -1px 0px; text-align: center; border-radius: 5px; background-image: linear-gradient(rgb(243, 135, 9), rgb(194, 108, 7)); background-color: rgb(194, 108, 7);\">Learn More: Block Helpers</a></div></div>"}}},"3":{"title":"other","id":58,"attr":{"attachment":{"contentType":"text/html","content":"<h2 id=\"subexpressions\" style=\"font-size: 20px; padding: 5px; margin-top: 24px; color: rgb(88, 42, 0); border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: rgb(139, 66, 0); width: 725px; box-sizing: border-box; font-family: Helvetica, sans-serif; line-height: normal;\">Subexpressions</h2><div class=\"contents\" style=\"width: 725px; color: rgb(0, 0, 0); font-family: Helvetica, sans-serif; font-size: medium; line-height: normal;\"><div class=\"bullet\" style=\"width: 725px; padding: 8px 15px 25px; box-sizing: border-box; display: -webkit-box; -webkit-box-orient: vertical;\"><div class=\"description\" style=\"width: 695px; margin-right: 16px; color: rgb(63, 30, 0); line-height: 24px; margin-bottom: 8px;\">Handlebars offers support for subexpressions, which allows you to invoke multiple helpers within a single mustache, and pass in the results of inner helper invocations as arguments to outer helpers. Subexpressions are delimited by parentheses.</div><pre class=\"sunburst\" style=\"border-radius: 5px; -webkit-box-flex: 1; margin-bottom: 0px; padding: 10px; font-family: Monaco, monospace; color: rgb(248, 248, 248); background-color: rgb(0, 0, 0);\"><span class=\"EmbeddedSourceBright\" style=\"background-color: rgb(41, 41, 41);\">{{outer-helper (inner-helper 'abc') 'def'}}</span>\n</pre><div class=\"notes\" style=\"font-size: 14.4px; line-height: 21.6px; margin-top: 15px; margin-bottom: 8px; padding-right: 4px; padding-left: 4px; color: rgb(88, 42, 0);\">In this case,&nbsp;<code style=\"font-family: monospace; font-size: 14.04px; padding: 0px 3px; border-color: rgba(0, 0, 0, 0.0980392); background-color: rgba(0, 0, 0, 0.0980392);\">inner-helper</code>&nbsp;will get invoked with the string argument&nbsp;<code style=\"font-family: monospace; font-size: 14.04px; padding: 0px 3px; border-color: rgba(0, 0, 0, 0.0980392); background-color: rgba(0, 0, 0, 0.0980392);\">'abc'</code>, and whatever the&nbsp;<code style=\"font-family: monospace; font-size: 14.04px; padding: 0px 3px; border-color: rgba(0, 0, 0, 0.0980392); background-color: rgba(0, 0, 0, 0.0980392);\">inner-helper</code>&nbsp;function returns will get passed in as the first argument to&nbsp;<code style=\"font-family: monospace; font-size: 14.04px; padding: 0px 3px; border-color: rgba(0, 0, 0, 0.0980392); background-color: rgba(0, 0, 0, 0.0980392);\">outer-helper</code>&nbsp;(and&nbsp;<code style=\"font-family: monospace; font-size: 14.04px; padding: 0px 3px; border-color: rgba(0, 0, 0, 0.0980392); background-color: rgba(0, 0, 0, 0.0980392);\">'def'</code>&nbsp;will get passed in as the second argument to&nbsp;<code style=\"font-family: monospace; font-size: 14.04px; padding: 0px 3px; border-color: rgba(0, 0, 0, 0.0980392); background-color: rgba(0, 0, 0, 0.0980392);\">outer-helper</code>.</div></div></div><h2 id=\"whitespace-control\" style=\"font-size: 20px; padding: 5px; margin-top: 24px; color: rgb(88, 42, 0); border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: rgb(139, 66, 0); width: 725px; box-sizing: border-box; font-family: Helvetica, sans-serif; line-height: normal;\">Whitespace Control</h2><div class=\"contents\" style=\"width: 725px; color: rgb(0, 0, 0); font-family: Helvetica, sans-serif; font-size: medium; line-height: normal;\"><div class=\"bullet\" style=\"width: 725px; padding: 8px 15px 25px; box-sizing: border-box; display: -webkit-box; -webkit-box-orient: vertical;\"><div class=\"description\" style=\"width: 695px; margin-right: 16px; color: rgb(63, 30, 0); line-height: 24px; margin-bottom: 8px;\">Template whitespace may be omitted from either side of any mustache statement by adding a&nbsp;<code style=\"font-family: monospace; font-size: 15.6px; padding: 0px 3px; border-color: rgba(0, 0, 0, 0.0980392); background-color: rgba(0, 0, 0, 0.0980392);\">~</code>character by the braces. When applied all whitespace on that side will be removed up to the first handlebars expression or non-whitespace character on that side.</div><pre class=\"sunburst\" style=\"border-radius: 5px; -webkit-box-flex: 1; margin-bottom: 0px; padding: 10px; font-family: Monaco, monospace; color: rgb(248, 248, 248); background-color: rgb(0, 0, 0);\"><span class=\"EmbeddedSourceBright\" style=\"background-color: rgb(41, 41, 41);\">{{#each nav ~}}</span>\n  <span class=\"MetaTagInline\" style=\"color: rgb(224, 197, 137);\"><span class=\"MetaTagInline\">&lt;</span><span class=\"MetaTagInline\">a</span> <span class=\"MetaTagInline\">href</span>=<span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">\"</span><span class=\"StringEmbeddedSource\" style=\"color: rgb(218, 239, 163);\">{{url}}</span><span class=\"String\">\"</span></span><span class=\"MetaTagInline\">&gt;</span></span>\n    <span class=\"EmbeddedSourceBright\" style=\"background-color: rgb(41, 41, 41);\">{{~#if test}}</span>\n      <span class=\"EmbeddedSourceBright\" style=\"background-color: rgb(41, 41, 41);\">{{~title}}</span>\n    <span class=\"EmbeddedSourceBright\" style=\"background-color: rgb(41, 41, 41);\">{{~^~}}</span>\n      Empty\n    <span class=\"EmbeddedSourceBright\" style=\"background-color: rgb(41, 41, 41);\">{{~/if~}}</span>\n  <span class=\"MetaTagInline\" style=\"color: rgb(224, 197, 137);\"><span class=\"MetaTagInline\">&lt;/</span><span class=\"MetaTagInline\">a</span><span class=\"MetaTagInline\">&gt;</span></span>\n<span class=\"EmbeddedSourceBright\" style=\"background-color: rgb(41, 41, 41);\">{{~/each}}</span>\n</pre><div class=\"notes\" style=\"font-size: 14.4px; line-height: 21.6px; margin-top: 15px; margin-bottom: 8px; padding-right: 4px; padding-left: 4px; color: rgb(88, 42, 0);\">with this context:</div><pre class=\"sunburst\" style=\"border-radius: 5px; -webkit-box-flex: 1; margin-top: 10px; margin-bottom: 0px; padding: 10px; font-family: Monaco, monospace; color: rgb(248, 248, 248); background-color: rgb(0, 0, 0);\">{\n  nav: [\n    {url: <span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">'</span>foo<span class=\"String\">'</span></span>, test: <span class=\"Constant\" style=\"color: rgb(51, 135, 204);\">true</span>, title: <span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">'</span>bar<span class=\"String\">'</span></span>},\n    {url: <span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">'</span>bar<span class=\"String\">'</span></span>}\n  ]\n}\n</pre><div class=\"notes\" style=\"font-size: 14.4px; line-height: 21.6px; margin-top: 15px; margin-bottom: 8px; padding-right: 4px; padding-left: 4px; color: rgb(88, 42, 0);\">results in output sans newlines and formatting whitespace:</div><pre class=\"sunburst\" style=\"border-radius: 5px; -webkit-box-flex: 1; margin-top: 10px; margin-bottom: 0px; padding: 10px; font-family: Monaco, monospace; color: rgb(248, 248, 248); background-color: rgb(0, 0, 0);\"><span class=\"MetaTagInline\" style=\"color: rgb(224, 197, 137);\"><span class=\"MetaTagInline\">&lt;</span><span class=\"MetaTagInline\">a</span> <span class=\"MetaTagInline\">href</span>=<span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">\"</span>foo<span class=\"String\">\"</span></span><span class=\"MetaTagInline\">&gt;</span></span>bar<span class=\"MetaTagInline\" style=\"color: rgb(224, 197, 137);\"><span class=\"MetaTagInline\">&lt;/</span><span class=\"MetaTagInline\">a</span><span class=\"MetaTagInline\">&gt;</span></span><span class=\"MetaTagInline\" style=\"color: rgb(224, 197, 137);\"><span class=\"MetaTagInline\">&lt;</span><span class=\"MetaTagInline\">a</span> <span class=\"MetaTagInline\">href</span>=<span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">\"</span>bar<span class=\"String\">\"</span></span><span class=\"MetaTagInline\">&gt;</span></span>Empty<span class=\"MetaTagInline\" style=\"color: rgb(224, 197, 137);\"><span class=\"MetaTagInline\">&lt;/</span><span class=\"MetaTagInline\">a</span><span class=\"MetaTagInline\">&gt;</span></span>\n</pre><div class=\"notes\" style=\"font-size: 14.4px; line-height: 21.6px; margin-top: 15px; margin-bottom: 8px; padding-right: 4px; padding-left: 4px; color: rgb(88, 42, 0);\">This expands the default behavior of stripping lines that are \"standalone\" helpers (only a block helper, comment, or partial and whitespace).</div><pre class=\"sunburst\" style=\"border-radius: 5px; -webkit-box-flex: 1; margin-top: 10px; margin-bottom: 0px; padding: 10px; font-family: Monaco, monospace; color: rgb(248, 248, 248); background-color: rgb(0, 0, 0);\"><span class=\"EmbeddedSourceBright\" style=\"background-color: rgb(41, 41, 41);\">{{#each nav}}</span>\n  <span class=\"MetaTagInline\" style=\"color: rgb(224, 197, 137);\"><span class=\"MetaTagInline\">&lt;</span><span class=\"MetaTagInline\">a</span> <span class=\"MetaTagInline\">href</span>=<span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">\"</span><span class=\"StringEmbeddedSource\" style=\"color: rgb(218, 239, 163);\">{{url}}</span><span class=\"String\">\"</span></span><span class=\"MetaTagInline\">&gt;</span></span>\n    <span class=\"EmbeddedSourceBright\" style=\"background-color: rgb(41, 41, 41);\">{{#if test}}</span>\n      <span class=\"EmbeddedSourceBright\" style=\"background-color: rgb(41, 41, 41);\">{{title}}</span>\n    <span class=\"EmbeddedSourceBright\" style=\"background-color: rgb(41, 41, 41);\">{{^}}</span>\n      Empty\n    <span class=\"EmbeddedSourceBright\" style=\"background-color: rgb(41, 41, 41);\">{{/if}}</span>\n  <span class=\"MetaTagInline\" style=\"color: rgb(224, 197, 137);\"><span class=\"MetaTagInline\">&lt;/</span><span class=\"MetaTagInline\">a</span><span class=\"MetaTagInline\">&gt;</span></span>\n<span class=\"EmbeddedSourceBright\" style=\"background-color: rgb(41, 41, 41);\">{{~/each}}</span>\n</pre><div class=\"notes\" style=\"font-size: 14.4px; line-height: 21.6px; margin-top: 15px; margin-bottom: 8px; padding-right: 4px; padding-left: 4px; color: rgb(88, 42, 0);\">will render</div><pre class=\"sunburst\" style=\"border-radius: 5px; -webkit-box-flex: 1; margin-top: 10px; margin-bottom: 0px; padding: 10px; font-family: Monaco, monospace; color: rgb(248, 248, 248); background-color: rgb(0, 0, 0);\"><span class=\"MetaTagInline\" style=\"color: rgb(224, 197, 137);\"><span class=\"MetaTagInline\">&lt;</span><span class=\"MetaTagInline\">a</span> <span class=\"MetaTagInline\">href</span>=<span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">\"</span>foo<span class=\"String\">\"</span></span><span class=\"MetaTagInline\">&gt;</span></span>\n    bar\n<span class=\"MetaTagInline\" style=\"color: rgb(224, 197, 137);\"><span class=\"MetaTagInline\">&lt;/</span><span class=\"MetaTagInline\">a</span><span class=\"MetaTagInline\">&gt;</span></span>\n<span class=\"MetaTagInline\" style=\"color: rgb(224, 197, 137);\"><span class=\"MetaTagInline\">&lt;</span><span class=\"MetaTagInline\">a</span> <span class=\"MetaTagInline\">href</span>=<span class=\"String\" style=\"color: rgb(101, 176, 66);\"><span class=\"String\">\"</span>bar<span class=\"String\">\"</span></span><span class=\"MetaTagInline\">&gt;</span></span>\n    Empty\n<span class=\"MetaTagInline\" style=\"color: rgb(224, 197, 137);\"><span class=\"MetaTagInline\">&lt;/</span><span class=\"MetaTagInline\">a</span><span class=\"MetaTagInline\">&gt;</span></span>\n</pre></div></div><h2 id=\"escaping\" style=\"font-size: 20px; padding: 5px; margin-top: 24px; color: rgb(88, 42, 0); border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: rgb(139, 66, 0); width: 725px; box-sizing: border-box; font-family: Helvetica, sans-serif; line-height: normal;\">Escaping</h2><div class=\"contents\" style=\"width: 725px; color: rgb(0, 0, 0); font-family: Helvetica, sans-serif; font-size: medium; line-height: normal;\"><div class=\"bullet\" style=\"width: 725px; padding: 8px 15px 25px; box-sizing: border-box; display: -webkit-box; -webkit-box-orient: vertical;\"><div class=\"description\" style=\"width: 695px; margin-right: 16px; color: rgb(63, 30, 0); line-height: 24px; margin-bottom: 8px;\">Handlebars content may be escaped in one of two ways, inline escapes or raw block helpers. Inline escapes created by prefixing a mustache block with&nbsp;<code style=\"font-family: monospace; font-size: 15.6px; padding: 0px 3px; border-color: rgba(0, 0, 0, 0.0980392); background-color: rgba(0, 0, 0, 0.0980392);\">\\</code>. Raw blocks are created using&nbsp;<code style=\"font-family: monospace; font-size: 15.6px; padding: 0px 3px; border-color: rgba(0, 0, 0, 0.0980392); background-color: rgba(0, 0, 0, 0.0980392);\">{{{{</code>mustache braces.</div><pre class=\"sunburst\" style=\"border-radius: 5px; -webkit-box-flex: 1; margin-bottom: 0px; padding: 10px; font-family: Monaco, monospace; color: rgb(248, 248, 248); background-color: rgb(0, 0, 0);\">\\<span class=\"EmbeddedSourceBright\" style=\"background-color: rgb(41, 41, 41);\">{{escaped}}</span>\n<span class=\"EmbeddedSourceBright\" style=\"background-color: rgb(41, 41, 41);\">{{{{raw}}</span>}}\n  <span class=\"EmbeddedSourceBright\" style=\"background-color: rgb(41, 41, 41);\">{{escaped}}</span>\n<span class=\"EmbeddedSourceBright\" style=\"background-color: rgb(41, 41, 41);\">{{{{/raw}}</span>}}\n</pre><div class=\"notes\" style=\"font-size: 14.4px; line-height: 21.6px; margin-top: 15px; margin-bottom: 8px; padding-right: 4px; padding-left: 4px; color: rgb(88, 42, 0);\">Raw blocks operate in the same manner as other&nbsp;<a href=\"http://handlebarsjs.com/block_helpers.html\" style=\"color: rgb(102, 102, 204);\">block helpers</a>&nbsp;with the distinction of the child content is treated as a literal string.</div></div></div>"},"style":{}}}}},{"title":"Code PEN","id":37,"attr":{"position":[56.5,123,3],"style":{}},"ideas":{}},{"title":"Resources","ideas":{"1":{"title":"try handlebars online","id":51,"ideas":{"1":{"title":"http://tryhandlebarsjs.com/","id":52}}}},"id":3,"attr":{"style":{},"position":[142,-99,1]}},{"title":"Source Code","id":27,"ideas":{}}]