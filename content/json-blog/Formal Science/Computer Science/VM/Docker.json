[{"title":"Model","id":65,"attr":{"position":[50.5,-184,4],"style":{}},"ideas":{"1":{"title":"Images","id":66,"ideas":{"1":{"title":"Build a container","id":67,"ideas":{"1":{"title":"Run container","id":69},"2":{"title":"Exec a command","id":70},"3":{"title":"Link containers","id":71},"4":{"title":"Link volumes","id":72}}}}}}},{"title":"concepts","id":5,"ideas":{"1":{"title":"Container","id":6,"attr":{"attachment":{"contentType":"text/html","content":"this message appears when you run &lt;pre&gt;&lt;code&gt;docker run hello-world&lt;/code&gt;&lt;/pre&gt;<div><br></div><div><div>Hello from Docker.</div><div>This message shows that your installation appears to be working correctly.</div><div><br></div><div>To generate this message, Docker took the following steps:</div><div>&nbsp;1. The Docker client contacted the Docker daemon.</div><div>&nbsp;2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.</div><div>&nbsp;3. The Docker daemon created a new container from that image which runs the</div><div>&nbsp; &nbsp; executable that produces the output you are currently reading.</div><div>&nbsp;4. The Docker daemon streamed that output to the Docker client, which sent it</div><div>&nbsp; &nbsp; to your terminal.</div></div>"},"style":{}}},"3":{"title":"ubuntu bash example","id":8,"attr":{"attachment":{"contentType":"text/html","content":"docker run -it ubuntu bash<div><br></div><div>&nbsp; -i, --interactive=false &nbsp; &nbsp; &nbsp; &nbsp; Keep STDIN open even if not attached<br></div><div><br></div><div>&nbsp; -t, --tty=false &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Allocate a pseudo-TTY<br></div>"},"style":{}},"ideas":{"1":{"title":"https://docs.docker.com/engine/userguide/dockerizing/","id":15}}},"5":{"title":"Streaming input and outputs","id":14,"ideas":{},"attr":{"attachment":{"contentType":"text/html","content":"You can pass commands to docker containers so they can run them<div><br></div><div>docker run -d ubuntu:14.04 /bin/sh -c \"while true; do echo hello world; sleep 1; done\"<br></div>"},"style":{}}},"6":{"title":"Daemon","id":16,"attr":{"attachment":{"contentType":"text/html","content":"<h2 id=\"a-daemonized-hello-world\" style=\"margin-top: 0.2rem; margin-bottom: 0.5rem; font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.4; color: rgb(2, 150, 201); font-size: 2.3125rem; box-sizing: inherit; padding: 0px; letter-spacing: 1px;\">A daemonized Hello world</h2><h2 id=\"a-daemonized-hello-world\" style=\"box-sizing: inherit; margin-top: 0.2rem; margin-bottom: 0.5rem; padding: 0px; color: rgb(2, 150, 201); font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.4; font-size: 2.3125rem; letter-spacing: 1px;\"><p style=\"margin-bottom: 1.25rem; box-sizing: inherit; padding: 0px; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; color: rgb(5, 14, 26);\">Now a container that runs a command and then exits has some uses but it’s not overly helpful. Let’s create a container that runs as a daemon, like most of the applications we’re probably going to run with Docker.</p><p style=\"margin-bottom: 1.25rem; box-sizing: inherit; padding: 0px; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; color: rgb(5, 14, 26);\">Again we can do this with the&nbsp;<code style=\"padding: 0.125rem 0.3125rem 0.0625rem; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border-color: rgb(255, 203, 148); box-sizing: inherit; background-color: rgb(248, 248, 248);\">docker run</code>&nbsp;command:</p><pre style=\"padding: 0px; color: rgb(5, 14, 26); margin-bottom: 1.5rem; letter-spacing: normal; box-sizing: inherit; background-color: rgb(255, 255, 255);\"><code class=\"hljs dns\" style=\"padding: 0.5em; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border: 1px solid rgb(255, 203, 148); box-sizing: inherit; display: block; overflow-x: auto; background: rgb(248, 248, 248);\">$ docker run -d ubuntu:14.04 /bin/sh -c \"while true<span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(153, 153, 136); font-style: italic;\">; do echo hello world; sleep 1; done\"</span>\n<span class=\"hljs-number\" style=\"box-sizing: inherit; color: rgb(0, 128, 128);\">1e5535038</span>e<span class=\"hljs-number\" style=\"box-sizing: inherit; color: rgb(0, 128, 128);\">285177d52146</span><span class=\"hljs-number\" style=\"box-sizing: inherit; color: rgb(0, 128, 128);\">59a068137486</span>f96ee<span class=\"hljs-number\" style=\"box-sizing: inherit; color: rgb(0, 128, 128);\">5c2e85a4</span>ac52dc83f2ebe4147\n</code></pre><p style=\"margin-bottom: 1.25rem; box-sizing: inherit; padding: 0px; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; color: rgb(5, 14, 26);\">Wait, what? Where’s our “hello world” output? Let’s look at what we’ve run here. It should look pretty familiar. We ran&nbsp;<code style=\"padding: 0.125rem 0.3125rem 0.0625rem; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border-color: rgb(255, 203, 148); box-sizing: inherit; background-color: rgb(248, 248, 248);\">docker run</code>&nbsp;but this time we specified a flag:&nbsp;<code style=\"padding: 0.125rem 0.3125rem 0.0625rem; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border-color: rgb(255, 203, 148); box-sizing: inherit; background-color: rgb(248, 248, 248);\">-d</code>. The&nbsp;<code style=\"padding: 0.125rem 0.3125rem 0.0625rem; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border-color: rgb(255, 203, 148); box-sizing: inherit; background-color: rgb(248, 248, 248);\">-d</code>&nbsp;flag tells Docker to run the container and put it in the background, to daemonize it.</p><p style=\"margin-bottom: 1.25rem; box-sizing: inherit; padding: 0px; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; color: rgb(5, 14, 26);\">We also specified the same image:&nbsp;<code style=\"padding: 0.125rem 0.3125rem 0.0625rem; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border-color: rgb(255, 203, 148); box-sizing: inherit; background-color: rgb(248, 248, 248);\">ubuntu:14.04</code>.</p><p style=\"margin-bottom: 1.25rem; box-sizing: inherit; padding: 0px; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; color: rgb(5, 14, 26);\">Finally, we specified a command to run:</p><pre style=\"padding: 0px; color: rgb(5, 14, 26); margin-bottom: 1.5rem; letter-spacing: normal; box-sizing: inherit; background-color: rgb(255, 255, 255);\"><code class=\"hljs vim\" style=\"padding: 0.5em; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border: 1px solid rgb(255, 203, 148); box-sizing: inherit; display: block; overflow-x: auto; background: rgb(248, 248, 248);\">/bin/<span class=\"hljs-keyword\" style=\"box-sizing: inherit; font-weight: bold;\">sh</span> -<span class=\"hljs-keyword\" style=\"box-sizing: inherit; font-weight: bold;\">c</span> <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(221, 17, 68);\">\"while true; do echo hello world; sleep 1; done\"</span>\n</code></pre><p style=\"margin-bottom: 1.25rem; box-sizing: inherit; padding: 0px; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; color: rgb(5, 14, 26);\">This is the (hello) world’s silliest daemon: a shell script that echoes&nbsp;<code style=\"padding: 0.125rem 0.3125rem 0.0625rem; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border-color: rgb(255, 203, 148); box-sizing: inherit; background-color: rgb(248, 248, 248);\">hello world</code>forever.</p><p style=\"margin-bottom: 1.25rem; box-sizing: inherit; padding: 0px; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; color: rgb(5, 14, 26);\">So why aren’t we seeing any&nbsp;<code style=\"padding: 0.125rem 0.3125rem 0.0625rem; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border-color: rgb(255, 203, 148); box-sizing: inherit; background-color: rgb(248, 248, 248);\">hello world</code>’s? Instead Docker has returned a really long string:</p><pre style=\"padding: 0px; color: rgb(5, 14, 26); margin-bottom: 1.5rem; letter-spacing: normal; box-sizing: inherit; background-color: rgb(255, 255, 255);\"><code class=\"hljs dns\" style=\"padding: 0.5em; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border: 1px solid rgb(255, 203, 148); box-sizing: inherit; display: block; overflow-x: auto; background: rgb(248, 248, 248);\"><span class=\"hljs-number\" style=\"box-sizing: inherit; color: rgb(0, 128, 128);\">1e5535038</span>e<span class=\"hljs-number\" style=\"box-sizing: inherit; color: rgb(0, 128, 128);\">285177d52146</span><span class=\"hljs-number\" style=\"box-sizing: inherit; color: rgb(0, 128, 128);\">59a068137486</span>f96ee<span class=\"hljs-number\" style=\"box-sizing: inherit; color: rgb(0, 128, 128);\">5c2e85a4</span>ac52dc83f2ebe4147\n</code></pre><p style=\"margin-bottom: 1.25rem; box-sizing: inherit; padding: 0px; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; color: rgb(5, 14, 26);\">This really long string is called a&nbsp;<em style=\"box-sizing: inherit; line-height: inherit;\">container ID</em>. It uniquely identifies a container so we can work with it.</p><blockquote style=\"padding-top: 0.5625rem; padding-right: 1.25rem; padding-left: 1.1875rem; margin-bottom: 1.25rem; border-left-width: 0px; border-left-color: black; letter-spacing: normal; box-sizing: inherit; line-height: 1.6; font-size: 16px;\"><p style=\"margin-bottom: 1.25rem; font-size: 1rem; line-height: 1.6; box-sizing: inherit; padding: 0px; font-family: inherit; text-rendering: optimizeLegibility; letter-spacing: 1px;\"><strong style=\"box-sizing: inherit; line-height: inherit;\">Note:</strong>&nbsp;The container ID is a bit long and unwieldy. A bit later, we’ll see a shorter ID and ways to name our containers to make working with them easier.</p></blockquote><p style=\"margin-bottom: 1.25rem; box-sizing: inherit; padding: 0px; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; color: rgb(5, 14, 26);\">We can use this container ID to see what’s happening with our&nbsp;<code style=\"padding: 0.125rem 0.3125rem 0.0625rem; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border-color: rgb(255, 203, 148); box-sizing: inherit; background-color: rgb(248, 248, 248);\">hello world</code>daemon.</p><p style=\"margin-bottom: 1.25rem; box-sizing: inherit; padding: 0px; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; color: rgb(5, 14, 26);\">Firstly let’s make sure our container is running. We can do that with the&nbsp;<code style=\"padding: 0.125rem 0.3125rem 0.0625rem; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border-color: rgb(255, 203, 148); box-sizing: inherit; background-color: rgb(248, 248, 248);\">docker ps</code>command. The&nbsp;<code style=\"padding: 0.125rem 0.3125rem 0.0625rem; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border-color: rgb(255, 203, 148); box-sizing: inherit; background-color: rgb(248, 248, 248);\">docker ps</code>&nbsp;command queries the Docker daemon for information about all the containers it knows about.</p><pre style=\"padding: 0px; color: rgb(5, 14, 26); margin-bottom: 1.5rem; letter-spacing: normal; box-sizing: inherit; background-color: rgb(255, 255, 255);\"><code class=\"hljs swift\" style=\"padding: 0.5em; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border: 1px solid rgb(255, 203, 148); box-sizing: inherit; display: block; overflow-x: auto; background: rgb(248, 248, 248);\">$ docker ps\n<span class=\"hljs-type\" style=\"box-sizing: inherit; color: rgb(68, 85, 136); font-weight: bold;\">CONTAINER</span> <span class=\"hljs-type\" style=\"box-sizing: inherit; color: rgb(68, 85, 136); font-weight: bold;\">ID</span>  <span class=\"hljs-type\" style=\"box-sizing: inherit; color: rgb(68, 85, 136); font-weight: bold;\">IMAGE</span>         <span class=\"hljs-type\" style=\"box-sizing: inherit; color: rgb(68, 85, 136); font-weight: bold;\">COMMAND</span>               <span class=\"hljs-type\" style=\"box-sizing: inherit; color: rgb(68, 85, 136); font-weight: bold;\">CREATED</span>        <span class=\"hljs-type\" style=\"box-sizing: inherit; color: rgb(68, 85, 136); font-weight: bold;\">STATUS</span>       <span class=\"hljs-type\" style=\"box-sizing: inherit; color: rgb(68, 85, 136); font-weight: bold;\">PORTS</span> <span class=\"hljs-type\" style=\"box-sizing: inherit; color: rgb(68, 85, 136); font-weight: bold;\">NAMES</span>\n1e5535038e28  ubuntu:<span class=\"hljs-number\" style=\"box-sizing: inherit; color: rgb(0, 128, 128);\">14.04</span>  /bin/sh -<span class=\"hljs-built_in\" style=\"box-sizing: inherit; color: rgb(0, 134, 179);\">c</span> '<span class=\"hljs-keyword\" style=\"box-sizing: inherit; font-weight: bold;\">while</span> tr  <span class=\"hljs-number\" style=\"box-sizing: inherit; color: rgb(0, 128, 128);\">2</span> minutes ago  <span class=\"hljs-type\" style=\"box-sizing: inherit; color: rgb(68, 85, 136); font-weight: bold;\">Up</span> <span class=\"hljs-number\" style=\"box-sizing: inherit; color: rgb(0, 128, 128);\">1</span> minute        insane_babbage\n</code></pre><p style=\"margin-bottom: 1.25rem; box-sizing: inherit; padding: 0px; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; color: rgb(5, 14, 26);\">Here we can see our daemonized container. The&nbsp;<code style=\"padding: 0.125rem 0.3125rem 0.0625rem; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border-color: rgb(255, 203, 148); box-sizing: inherit; background-color: rgb(248, 248, 248);\">docker ps</code>&nbsp;has returned some useful information about it, starting with a shorter variant of its container ID:<code style=\"padding: 0.125rem 0.3125rem 0.0625rem; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border-color: rgb(255, 203, 148); box-sizing: inherit; background-color: rgb(248, 248, 248);\">1e5535038e28</code>.</p><p style=\"margin-bottom: 1.25rem; box-sizing: inherit; padding: 0px; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; color: rgb(5, 14, 26);\">We can also see the image we used to build it,&nbsp;<code style=\"padding: 0.125rem 0.3125rem 0.0625rem; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border-color: rgb(255, 203, 148); box-sizing: inherit; background-color: rgb(248, 248, 248);\">ubuntu:14.04</code>, the command it is running, its status and an automatically assigned name,&nbsp;<code style=\"padding: 0.125rem 0.3125rem 0.0625rem; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border-color: rgb(255, 203, 148); box-sizing: inherit; background-color: rgb(248, 248, 248);\">insane_babbage</code>.</p><blockquote style=\"padding-top: 0.5625rem; padding-right: 1.25rem; padding-left: 1.1875rem; margin-bottom: 1.25rem; border-left-width: 0px; border-left-color: black; letter-spacing: normal; box-sizing: inherit; line-height: 1.6; font-size: 16px;\"><p style=\"margin-bottom: 1.25rem; font-size: 1rem; line-height: 1.6; box-sizing: inherit; padding: 0px; font-family: inherit; text-rendering: optimizeLegibility; letter-spacing: 1px;\"><strong style=\"box-sizing: inherit; line-height: inherit;\">Note:</strong>&nbsp;Docker automatically generates names for any containers started. We’ll see how to specify your own names a bit later.</p></blockquote><p style=\"margin-bottom: 1.25rem; box-sizing: inherit; padding: 0px; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; color: rgb(5, 14, 26);\">Okay, so we now know it’s running. But is it doing what we asked it to do? To see this we’re going to look inside the container using the&nbsp;<code style=\"padding: 0.125rem 0.3125rem 0.0625rem; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border-color: rgb(255, 203, 148); box-sizing: inherit; background-color: rgb(248, 248, 248);\">docker logs</code>&nbsp;command. Let’s use the container name Docker assigned.</p><pre style=\"padding: 0px; color: rgb(5, 14, 26); margin-bottom: 1.5rem; letter-spacing: normal; box-sizing: inherit; background-color: rgb(255, 255, 255);\"><code class=\"hljs elixir\" style=\"padding: 0.5em; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border: 1px solid rgb(255, 203, 148); box-sizing: inherit; display: block; overflow-x: auto; background: rgb(248, 248, 248);\"><span class=\"hljs-variable\" style=\"box-sizing: inherit; color: rgb(0, 128, 128);\">$ </span>docker logs insane_babbage\nhello world\nhello world\nhello world\n. . .\n</code></pre><p style=\"margin-bottom: 1.25rem; box-sizing: inherit; padding: 0px; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; color: rgb(5, 14, 26);\">The&nbsp;<code style=\"padding: 0.125rem 0.3125rem 0.0625rem; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border-color: rgb(255, 203, 148); box-sizing: inherit; background-color: rgb(248, 248, 248);\">docker logs</code>&nbsp;command looks inside the container and returns its standard output: in this case the output of our command&nbsp;<code style=\"padding: 0.125rem 0.3125rem 0.0625rem; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border-color: rgb(255, 203, 148); box-sizing: inherit; background-color: rgb(248, 248, 248);\">hello world</code>.</p><p style=\"margin-bottom: 1.25rem; box-sizing: inherit; padding: 0px; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; color: rgb(5, 14, 26);\">Awesome! Our daemon is working and we’ve just created our first Dockerized application!</p><p style=\"margin-bottom: 1.25rem; box-sizing: inherit; padding: 0px; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; color: rgb(5, 14, 26);\">Now we’ve established we can create our own containers let’s tidy up after ourselves and stop our detached container. To do this we use the&nbsp;<code style=\"padding: 0.125rem 0.3125rem 0.0625rem; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border-color: rgb(255, 203, 148); box-sizing: inherit; background-color: rgb(248, 248, 248);\">docker stop</code>&nbsp;command.</p><pre style=\"padding: 0px; color: rgb(5, 14, 26); margin-bottom: 1.5rem; letter-spacing: normal; box-sizing: inherit; background-color: rgb(255, 255, 255);\"><code class=\"hljs vbnet\" style=\"padding: 0.5em; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border: 1px solid rgb(255, 203, 148); box-sizing: inherit; display: block; overflow-x: auto; background: rgb(248, 248, 248);\">$ docker <span class=\"hljs-keyword\" style=\"box-sizing: inherit; font-weight: bold;\">stop</span> insane_babbage\ninsane_babbage\n</code></pre><p style=\"margin-bottom: 1.25rem; box-sizing: inherit; padding: 0px; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; color: rgb(5, 14, 26);\">The&nbsp;<code style=\"padding: 0.125rem 0.3125rem 0.0625rem; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border-color: rgb(255, 203, 148); box-sizing: inherit; background-color: rgb(248, 248, 248);\">docker stop</code>&nbsp;command tells Docker to politely stop the running container. If it succeeds it will return the name of the container it has just stopped.</p><p style=\"margin-bottom: 1.25rem; box-sizing: inherit; padding: 0px; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; color: rgb(5, 14, 26);\">Let’s check it worked with the&nbsp;<code style=\"padding: 0.125rem 0.3125rem 0.0625rem; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border-color: rgb(255, 203, 148); box-sizing: inherit; background-color: rgb(248, 248, 248);\">docker ps</code>&nbsp;command.</p><pre style=\"padding: 0px; color: rgb(5, 14, 26); margin-bottom: 1.5rem; letter-spacing: normal; box-sizing: inherit; background-color: rgb(255, 255, 255);\"><code class=\"hljs vim\" style=\"padding: 0.5em; font-family: Consolas, 'Liberation Mono', Courier, monospace; color: rgb(51, 51, 51); border: 1px solid rgb(255, 203, 148); box-sizing: inherit; display: block; overflow-x: auto; background: rgb(248, 248, 248);\">$ docker <span class=\"hljs-keyword\" style=\"box-sizing: inherit; font-weight: bold;\">ps</span>\nCONTAINER ID  IMAGE         COMMAND               CREATED        STATUS       PORTS NAMES\n</code></pre><p style=\"margin-bottom: 1.25rem; box-sizing: inherit; padding: 0px; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; color: rgb(5, 14, 26);\">Excellent. Our container has been stopped.</p></h2>"},"style":{},"collapsed":true},"ideas":{"1":{"title":"if we want the container to run forever","id":31}}},"7":{"title":"Docker-compose","id":22,"ideas":{"1":{"title":"https://docs.docker.com/compose/","id":23}},"attr":{"style":{},"collapsed":true}},"8":{"title":"Examples of dockerized apps","id":24,"ideas":{"1":{"title":"https://docs.docker.com/engine/examples/mongodb/","id":25}},"attr":{"style":{},"collapsed":true}},"9":{"title":"How to Dockerize an app","id":32,"ideas":{"1":{"title":"Examine a docker build for errors","id":80,"ideas":{"1":{"title":"http://stackoverflow.com/questions/26220957/how-can-i-inspect-the-file-system-of-a-failed-docker-build","id":81}}}},"attr":{"collapsed":true,"style":{}}},"10":{"title":"Volumes and Data in docker contaienrs","id":73,"ideas":{"1":{"title":"https://docs.docker.com/v1.8/userguide/dockervolumes/","id":74},"2":{"title":"data volumes","id":75,"ideas":{"1":{"title":"Containers designated as containers","id":76,"ideas":{},"attr":{"attachment":{"contentType":"text/html","content":"<h3 id=\"adding-a-data-volume\" style=\"box-sizing: inherit; margin-top: 0.2rem; margin-bottom: 0.5rem; padding: 0px; color: rgb(2, 150, 201); font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.4; font-size: 1.6875rem; letter-spacing: 1px;\">Adding a data volume</h3><p style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding: 0px; font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; letter-spacing: 1px; color: rgb(5, 14, 26);\">You can add a data volume to a container using the&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">-v</code>&nbsp;flag with the&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">docker create</code>&nbsp;and&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">docker run</code>&nbsp;command. You can use the&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">-v</code>&nbsp;multiple times to mount multiple data volumes. Let’s mount a single volume now in our web application container.</p><pre style=\"box-sizing: inherit; margin-bottom: 1.5rem; padding: 0px; color: rgb(5, 14, 26); background-color: rgb(255, 255, 255);\"><code class=\"hljs stata\" style=\"box-sizing: inherit; border: 1px solid rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.5em; display: block; overflow-x: auto; background: rgb(248, 248, 248);\">$ docker <span class=\"hljs-keyword\" style=\"box-sizing: inherit; font-weight: bold;\">run</span> -<span class=\"hljs-keyword\" style=\"box-sizing: inherit; font-weight: bold;\">d</span> -P --name web -v /webapp training/webapp python <span class=\"hljs-keyword\" style=\"box-sizing: inherit; font-weight: bold;\">app</span>.py\n</code></pre><p style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding: 0px; font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; letter-spacing: 1px; color: rgb(5, 14, 26);\">This will create a new volume inside a container at&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">/webapp</code>.</p><blockquote style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding-top: 0.5625rem; padding-right: 1.25rem; padding-left: 1.1875rem; border-left-width: 0px; border-left-color: black; line-height: 1.6; color: rgb(2, 150, 201); font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-size: 16px;\"><p style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding: 0px; font-family: inherit; font-size: 1rem; line-height: 1.6; text-rendering: optimizeLegibility; letter-spacing: 1px;\"><strong style=\"box-sizing: inherit; line-height: inherit;\">Note:</strong>&nbsp;You can also use the&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">VOLUME</code>&nbsp;instruction in a&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">Dockerfile</code>&nbsp;to add one or more new volumes to any container created from that image.</p></blockquote><p style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding: 0px; font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; letter-spacing: 1px; color: rgb(5, 14, 26);\">Docker volumes default to mount in read-write mode, but you can also set it to be mounted read-only.</p><pre style=\"box-sizing: inherit; margin-bottom: 1.5rem; padding: 0px; color: rgb(5, 14, 26); background-color: rgb(255, 255, 255);\"><code class=\"hljs stata\" style=\"box-sizing: inherit; border: 1px solid rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.5em; display: block; overflow-x: auto; background: rgb(248, 248, 248);\">$ docker <span class=\"hljs-keyword\" style=\"box-sizing: inherit; font-weight: bold;\">run</span> -<span class=\"hljs-keyword\" style=\"box-sizing: inherit; font-weight: bold;\">d</span> -P --name web -v /opt/webapp:ro training/webapp python <span class=\"hljs-keyword\" style=\"box-sizing: inherit; font-weight: bold;\">app</span>.py\n</code></pre><h3 id=\"locating-a-volume\" style=\"box-sizing: inherit; margin-top: 0.2rem; margin-bottom: 0.5rem; padding: 0px; color: rgb(2, 150, 201); font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.4; font-size: 1.6875rem; letter-spacing: 1px;\">Locating a volume</h3><p style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding: 0px; font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; letter-spacing: 1px; color: rgb(5, 14, 26);\">You can locate the volume on the host by utilizing the ‘docker inspect’ command.</p><pre style=\"box-sizing: inherit; margin-bottom: 1.5rem; padding: 0px; color: rgb(5, 14, 26); background-color: rgb(255, 255, 255);\"><code class=\"hljs elixir\" style=\"box-sizing: inherit; border: 1px solid rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.5em; display: block; overflow-x: auto; background: rgb(248, 248, 248);\"><span class=\"hljs-variable\" style=\"box-sizing: inherit; color: rgb(0, 128, 128);\">$ </span>docker inspect web\n</code></pre><p style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding: 0px; font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; letter-spacing: 1px; color: rgb(5, 14, 26);\">The output will provide details on the container configurations including the volumes. The output should look something similar to the following:</p><pre style=\"box-sizing: inherit; margin-bottom: 1.5rem; padding: 0px; color: rgb(5, 14, 26); background-color: rgb(255, 255, 255);\"><code class=\"hljs lasso\" style=\"box-sizing: inherit; border: 1px solid rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.5em; display: block; overflow-x: auto; background: rgb(248, 248, 248);\"><span class=\"hljs-attribute\" style=\"box-sizing: inherit; color: rgb(0, 128, 128);\">...</span>\nMounts<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(221, 17, 68);\">\": [\n    {\n        \"</span>Name<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(221, 17, 68);\">\": \"</span>fac362<span class=\"hljs-attribute\" style=\"box-sizing: inherit; color: rgb(0, 128, 128);\">...</span><span class=\"hljs-number\" style=\"box-sizing: inherit; color: rgb(0, 128, 128);\">80535</span><span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(221, 17, 68);\">\",\n        \"</span>Source<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(221, 17, 68);\">\": \"</span>/<span class=\"hljs-built_in\" style=\"box-sizing: inherit; color: rgb(0, 134, 179);\">var</span>/lib/docker/volumes/fac362<span class=\"hljs-attribute\" style=\"box-sizing: inherit; color: rgb(0, 128, 128);\">...</span><span class=\"hljs-number\" style=\"box-sizing: inherit; color: rgb(0, 128, 128);\">80535</span>/_data<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(221, 17, 68);\">\",\n        \"</span>Destination<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(221, 17, 68);\">\": \"</span>/webapp<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(221, 17, 68);\">\",\n        \"</span>Driver<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(221, 17, 68);\">\": \"</span><span class=\"hljs-built_in\" style=\"box-sizing: inherit; color: rgb(0, 134, 179);\">local</span><span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(221, 17, 68);\">\",\n        \"</span>Mode<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(221, 17, 68);\">\": \"</span><span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(221, 17, 68);\">\",\n        \"</span>RW<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(221, 17, 68);\">\": true\n    }\n]\n...\n</span></code></pre><p style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding: 0px; font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; letter-spacing: 1px; color: rgb(5, 14, 26);\">You will notice in the above ‘Source’ is specifying the location on the host and ‘Destination’ is specifying the volume location inside the container.&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">RW</code>&nbsp;shows if the volume is read/write.</p>"},"style":{}}}}},"3":{"title":"mounting host directory","id":78,"attr":{"attachment":{"contentType":"text/html","content":"<h3 id=\"mount-a-host-directory-as-a-data-volume\" style=\"box-sizing: inherit; margin-top: 0.2rem; margin-bottom: 0.5rem; padding: 0px; color: rgb(2, 150, 201); font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.4; font-size: 1.6875rem; letter-spacing: 1px;\">Mount a host directory as a data volume</h3><p style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding: 0px; font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; letter-spacing: 1px; color: rgb(5, 14, 26);\">In addition to creating a volume using the&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">-v</code>&nbsp;flag you can also mount a directory from your Docker daemon’s host into a container.</p><blockquote style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding-top: 0.5625rem; padding-right: 1.25rem; padding-left: 1.1875rem; border-left-width: 0px; border-left-color: black; line-height: 1.6; color: rgb(2, 150, 201); font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-size: 16px;\"><p style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding: 0px; font-family: inherit; font-size: 1rem; line-height: 1.6; text-rendering: optimizeLegibility; letter-spacing: 1px;\"><strong style=\"box-sizing: inherit; line-height: inherit;\">Note</strong>: If you are using Docker Machine on Mac or Windows, your Docker daemon only has limited access to your OS X/Windows filesystem. Docker Machine tries to auto-share your&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">/Users</code>&nbsp;(OS X) or&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">C:\\Users</code>(Windows) directory - and so you can mount files or directories using<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">docker run -v /Users/&lt;path&gt;:/&lt;container path&gt; ...</code>&nbsp;(OS X) or&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">docker run -v /c/Users/&lt;path&gt;:/&lt;container path ...</code>(Windows). All other paths come from your virtual machine’s filesystem.</p></blockquote><pre style=\"box-sizing: inherit; margin-bottom: 1.5rem; padding: 0px; color: rgb(5, 14, 26); background-color: rgb(255, 255, 255);\"><code class=\"hljs groovy\" style=\"box-sizing: inherit; border: 1px solid rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.5em; display: block; overflow-x: auto; background: rgb(248, 248, 248);\">$ docker run -d -P --name web -v <span class=\"hljs-regexp\" style=\"box-sizing: inherit; color: rgb(0, 153, 38);\">/src/</span><span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(221, 17, 68);\">webapp:</span><span class=\"hljs-regexp\" style=\"box-sizing: inherit; color: rgb(0, 153, 38);\">/opt/</span>webapp training/webapp python app.py\n</code></pre><p style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding: 0px; font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; letter-spacing: 1px; color: rgb(5, 14, 26);\">This will mount the host directory,&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">/src/webapp</code>, into the container at<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">/opt/webapp</code>.</p><blockquote style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding-top: 0.5625rem; padding-right: 1.25rem; padding-left: 1.1875rem; border-left-width: 0px; border-left-color: black; line-height: 1.6; color: rgb(2, 150, 201); font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-size: 16px;\"><p style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding: 0px; font-family: inherit; font-size: 1rem; line-height: 1.6; text-rendering: optimizeLegibility; letter-spacing: 1px;\"><strong style=\"box-sizing: inherit; line-height: inherit;\">Note:</strong>&nbsp;If the path&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">/opt/webapp</code>&nbsp;already exists inside the container’s image, its contents will be replaced by the contents of&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">/src/webapp</code>&nbsp;on the host to stay consistent with the expected behavior of&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">mount</code></p><p style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding: 0px; font-family: inherit; font-size: 1rem; line-height: 1.6; text-rendering: optimizeLegibility; letter-spacing: 1px;\">When using Boot2Docker on Windows through git bash, there might be an issue with the way the source directory name is parsed. You can fix it by using a double slash at the beginning of the source directory name as explained in&nbsp;<a href=\"https://github.com/docker/docker/issues/12751\" style=\"box-sizing: inherit; color: rgb(236, 121, 0); line-height: inherit; font-variant-ligatures: common-ligatures;\" target=\"_blank\">issue #12751</a></p></blockquote><p style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding: 0px; font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; letter-spacing: 1px; color: rgb(5, 14, 26);\">This is very useful for testing, for example we can mount our source code inside the container and see our application at work as we change the source code. The directory on the host must be specified as an absolute path and if the directory doesn’t exist Docker will automatically create it for you.</p><blockquote style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding-top: 0.5625rem; padding-right: 1.25rem; padding-left: 1.1875rem; border-left-width: 0px; border-left-color: black; line-height: 1.6; color: rgb(2, 150, 201); font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-size: 16px;\"><p style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding: 0px; font-family: inherit; font-size: 1rem; line-height: 1.6; text-rendering: optimizeLegibility; letter-spacing: 1px;\"><strong style=\"box-sizing: inherit; line-height: inherit;\">Note:</strong>&nbsp;This is not available from a&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">Dockerfile</code>&nbsp;due to the portability and sharing purpose of built images. The host directory is, by its nature, host-dependent, so a host directory specified in a&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">Dockerfile</code>&nbsp;probably wouldn’t work on all hosts.</p></blockquote><p style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding: 0px; font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; letter-spacing: 1px; color: rgb(5, 14, 26);\">Docker volumes default to mount in read-write mode, but you can also set it to be mounted read-only.</p><pre style=\"box-sizing: inherit; margin-bottom: 1.5rem; padding: 0px; color: rgb(5, 14, 26); background-color: rgb(255, 255, 255);\"><code class=\"hljs groovy\" style=\"box-sizing: inherit; border: 1px solid rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.5em; display: block; overflow-x: auto; background: rgb(248, 248, 248);\">$ docker run -d -P --name web -v <span class=\"hljs-regexp\" style=\"box-sizing: inherit; color: rgb(0, 153, 38);\">/src/</span><span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(221, 17, 68);\">webapp:</span><span class=\"hljs-regexp\" style=\"box-sizing: inherit; color: rgb(0, 153, 38);\">/opt/</span><span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(221, 17, 68);\">webapp:</span>ro training/webapp python app.py\n</code></pre><p style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding: 0px; font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; letter-spacing: 1px; color: rgb(5, 14, 26);\">Here we’ve mounted the same&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">/src/webapp</code>&nbsp;directory but we’ve added the<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">ro</code>&nbsp;option to specify that the mount should be read-only.</p><h3 id=\"mount-a-host-file-as-a-data-volume\" style=\"box-sizing: inherit; margin-top: 0.2rem; margin-bottom: 0.5rem; padding: 0px; color: rgb(2, 150, 201); font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.4; font-size: 1.6875rem; letter-spacing: 1px;\">Mount a host file as a data volume</h3><p style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding: 0px; font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; letter-spacing: 1px; color: rgb(5, 14, 26);\">The&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">-v</code>&nbsp;flag can also be used to mount a single file - instead of&nbsp;<em style=\"box-sizing: inherit; line-height: inherit;\">just</em>&nbsp;directories - from the host machine.</p><pre style=\"box-sizing: inherit; margin-bottom: 1.5rem; padding: 0px; color: rgb(5, 14, 26); background-color: rgb(255, 255, 255);\"><code class=\"hljs stylus\" style=\"box-sizing: inherit; border: 1px solid rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.5em; display: block; overflow-x: auto; background: rgb(248, 248, 248);\">$ docker run --rm -it -v ~/<span class=\"hljs-class\" style=\"box-sizing: inherit;\">.bash_history</span>:/<span class=\"hljs-class\" style=\"box-sizing: inherit;\">.bash_history</span> ubuntu /bin/bash\n</code></pre><p style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding: 0px; font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-size: 16px; line-height: 1.6; text-rendering: optimizeLegibility; letter-spacing: 1px; color: rgb(5, 14, 26);\">This will drop you into a bash shell in a new container, you will have your bash history from the host and when you exit the container, the host will have the history of the commands typed while in the container.</p><blockquote style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding-top: 0.5625rem; padding-right: 1.25rem; padding-left: 1.1875rem; border-left-width: 0px; border-left-color: black; line-height: 1.6; color: rgb(2, 150, 201); font-family: 'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif; font-size: 16px;\"><p style=\"box-sizing: inherit; margin-bottom: 1.25rem; padding: 0px; font-family: inherit; font-size: 1rem; line-height: 1.6; text-rendering: optimizeLegibility; letter-spacing: 1px;\"><strong style=\"box-sizing: inherit; line-height: inherit;\">Note:</strong>&nbsp;Many tools used to edit files including&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">vi</code>&nbsp;and&nbsp;<code style=\"box-sizing: inherit; border-color: rgb(255, 203, 148); color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Courier, monospace; padding: 0.125rem 0.3125rem 0.0625rem; background-color: rgb(248, 248, 248);\">sed --in-place</code>may result in an inode change. Since Docker v1.1.0, this will produce an error such as “<em style=\"box-sizing: inherit; line-height: inherit;\">sed: cannot rename ./sedKdJ9Dy: Device or resource busy</em>”. In the case where you want to edit the mounted file, it is often easiest to instead mount the parent directory.</p><div><br></div></blockquote>"},"style":{},"collapsed":true},"ideas":{"1":{"title":"$ docker run -d -P --name web -v \n/src/\nwebapp:\n/opt/\nwebapp training/webapp python app.py","id":79}}}},"attr":{"collapsed":true,"style":{}}},"11":{"title":"dealing with apt-get in docker files","id":82,"ideas":{"1":{"title":"https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/","id":83}}},"2.5":{"title":"docker machine","id":11,"attr":{"style":{},"attachment":{"contentType":"text/html","content":"<b style=\"color: rgb(34, 34, 34); font-family: arial, sans-serif; font-size: 16px; line-height: 19.2px;\">Machine</b><span style=\"color: rgb(34, 34, 34); font-family: arial, sans-serif; font-size: 16px; line-height: 19.2px;\">&nbsp;lets you create&nbsp;</span><b style=\"color: rgb(34, 34, 34); font-family: arial, sans-serif; font-size: 16px; line-height: 19.2px;\">Docker</b><span style=\"color: rgb(34, 34, 34); font-family: arial, sans-serif; font-size: 16px; line-height: 19.2px;\">&nbsp;hosts on your computer, on cloud providers, and inside your own data center. It automatically creates hosts, installs&nbsp;</span><b style=\"color: rgb(34, 34, 34); font-family: arial, sans-serif; font-size: 16px; line-height: 19.2px;\">Docker</b><span style=\"color: rgb(34, 34, 34); font-family: arial, sans-serif; font-size: 16px; line-height: 19.2px;\">&nbsp;on them, then configures the&nbsp;</span><b style=\"color: rgb(34, 34, 34); font-family: arial, sans-serif; font-size: 16px; line-height: 19.2px;\">docker</b><span style=\"color: rgb(34, 34, 34); font-family: arial, sans-serif; font-size: 16px; line-height: 19.2px;\">&nbsp;client to talk to them. A “</span><b style=\"color: rgb(34, 34, 34); font-family: arial, sans-serif; font-size: 16px; line-height: 19.2px;\">machine</b><span style=\"color: rgb(34, 34, 34); font-family: arial, sans-serif; font-size: 16px; line-height: 19.2px;\">” is the combination of a&nbsp;</span><b style=\"color: rgb(34, 34, 34); font-family: arial, sans-serif; font-size: 16px; line-height: 19.2px;\">Docker</b><span style=\"color: rgb(34, 34, 34); font-family: arial, sans-serif; font-size: 16px; line-height: 19.2px;\">&nbsp;host and a configured client.</span>"}}}},"attr":{"style":{},"position":[104.5,-93,1]}},{"title":"How to setup","id":28,"ideas":{"1":{"title":"Wordpresss","id":29,"ideas":{"1":{"title":"https://hub.docker.com/_/wordpress/","id":30}},"attr":{"collapsed":true,"style":{}}},"2":{"title":"Dockerize itechdom-blog","id":39,"ideas":{"1":{"title":"Create a docker file in each project directory that","id":40,"ideas":{"1":{"title":"Pull repo","id":41},"2":{"title":"install all required images","id":42,"ideas":{"1":{"title":"java","id":43,"ideas":{"1":{"title":"gradle","id":46,"attr":{"style":{}}}}},"2":{"title":"scala","id":44},"3":{"title":"node","id":45,"ideas":{"1":{"title":"run npm install after","id":59}},"attr":{"style":{}}},"5":{"title":"haskell","id":49},"6":{"title":"PHP","id":50},"7":{"title":"ruby","id":52},"9":{"title":"swift","id":54},"10":{"title":"c compiler if needed","id":58}}}}}},"attr":{"style":{},"collapsed":true}},"3":{"title":"dockerize node","id":61,"ideas":{"1":{"title":"https://nodejs.org/en/docs/guides/nodejs-docker-webapp/","id":62}},"attr":{"style":{},"collapsed":true}}},"attr":{"position":[75.5,170,3],"style":{},"collapsed":true}},{"title":"Conventions","id":33,"ideas":{"1":{"title":"LXC","id":34,"ideas":{"1":{"title":"Linux Containers","id":35}}}},"attr":{"style":{},"collapsed":true}},{"title":"resources","id":2,"ideas":{"1":{"title":"http://docs.docker.com/mac/step_two/","id":3,"ideas":{"1":{"title":"doc how to get started with docker","id":4}},"attr":{"style":{}}},"2":{"title":"https://docs.docker.com/mac/step_three/","id":9,"ideas":{"1":{"title":"whalesay example","id":10}},"attr":{"style":{}}},"3":{"title":"https://docs.docker.com/engine/userguide/usingdocker/#run-a-simple-application","id":18,"ideas":{"1":{"title":"docker docs","id":19}},"attr":{"style":{}}},"4":{"title":"https://hub.docker.com/","id":20,"ideas":{"1":{"title":"hub docker","id":21}},"attr":{"style":{}}},"5":{"title":"https://github.com/wsargent/docker-cheat-sheet","id":26,"ideas":{"1":{"title":"docker cheat sheets","id":27}},"attr":{"style":{}}},"6":{"title":"How to create a docker file","id":37,"ideas":{"1":{"title":"https://www.digitalocean.com/community/tutorials/docker-explained-using-dockerfiles-to-automate-building-of-images","id":38}}},"7":{"title":"Linking containers together","id":63,"ideas":{"1":{"title":"https://docs.docker.com/v1.8/userguide/dockerlinks/","id":64}}}},"attr":{"style":{},"position":[142.5,-47,2],"collapsed":true}}]