{
  "title": "Scala",
  "id": 1,
  "formatVersion": 2,
  "ideas": {
    "14": {
      "title": "Concepts",
      "id": 176,
      "ideas": {
        "1": {
          "title": "Traits",
          "id": 237,
          "ideas": {},
          "attr": {
            "style": {}
          }
        },
        "2": {
          "title": "Higher Order functions",
          "id": 239
        },
        "3": {
          "title": "Functional",
          "id": 240
        },
        "4": {
          "title": "Lang features",
          "id": 241,
          "attr": {
            "attachment": {
              "contentType": "text/html",
              "content": "<div>SEAMLESS JAVA INTEROP<br></div><div>Scala runs on the JVM, so Java and Scala stacks can be freely mixed for totally seamless integration.</div><div><br></div><div>TYPE INFERENCE</div><div>So the type system doesn’t feel so static. Don’t work for the type system. Let the type system work for you!</div><div><br></div><div>CONCURRENCY</div><div>&amp; DISTRIBUTION</div><div>Use data-parallel operations on collections, use actors for concurrency and distribution, or futures for asynchronous programming.</div><div><br></div><div>TRAITS</div><div>Combine the flexibility of Java-style interfaces with the power of classes. Think principled multiple-inheritance.</div><div><br></div><div>PATTERN MATCHING</div><div>Think “switch” on steroids. Match against class hierarchies, sequences, and more.</div><div><br></div><div>HIGHER-ORDER FUNCTIONS</div><div>Functions are first-class objects. Compose them with guaranteed type safety. Use them anywhere, pass them to anything.</div>"
            },
            "style": {}
          }
        },
        "5": {
          "title": "Actors",
          "id": 286,
          "attr": {
            "style": {},
            "collapsed": true
          },
          "ideas": {
            "1": {
              "title": "Currently Akka actors",
              "id": 288
            }
          }
        },
        "6": {
          "title": "Classes ",
          "id": 291,
          "ideas": {
            "1": {
              "title": "case classes",
              "id": 292,
              "ideas": {
                "1": {
                  "title": "used as a value object?",
                  "id": 293,
                  "attr": {
                    "style": {
                      "background": "#800000"
                    }
                  }
                },
                "2": {
                  "title": "no need for new to initialize an object",
                  "id": 294
                }
              },
              "attr": {
                "collapsed": true,
                "style": {}
              }
            },
            "2": {
              "title": "object",
              "id": 296,
              "ideas": {
                "1": {
                  "title": "a static class?",
                  "id": 297
                }
              },
              "attr": {
                "collapsed": true,
                "style": {}
              }
            }
          },
          "attr": {
            "collapsed": true,
            "style": {}
          }
        },
        "7": {
          "title": "Collections",
          "id": 298,
          "ideas": {
            "1": {
              "title": "by default immutable",
              "id": 299
            },
            "2": {
              "title": "Seq",
              "id": 307,
              "ideas": {
                "1": {
                  "title": "a type of collections",
                  "id": 308
                },
                "2": {
                  "title": "http://www.scala-lang.org/api/current/index.html#scala.collection.Seq",
                  "id": 309
                }
              }
            }
          },
          "attr": {
            "style": {}
          }
        },
        "8": {
          "title": "lambdas",
          "id": 300,
          "ideas": {
            "1": {
              "title": "=>",
              "id": 301
            }
          },
          "attr": {
            "collapsed": true,
            "style": {}
          }
        }
      },
      "attr": {
        "style": {},
        "position": [
          72.5,
          -58,
          7
        ]
      }
    },
    "15": {
      "title": "Resources",
      "id": 234,
      "ideas": {
        "1": {
          "title": "http://www.scala-lang.org/documentation/",
          "id": 235,
          "ideas": {
            "1": {
              "title": "Scala Docs",
              "id": 236
            }
          },
          "attr": {
            "style": {}
          }
        },
        "2": {
          "title": "sbt",
          "id": 245,
          "ideas": {
            "1": {
              "title": "build tool",
              "id": 246
            }
          }
        },
        "3": {
          "title": "Activiator",
          "id": 247
        },
        "4": {
          "title": "http://www.tutorialspoint.com/scala/scala_basic_syntax.htm",
          "id": 251,
          "ideas": {
            "1": {
              "title": "tutorials point",
              "id": 252
            }
          },
          "attr": {
            "style": {},
            "collapsed": true
          }
        },
        "5": {
          "title": "http://aperiodic.net/phil/scala/s-99/",
          "id": 255,
          "ideas": {
            "1": {
              "title": "99 scala problems",
              "id": 256
            }
          },
          "attr": {
            "style": {},
            "collapsed": true
          }
        },
        "6": {
          "title": "https://github.com/search?l=Scala&o=desc&q=scala&s=stars&type=Repositories&utf8=%E2%9C%93",
          "id": 257,
          "ideas": {
            "1": {
              "title": "top list of github repos",
              "id": 258
            }
          },
          "attr": {
            "style": {},
            "collapsed": true
          }
        }
      },
      "attr": {
        "position": [
          118.5,
          47,
          6
        ],
        "style": {},
        "collapsed": true
      }
    },
    "-2": {
      "title": "Project Starters",
      "id": 233,
      "ideas": {
        "1": {
          "title": "https://github.com/csoma/Scala-starter",
          "id": 242,
          "ideas": {
            "1": {
              "title": "scala-starter",
              "id": 278
            }
          }
        },
        "2": {
          "title": "https://github.com/scalatra/scalatra-sbt-prototype",
          "id": 243,
          "ideas": {
            "1": {
              "title": "Scalatara web framework",
              "id": 244
            }
          }
        }
      },
      "attr": {
        "style": {},
        "collapsed": true
      }
    },
    "-13": {
      "title": "Third Party",
      "id": 248,
      "attr": {
        "style": {},
        "position": [
          116.5,
          50,
          5
        ],
        "collapsed": true
      },
      "ideas": {
        "1": {
          "title": "play framework",
          "id": 250
        },
        "2": {
          "title": "scalatara",
          "id": 253
        },
        "3": {
          "title": "akka",
          "id": 254,
          "attr": {
            "attachment": {
              "contentType": "text/html",
              "content": "<div>Build powerful concurrent &amp; distributed applications</div><div>more easily. Akka is a toolkit and runtime</div><div>for building highly concurrent,</div><div>distributed, and resilient</div><div>message-driven applications</div><div>on the JVM.</div>"
            },
            "style": {},
            "collapsed": true
          },
          "ideas": {
            "1": {
              "title": "Scala actors are deprecated in favor of akka",
              "id": 287
            }
          }
        },
        "5": {
          "title": "spray",
          "id": 261,
          "ideas": {
            "1": {
              "title": "https://github.com/spray/spray",
              "id": 262,
              "ideas": {
                "1": {
                  "title": "Rest framework",
                  "id": 263
                }
              }
            },
            "2": {
              "title": "https://drive.google.com/open?id=0B9tPYCpuqoIrTEcyUUpLb1BPY2s",
              "id": 284,
              "ideas": {
                "1": {
                  "title": "my spray road",
                  "id": 285
                }
              }
            }
          },
          "attr": {
            "style": {},
            "collapsed": true
          }
        },
        "6": {
          "title": "spark",
          "id": 266,
          "ideas": {
            "1": {
              "title": "https://github.com/mesos/spark",
              "id": 267
            }
          },
          "attr": {
            "collapsed": true,
            "style": {}
          }
        },
        "14": {
          "title": "twitter scala http services",
          "id": 269,
          "attr": {
            "style": {},
            "collapsed": true
          },
          "ideas": {
            "1": {
              "title": "https://github.com/twitter/finatra",
              "id": 268,
              "ideas": {},
              "attr": {
                "style": {}
              }
            }
          }
        },
        "15": {
          "title": "Sqeyrel, sql wrapper",
          "id": 271,
          "attr": {
            "style": {},
            "collapsed": true
          },
          "ideas": {
            "1": {
              "title": "https://github.com/squeryl/squeryl",
              "id": 270,
              "ideas": {},
              "attr": {
                "style": {}
              }
            }
          }
        },
        "16": {
          "title": "Di in Scala",
          "id": 273,
          "attr": {
            "style": {},
            "collapsed": true
          },
          "ideas": {
            "1": {
              "title": "https://github.com/adamw/macwire",
              "id": 272,
              "ideas": {},
              "attr": {
                "style": {}
              }
            }
          }
        },
        "17": {
          "title": "Scala-Android",
          "id": 280,
          "attr": {
            "style": {},
            "collapsed": true
          },
          "ideas": {
            "1": {
              "title": "http://macroid.github.io/ScalaOnAndroid.html",
              "id": 279,
              "ideas": {},
              "attr": {
                "style": {}
              }
            }
          }
        },
        "18": {
          "title": "scalafx examples",
          "id": 277,
          "attr": {
            "style": {},
            "collapsed": true
          },
          "ideas": {
            "1": {
              "title": "https://github.com/scalafx/ScalaFX-Tutorials",
              "id": 276,
              "ideas": {},
              "attr": {
                "style": {}
              }
            }
          }
        },
        "19": {
          "title": "scalafx",
          "id": 275,
          "attr": {
            "style": {},
            "collapsed": true
          },
          "ideas": {
            "1": {
              "title": "http://www.scalafx.org/docs/home/",
              "id": 274,
              "ideas": {},
              "attr": {
                "style": {}
              }
            }
          }
        },
        "20": {
          "title": "Exercises and examples",
          "id": 265,
          "attr": {
            "style": {},
            "collapsed": true
          },
          "ideas": {
            "1": {
              "title": "https://github.com/fpinscala/fpinscala",
              "id": 264,
              "ideas": {},
              "attr": {
                "style": {
                  "background": "#993300"
                }
              }
            }
          }
        },
        "21": {
          "title": "functional programming extension",
          "id": 260,
          "attr": {
            "style": {},
            "collapsed": true
          },
          "ideas": {
            "1": {
              "title": "https://github.com/scalaz/scalaz",
              "id": 259,
              "ideas": {},
              "attr": {
                "style": {}
              }
            }
          }
        },
        "22": {
          "title": "sbt",
          "id": 303,
          "ideas": {
            "1": {
              "title": "build tool",
              "id": 305
            }
          }
        }
      }
    },
    "-23": {
      "title": "Pain Point",
      "id": 289,
      "attr": {
        "position": [
          108.5,
          132,
          8
        ],
        "style": {
          "background": "#800000"
        },
        "collapsed": true
      },
      "ideas": {
        "1": {
          "title": "What's the reverse arrow -> in Scala loops",
          "id": 290,
          "attr": {
            "attachment": {
              "contentType": "text/html",
              "content": "The left-arrow &lt;- operator is called a generator, so named because it's generating individual values from a range.<div><br></div><div><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\">Following is the example of for loop with range using i to j syntax:</span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\"><br></span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\">&lt;code&gt;object Test {</span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\">&nbsp; &nbsp;def main(args: Array[String]) {</span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\">&nbsp; &nbsp; &nbsp; var a = 0;</span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\">&nbsp; &nbsp; &nbsp; // for loop execution with a range</span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\">&nbsp; &nbsp; &nbsp; for( a &lt;- 1 to 10){</span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;println( \"Value of a: \" + a );</span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\">&nbsp; &nbsp; &nbsp; }</span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\">&nbsp; &nbsp;}</span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><font color=\"#000000\" face=\"Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif\"><span style=\"font-size: 15px; line-height: 24px;\">}</span></font></p><p style=\"box-sizing: border-box; margin: 0em 0.2em 1em; word-wrap: break-word; padding: 0px; text-align: justify;\"><span style=\"font-size: 15px; line-height: 24px; color: rgb(0, 0, 0); font-family: Verdana, Geneva, Tahoma, Arial, Helvetica, sans-serif;\">&lt;/code&gt;</span></p></div>"
            },
            "style": {}
          }
        },
        "2": {
          "title": "Blocks vs Functions",
          "id": 302,
          "ideas": {
            "1": {
              "title": "http://stackoverflow.com/questions/19007611/understanding-scala-blocks",
              "id": 310,
              "ideas": {
                "1": {
                  "title": "blocks similar to anonymous classes in java",
                  "id": 311,
                  "attr": {
                    "style": {}
                  }
                },
                "2": {
                  "title": "apply method is what's called internally",
                  "id": 314
                }
              }
            }
          },
          "attr": {
            "collapsed": true,
            "style": {}
          }
        }
      }
    }
  },
  "links": [],
  "attr": {
    "style": {}
  }
}