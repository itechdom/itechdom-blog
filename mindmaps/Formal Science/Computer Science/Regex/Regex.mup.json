{
  "title": "Regex",
  "id": 1,
  "formatVersion": 2,
  "ideas": {
    "2": {
      "title": "Resources",
      "ideas": {
        "1": {
          "title": "http://regex.learncodethehardway.org/book/",
          "id": 4,
          "ideas": {
            "1": {
              "title": "Regex the hard way",
              "id": 5
            }
          }
        },
        "2": {
          "title": "Follow Along exercises",
          "id": 6
        }
      },
      "id": 3,
      "attr": {
        "style": {}
      }
    },
    "-1": {
      "title": "Concepts",
      "id": 7,
      "ideas": {
        "1": {
          "title": "Basics",
          "id": 8,
          "attr": {
            "attachment": {
              "contentType": "text/html",
              "content": "<div id=\"wmd-preview-section-34\" class=\"wmd-preview-section preview-content\" style=\"box-sizing: border-box; color: rgb(63, 63, 63); font-family: 'Source Sans Pro', sans-serif; font-size: 18px; line-height: 26.1000003814697px; text-align: justify; outline: none !important; background-color: rgb(246, 246, 246);\"><h3 id=\"regex-basics\" style=\"box-sizing: border-box; font-weight: 300; line-height: 1.1; margin-top: 1.5em; margin-bottom: 1.5em; font-size: 1.7em; text-align: start; outline: none !important;\">Regex Basics</h3><ul style=\"box-sizing: border-box; margin-bottom: 1.1em; outline: none !important;\"><li style=\"box-sizing: border-box; outline: none !important;\">[abc] A single character: a, b or c</li><li style=\"box-sizing: border-box; outline: none !important;\">[^abc] Any single character but a, b, or c</li><li style=\"box-sizing: border-box; outline: none !important;\">[a-z] Any single character in the range a-z</li><li style=\"box-sizing: border-box; outline: none !important;\">[a-zA-Z] Any single character in the range a-z or A-Z</li><li style=\"box-sizing: border-box; outline: none !important;\">[1-9] any number between 1 and 9</li><li style=\"box-sizing: border-box; outline: none !important;\">^ Start of line</li><li style=\"box-sizing: border-box; outline: none !important;\">$ End of line</li><li style=\"box-sizing: border-box; outline: none !important;\">\\A Start of string</li><li style=\"box-sizing: border-box; outline: none !important;\">\\z End of string</li></ul></div><div id=\"wmd-preview-section-35\" class=\"wmd-preview-section preview-content\" style=\"box-sizing: border-box; color: rgb(63, 63, 63); font-family: 'Source Sans Pro', sans-serif; font-size: 18px; line-height: 26.1000003814697px; text-align: justify; outline: none !important; background-color: rgb(246, 246, 246);\"><h3 id=\"shortcuts-meta-characters\" style=\"box-sizing: border-box; font-weight: 300; line-height: 1.1; margin-top: 1.5em; margin-bottom: 1.5em; font-size: 1.7em; text-align: start; outline: none !important;\">Shortcuts (meta characters)</h3><ul style=\"box-sizing: border-box; margin-bottom: 1.1em; outline: none !important;\"><li style=\"box-sizing: border-box; outline: none !important;\">. Any single character</li><li style=\"box-sizing: border-box; outline: none !important;\">\\s Any whitespace character</li><li style=\"box-sizing: border-box; outline: none !important;\">\\S Any non-whitespace character</li><li style=\"box-sizing: border-box; outline: none !important;\">\\d Any digit</li><li style=\"box-sizing: border-box; outline: none !important;\">\\D Any non-digit</li><li style=\"box-sizing: border-box; outline: none !important;\">\\w Any word character (letter, number, underscore)</li><li style=\"box-sizing: border-box; outline: none !important;\">\\W Any non-word character</li><li style=\"box-sizing: border-box; outline: none !important;\">\\b Any word boundary character</li></ul></div><div id=\"wmd-preview-section-36\" class=\"wmd-preview-section preview-content\" style=\"box-sizing: border-box; color: rgb(63, 63, 63); font-family: 'Source Sans Pro', sans-serif; font-size: 18px; line-height: 26.1000003814697px; text-align: justify; outline: none !important; background-color: rgb(246, 246, 246);\"><h3 id=\"groups\" style=\"box-sizing: border-box; font-weight: 300; line-height: 1.1; margin-top: 1.5em; margin-bottom: 1.5em; font-size: 1.7em; text-align: start; outline: none !important;\">Groups</h3><ul style=\"box-sizing: border-box; margin-bottom: 1.1em; outline: none !important;\"><li style=\"box-sizing: border-box; outline: none !important;\">(â€¦) Capture everything enclosed</li><li style=\"box-sizing: border-box; outline: none !important;\">(a|b) a or b</li><li style=\"box-sizing: border-box; outline: none !important;\">? Zero or one of a</li><li style=\"box-sizing: border-box; outline: none !important;\">* Zero or more of a</li><li style=\"box-sizing: border-box; outline: none !important;\">+ One or more of a</li><li style=\"box-sizing: border-box; outline: none !important;\">{3} Exactly 3 of a</li><li style=\"box-sizing: border-box; outline: none !important;\">{3,} 3 or more of a</li><li style=\"box-sizing: border-box; outline: none !important;\">a{3,6} Between 3 and 6 of a</li></ul></div><div id=\"wmd-preview-section-37\" class=\"wmd-preview-section preview-content\" style=\"box-sizing: border-box; color: rgb(63, 63, 63); font-family: 'Source Sans Pro', sans-serif; font-size: 18px; line-height: 26.1000003814697px; text-align: justify; outline: none !important; background-color: rgb(246, 246, 246);\"><h3 id=\"characters-that-needs-to-be-escaped\" style=\"box-sizing: border-box; font-weight: 300; line-height: 1.1; margin-top: 1.5em; margin-bottom: 1.5em; font-size: 1.7em; text-align: start; outline: none !important;\">Characters that needs to be escaped.</h3><ul style=\"box-sizing: border-box; margin-bottom: 1.1em; outline: none !important;\"><li style=\"box-sizing: border-box; outline: none !important;\">They are escaped with a backward slash \\\\</li><li style=\"box-sizing: border-box; outline: none !important;\">Characters are:</li></ul></div><div id=\"wmd-preview-section-38\" class=\"wmd-preview-section preview-content\" style=\"box-sizing: border-box; color: rgb(63, 63, 63); font-family: 'Source Sans Pro', sans-serif; font-size: 18px; line-height: 26.1000003814697px; text-align: justify; outline: none !important; background-color: rgb(246, 246, 246);\"><pre class=\"prettyprint\" style=\"box-sizing: border-box; font-family: 'Source Code Pro', monospace; font-size: 0.9em; padding: 10px 20px; margin-bottom: 1.1em; line-height: 1.45; word-break: break-word; border: 0px; border-radius: 5px; text-align: start; outline: none !important; background-color: rgba(128, 128, 128, 0.0470588);\"><code class=\" hljs ruby\" style=\"box-sizing: border-box; font-family: 'Source Code Pro', monospace; font-size: inherit; padding: 0.5em; color: rgb(0, 0, 0); border-radius: 0px; display: block; outline: none !important; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;\">. | ( ) [ ] { } + \\ ^ <span class=\"hljs-variable\" style=\"box-sizing: border-box; outline: none !important;\">$ </span>* ?</code></pre></div>"
            },
            "style": {}
          }
        },
        "2": {
          "title": "Capturing",
          "id": 9,
          "attr": {
            "attachment": {
              "contentType": "text/html",
              "content": "<div>### capturing</div><div><br></div><div>* We can specify variables in regex that we can refer to later</div><div>* The exampel below stores month, day and year when given a date.</div><div><br></div><div>```ruby</div><div><br></div><div>(?&lt;month&gt;\\d{1,2})\\/(?&lt;day&gt;\\d{1,2})\\/(?&lt;year&gt;\\d{4})</div><div>```</div><div><br></div><div>Then we can do something like this:</div><div>```ruby</div><div>date_string = \"06/11/1985\"</div><div>pattern = /(?&lt;month&gt;\\d{1,2})\\/(?&lt;day&gt;\\d{1,2})\\/(?&lt;year&gt;\\d{4})/</div><div>result = date_string.match(pattern)</div><div># we can now access the days, month and year</div><div>result[:day] #11</div><div>result[:month] #06</div><div>result[:year] #1985</div><div><br></div><div>```</div><div><br></div><div><br></div><div>### exercise</div><div><br></div><div>* Write a pattern that will take a decimal number (ie: 3.4)</div><div>* It captures the number in dollars and cents</div><div>* display the dollars and cents in that number</div><div>* You should modify the previous example</div><div>```ruby</div><div>(?&lt;month&gt;\\d{1,2})\\/(?&lt;day&gt;\\d{1,2})\\/(?&lt;year&gt;\\d{4})</div><div>```</div>"
            },
            "style": {}
          }
        },
        "3": {
          "title": "Ways to use Regex",
          "id": 10,
          "attr": {
            "attachment": {
              "contentType": "text/html",
              "content": "<div>### Ways to Use Regex in Ruby</div><div><br></div><div>* Match</div><div>* Scan</div><div>* =~</div><div>* Gsub</div><div>* Split</div><div><br></div><div>```ruby</div><div><br></div><div>a = /a/</div><div><br></div><div>a.class # Regexp</div><div><br></div><div>myString = \"A woman once said. A man once said. A child once said\"</div><div><br></div><div>match = myString.match(a) #this will return a</div><div><br></div><div>match = myString.scan(a) #this will return [\"a\", \"a\", \"a\", \"a\", \"a\"]</div><div><br></div><div>match = myString.gsub(a,\"b\") #this will replace all a(s) with b, leaving behind capital A</div><div><br></div><div>myString =~ a #return the index of the first occurance&nbsp;</div><div><br></div><div>match = myString.split(a) # split a string by a(s)</div><div><br></div><div>```</div>"
            },
            "style": {}
          }
        }
      }
    }
  },
  "links": [],
  "attr": {
    "style": {}
  }
}