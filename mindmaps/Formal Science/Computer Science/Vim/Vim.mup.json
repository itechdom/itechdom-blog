{
  "title": "Vim",
  "id": 1,
  "formatVersion": 2,
  "ideas": {
    "1": {
      "title": "Good Vimrc",
      "id": 7,
      "ideas": {
        "1": {
          "title": "http://dougblack.io/words/a-good-vimrc.html",
          "id": 9
        }
      }
    },
    "2": {
      "title": "Conventions",
      "id": 10,
      "ideas": {
        "1": {
          "title": "< >",
          "id": 11,
          "ideas": {
            "1": {
              "title": "Control whatever is in between",
              "id": 12
            }
          }
        },
        "2": {
          "title": "Word vs word",
          "id": 84,
          "ideas": {},
          "attr": {
            "attachment": {
              "contentType": "text/html",
              "content": "WORD: is a whole word till a comma or any other separator<div>word: is words till a space</div><div><br></div><div><div><br></div></div>"
            },
            "style": {}
          }
        }
      }
    },
    "12": {
      "title": "Plugins",
      "id": 19,
      "attr": {
        "position": [
          76,
          83,
          1
        ],
        "style": {}
      },
      "ideas": {
        "1": {
          "title": "Surround",
          "id": 20,
          "ideas": {
            "1": {
              "title": "http://vimawesome.com/plugin/surround-vim",
              "id": 21
            },
            "2": {
              "title": "ysiw\" to surround with \" till the next notation",
              "id": 22
            }
          }
        },
        "2": {
          "title": "Easy Motion",
          "id": 23,
          "ideas": {
            "1": {
              "title": "https://github.com/easymotion/vim-easymotion",
              "id": 24
            }
          }
        },
        "3": {
          "title": "Vimproc",
          "id": 25,
          "ideas": {
            "1": {
              "title": "https://github.com/Shougo/vimproc.vim",
              "id": 26,
              "ideas": {
                "1": {
                  "title": "execute commands in Vim",
                  "id": 27
                }
              }
            }
          }
        }
      }
    },
    "-2": {
      "title": "Vim Commands",
      "id": 18,
      "ideas": {
        "1": {
          "title": "Cheat sheet",
          "ideas": {
            "1": {
              "title": "http://www.fprintf.net/vimCheatSheet.html",
              "id": 5
            },
            "2": {
              "title": "http://www.viemu.com/vi-vim-cheat-sheet.gif",
              "id": 6,
              "ideas": {
                "1": {
                  "title": "the dot here means there's extra stuff",
                  "id": 103
                }
              }
            }
          },
          "id": 4,
          "attr": {
            "style": {}
          }
        },
        "2": {
          "title": "Search for a code in the whole project",
          "id": 13,
          "attr": {
            "style": {}
          },
          "ideas": {
            "1": {
              "title": "https://lostechies.com/derickbailey/2010/05/11/vim-grep-find-all-occurrences-of-text-in-your-project/",
              "id": 14,
              "ideas": {
                "1": {
                  "title": ":vimgrep /code_snippet/gj ./**/*.rb",
                  "id": 16,
                  "ideas": {
                    "1": {
                      "title": "Then type :cw",
                      "id": 17
                    }
                  }
                }
              }
            }
          }
        },
        "3": {
          "title": "Shortcuts",
          "id": 28,
          "ideas": {
            "1": {
              "title": "C",
              "id": 29,
              "ideas": {
                "1": {
                  "title": "remove everything till you hit the end of the line",
                  "id": 30,
                  "ideas": {}
                }
              }
            },
            "2": {
              "title": "R",
              "id": 33,
              "ideas": {
                "1": {
                  "title": "Replace Mode",
                  "id": 34
                }
              }
            },
            "3": {
              "title": "X",
              "id": 35,
              "ideas": {
                "1": {
                  "title": "Backspace",
                  "id": 36
                }
              }
            },
            "4": {
              "title": "Q",
              "id": 37,
              "ideas": {
                "1": {
                  "title": "Ex Macro",
                  "id": 38,
                  "ideas": {}
                }
              }
            },
            "5": {
              "title": "q",
              "id": 41,
              "ideas": {
                "1": {
                  "title": "Macro",
                  "id": 42,
                  "ideas": {
                    "1": {
                      "title": "http://vim.wikia.com/wiki/Macros",
                      "id": 43,
                      "ideas": {
                        "1": {
                          "title": "Each register is identified by a letter a to z.",
                          "id": 53
                        },
                        "2": {
                          "title": "q",
                          "id": 54,
                          "attr": {
                            "style": {}
                          },
                          "ideas": {
                            "1": {
                              "title": "then",
                              "id": 55,
                              "ideas": {
                                "1": {
                                  "title": "d",
                                  "id": 56,
                                  "ideas": {
                                    "1": {
                                      "title": "then",
                                      "id": 57,
                                      "ideas": {
                                        "1": {
                                          "title": "series of commands",
                                          "id": 58,
                                          "ideas": {
                                            "1": {
                                              "title": "q to stop",
                                              "id": 59,
                                              "ideas": {
                                                "1": {
                                                  "title": "@q",
                                                  "id": 60,
                                                  "ideas": {
                                                    "1": {
                                                      "title": "to executre",
                                                      "id": 61
                                                    },
                                                    "2": {
                                                      "title": "@@ to execute again",
                                                      "id": 62
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "3": {
                          "title": "use case",
                          "id": 63,
                          "ideas": {
                            "1": {
                              "title": "you want to transform this data",
                              "id": 64,
                              "ideas": {},
                              "attr": {
                                "attachment": {
                                  "contentType": "text/html",
                                  "content": "<div>Given some data like the following:</div><div><br></div><div>one&nbsp;<span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>first example</div><div>two<span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>&nbsp;second example</div><div>three<span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>&nbsp;third example</div><div>four&nbsp;<span class=\"Apple-tab-span\" style=\"white-space:pre\"><span style=\"white-space: normal;\">\t</span></span>fourth example</div><div>suppose you want to change the data to make a dictionary for a Python program, with this result:</div><div><br></div><div>data = {</div><div>&nbsp; &nbsp; 'one': 'first example',</div><div>&nbsp; &nbsp; 'two': 'second example',</div><div>&nbsp; &nbsp; 'three': 'third example',</div><div>&nbsp; &nbsp; 'four': 'fourth example',</div><div>}</div><div><div>To do this, record a macro while changing the first line. Then, playback the macro to change each other line. When finished, manually insert the initial \"data = {\" line, and the final \"}\" line.</div><div><br></div><div>The following shows one way to record a suitable macro.</div><div><br></div><div>Put the cursor on the first line.</div><div>Type qd (the q starts recording; the d is the register where keys will be recorded).</div><div>Type the following command to change the first sequence of whitespace to \"': '\":</div><div>:s/\\s\\+/': ' (then press Enter)</div><div>Type the following to insert four spaces followed by \"'\" at the start of the line:</div><div>I &nbsp; &nbsp;' (then press Escape)</div><div>Type the following to append \"',\" to the line:</div><div>A', (then press Escape)</div><div>Type the following to move the cursor to the start of the line, then down to the next line:</div><div>0j</div><div>Type q to stop recording the macro.</div><div>The cursor should now be on the second line. Type @d to playback the macro once. That should change the second line, with the cursor finishing on the third line. Type 2@@ to finish. The 2 means that what follows is performed twice, and the @@ plays back the last used macro. Instead of 2@@, you could type @d or @@ twice.</div></div>"
                                },
                                "style": {}
                              }
                            }
                          }
                        },
                        "4": {
                          "title": "a nice mapping",
                          "id": 67,
                          "attr": {
                            "attachment": {
                              "contentType": "text/html",
                              "content": "<div>Running a macroEdit</div><div>Use this mapping as a convenient way to play a macro recorded to register q:</div><div><br></div><div>:nnoremap &lt;Space&gt; @q</div><div>Start recording keystrokes by typing qq.</div><div>End recording with q (first press Escape if you are in insert mode).</div><div>Play the recorded keystrokes by hitting space.</div><div>Suppose you have a macro which operates on the text in a single line. You can run the macro on each line in a visual selection in a single operation:</div><div><br></div><div>Visually select some lines (for example, type vip to select the current paragraph).</div><div>Type :normal @q to run the macro from register q on each line.</div>"
                            },
                            "style": {}
                          }
                        },
                        "5": {
                          "title": "I stopped at saving a macro",
                          "id": 68,
                          "attr": {
                            "style": {
                              "background": "#800000"
                            }
                          }
                        }
                      },
                      "attr": {
                        "style": {},
                        "collapsed": true
                      }
                    }
                  },
                  "attr": {
                    "style": {}
                  }
                }
              },
              "attr": {
                "style": {}
              }
            },
            "6": {
              "title": ">>",
              "id": 46,
              "ideas": {
                "1": {
                  "title": "indent line",
                  "id": 47
                }
              }
            },
            "7": {
              "title": "~",
              "id": 48,
              "ideas": {
                "1": {
                  "title": "toggle case, upper and lower",
                  "id": 49,
                  "ideas": {}
                }
              }
            },
            "8": {
              "title": "#",
              "id": 69,
              "ideas": {
                "1": {
                  "title": "this will locate all the words within the file",
                  "id": 70
                }
              },
              "attr": {
                "style": {
                  "background": "#800000"
                }
              }
            },
            "9": {
              "title": "$",
              "id": 71,
              "ideas": {
                "1": {
                  "title": "End of line",
                  "id": 72
                }
              }
            },
            "10": {
              "title": "%",
              "id": 73,
              "ideas": {
                "1": {
                  "title": "matches braces , patentheses",
                  "id": 75
                }
              },
              "attr": {
                "style": {
                  "background": "#800000"
                }
              }
            },
            "11": {
              "title": "* ",
              "id": 76,
              "ideas": {
                "1": {
                  "title": "next matching",
                  "id": 77
                }
              }
            },
            "12": {
              "title": "O",
              "id": 78,
              "ideas": {
                "1": {
                  "title": "insert a line above",
                  "id": 79
                }
              }
            },
            "13": {
              "title": "P",
              "id": 80,
              "ideas": {
                "1": {
                  "title": "paste before",
                  "id": 81
                }
              }
            },
            "14": {
              "title": "a",
              "id": 87,
              "ideas": {
                "1": {
                  "title": "append after a chatacter",
                  "id": 88
                }
              }
            },
            "15": {
              "title": "A",
              "id": 90,
              "ideas": {
                "1": {
                  "title": "append at the end of a line",
                  "id": 91
                }
              }
            },
            "16": {
              "title": "s",
              "id": 92,
              "ideas": {
                "1": {
                  "title": "remove char & insert",
                  "id": 93,
                  "ideas": {}
                }
              }
            },
            "17": {
              "title": "S",
              "id": 98,
              "ideas": {
                "1": {
                  "title": "remove line and insert mode",
                  "id": 99
                }
              }
            },
            "18": {
              "title": ".",
              "id": 106,
              "ideas": {
                "1": {
                  "title": "repeat command",
                  "id": 107,
                  "ideas": {
                    "1": {
                      "title": "so If i indented the line once I can just type it and it will repeat",
                      "id": 108
                    }
                  }
                }
              },
              "attr": {
                "style": {
                  "background": "#800000"
                }
              }
            }
          },
          "attr": {
            "style": {}
          }
        },
        "4": {
          "title": "%s",
          "id": 82,
          "ideas": {
            "1": {
              "title": "replace",
              "id": 83
            }
          }
        }
      },
      "attr": {
        "style": {}
      }
    },
    "-3": {
      "title": "Pain Points",
      "id": 45,
      "attr": {
        "style": {
          "background": "#800000"
        }
      },
      "ideas": {
        "1": {
          "title": "!",
          "id": 51,
          "ideas": {
            "1": {
              "title": "I dunno",
              "id": 52
            }
          }
        },
        "2": {
          "title": "|",
          "id": 100
        },
        "3": {
          "title": "t",
          "id": 101
        },
        "4": {
          "title": "f",
          "id": 102
        },
        "5": {
          "title": "m",
          "id": 105
        }
      }
    }
  },
  "links": [],
  "attr": {
    "style": {}
  }
}