[{"title":"Haskell","indent":0},{"indent":0,"title":"Haskell"},{"indent":1,"title":"resources"},{"indent":2,"title":"https://en.wikipedia.org/wiki/Haskell_(programming_language)"},{"indent":2,"title":"https://www.haskell.org/"},{"indent":3,"title":"official"},{"indent":2,"title":"https://en.wikibooks.org/wiki/Yet_Another_Haskell_Tutorial/Preamble"},{"indent":3,"title":"wikibooks"},{"indent":2,"title":"https://github.com/bitemyapp/learnhaskell"},{"indent":3,"title":"github repo"},{"indent":1,"title":"code examples"},{"indent":1,"content":"<p>Here is the&#xA0;<a href=\"https://en.wikipedia.org/wiki/Factorial\" title=\"Factorial\">factorial</a>&#xA0;function in Haskell, defined in a few different ways:</p><div class=\"mw-highlight mw-content-ltr\" dir=\"ltr\"><pre><span class=\"c1\">-- Type annotation (optional)</span>\n<span class=\"nf\">factorial</span> <span class=\"ow\">::</span> <span class=\"p\">(</span><span class=\"kt\">Integral</span> <span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"ow\">=&gt;</span> <span class=\"n\">a</span> <span class=\"ow\">-&gt;</span> <span class=\"n\">a</span>\n\n<span class=\"c1\">-- Using recursion</span>\n<span class=\"nf\">factorial</span> <span class=\"n\">n</span> <span class=\"o\">|</span> <span class=\"n\">n</span> <span class=\"o\">&lt;</span> <span class=\"mi\">2</span> <span class=\"ow\">=</span> <span class=\"mi\">1</span>\n<span class=\"nf\">factorial</span> <span class=\"n\">n</span> <span class=\"ow\">=</span> <span class=\"n\">n</span> <span class=\"o\">*</span> <span class=\"n\">factorial</span> <span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\">-- Using recursion, with guards</span>\n<span class=\"nf\">factorial</span> <span class=\"n\">n</span>\n  <span class=\"o\">|</span> <span class=\"n\">n</span> <span class=\"o\">&lt;</span> <span class=\"mi\">2</span>     <span class=\"ow\">=</span> <span class=\"mi\">1</span>\n  <span class=\"o\">|</span> <span class=\"n\">otherwise</span> <span class=\"ow\">=</span> <span class=\"n\">n</span> <span class=\"o\">*</span> <span class=\"n\">factorial</span> <span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\">-- Using recursion but written without pattern matching</span>\n<span class=\"nf\">factorial</span> <span class=\"n\">n</span> <span class=\"ow\">=</span> <span class=\"kr\">if</span> <span class=\"n\">n</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"kr\">then</span> <span class=\"n\">n</span> <span class=\"o\">*</span> <span class=\"n\">factorial</span> <span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"kr\">else</span> <span class=\"mi\">1</span>\n\n<span class=\"c1\">-- Using a list</span>\n<span class=\"nf\">factorial</span> <span class=\"n\">n</span> <span class=\"ow\">=</span> <span class=\"n\">product</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"o\">..</span><span class=\"n\">n</span><span class=\"p\">]</span>\n\n<span class=\"c1\">-- Using fold (implements product)</span>\n<span class=\"nf\">factorial</span> <span class=\"n\">n</span> <span class=\"ow\">=</span> <span class=\"n\">foldl</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)</span> <span class=\"mi\">1</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"o\">..</span><span class=\"n\">n</span><span class=\"p\">]</span>\n\n<span class=\"c1\">-- Point-free style</span>\n<span class=\"nf\">factorial</span> <span class=\"ow\">=</span> <span class=\"n\">foldr</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)</span> <span class=\"mi\">1</span> <span class=\"o\">.</span> <span class=\"n\">enumFromTo</span> <span class=\"mi\">1</span></pre></div>"},{"indent":2,"title":"Simple main"},{"indent":2,"content":"<pre class=\"de1\">main <span class=\"sy0\">::</span> <span class=\"kw4\">IO</span> <span class=\"br0\">(</span><span class=\"br0\">)</span>\nmain <span class=\"sy0\">=</span> <span class=\"kw1\">do</span>\n    <span class=\"kw3\">putStrLn</span> <span class=\"st0\">&quot;Enter two lines&quot;</span>\n    line1 <span class=\"sy0\">&lt;-</span> <span class=\"kw3\">getLine</span>                                    <span class=\"co1\">-- line1&#xA0;:: String</span>\n    line2 <span class=\"sy0\">&lt;-</span> <span class=\"kw3\">getLine</span>                                    <span class=\"co1\">-- line2&#xA0;:: String</span>\n    <span class=\"kw3\">putStrLn</span> <span class=\"br0\">(</span><span class=\"st0\">&quot;you said: &quot;</span> <span class=\"sy0\">++</span> line1 <span class=\"sy0\">++</span> <span class=\"st0\">&quot; and &quot;</span> <span class=\"sy0\">++</span> line2<span class=\"br0\">)</span></pre>"},{"indent":2,"title":"https://wiki.haskell.org/Learn_Haskell_in_10_minutes#Simple_expressions"},{"indent":3,"title":"simple tutorial"},{"indent":1,"title":"installation"},{"indent":2,"title":"https://github.com/bitemyapp/learnhaskell/blob/master/install.md"},{"indent":1,"title":"concepts"},{"indent":2,"title":"strict but you don't have to specify sometimes?"},{"indent":2,"content":"<pre><span class=\"c1\">-- Type annotation (optional)</span>\n<span class=\"nf\">factorial</span> <span class=\"ow\">::</span> <span class=\"p\">(</span><span class=\"kt\">Integral</span> <span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"ow\">=&gt;</span> <span class=\"n\">a</span> <span class=\"ow\">-&gt;</span> <span class=\"n\">a</span></pre>"},{"indent":2,"title":"do you have to declare things twice?"},{"indent":2,"title":"Pure"},{"indent":2,"title":"Lazy"},{"indent":2,"title":"Functional"},{"indent":2,"title":"Patentheses not required"},{"indent":1,"title":"tools"},{"indent":2,"title":"GHC"},{"indent":3,"title":"Compiler, REPL, "},{"indent":3,"title":"command to compile"},{"indent":4,"title":"% ghc --make Main.hs -o main"},{"indent":2,"title":"Cabal"},{"indent":3,"title":"Package Manager"}]